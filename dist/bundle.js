/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"c\"] = memoize;\nlet processors = {};\nlet MIDIPorts = {};\n\nfunction updateProcessors(state) {\n    processors = {};\n    state.processors.forEach(processor => {\n        processors[processor.id] = processor;\n    })\n}\n\nfunction updateMIDIPorts(state) {\n    MIDIPorts = {};\n    state.inputs.forEach(input => {\n        MIDIPorts[input.id] = input;\n    });\n    state.outputs.forEach(output => {\n        MIDIPorts[output.id] = output;\n    });\n}\n\nfunction memoize(state, action = {}, actions) {\n    switch(action.type) {\n        case actions.CREATE_PROCESSOR:\n        case actions.DELETE_PROCESSOR:\n            updateProcessors(state);\n            break;\n        case actions.ADD_MIDI_PORT:\n        case actions.REMOVE_MIDI_PORT:\n        case actions.TOGGLE_MIDI_PREFERENCE:\n            updateMIDIPorts(state);\n            break;\n    }\n}\n\n/**\n * Memoised selector to access processors by id as object key.\n * Recreates the memoised data each time a processor is created or deleted.\n */\nconst getProcessorByID = id => processors[id];\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getProcessorByID;\n\n\nconst getMIDIPortByID = id => MIDIPorts[id];\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getMIDIPortByID;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvc3RhdGUvc2VsZWN0b3JzLmpzPzFmY2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsbUNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFFQSw0QyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHByb2Nlc3NvcnMgPSB7fTtcbmxldCBNSURJUG9ydHMgPSB7fTtcblxuZnVuY3Rpb24gdXBkYXRlUHJvY2Vzc29ycyhzdGF0ZSkge1xuICAgIHByb2Nlc3NvcnMgPSB7fTtcbiAgICBzdGF0ZS5wcm9jZXNzb3JzLmZvckVhY2gocHJvY2Vzc29yID0+IHtcbiAgICAgICAgcHJvY2Vzc29yc1twcm9jZXNzb3IuaWRdID0gcHJvY2Vzc29yO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZU1JRElQb3J0cyhzdGF0ZSkge1xuICAgIE1JRElQb3J0cyA9IHt9O1xuICAgIHN0YXRlLmlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgICAgTUlESVBvcnRzW2lucHV0LmlkXSA9IGlucHV0O1xuICAgIH0pO1xuICAgIHN0YXRlLm91dHB1dHMuZm9yRWFjaChvdXRwdXQgPT4ge1xuICAgICAgICBNSURJUG9ydHNbb3V0cHV0LmlkXSA9IG91dHB1dDtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lbW9pemUoc3RhdGUsIGFjdGlvbiA9IHt9LCBhY3Rpb25zKSB7XG4gICAgc3dpdGNoKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgYWN0aW9ucy5DUkVBVEVfUFJPQ0VTU09SOlxuICAgICAgICBjYXNlIGFjdGlvbnMuREVMRVRFX1BST0NFU1NPUjpcbiAgICAgICAgICAgIHVwZGF0ZVByb2Nlc3NvcnMoc3RhdGUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgYWN0aW9ucy5BRERfTUlESV9QT1JUOlxuICAgICAgICBjYXNlIGFjdGlvbnMuUkVNT1ZFX01JRElfUE9SVDpcbiAgICAgICAgY2FzZSBhY3Rpb25zLlRPR0dMRV9NSURJX1BSRUZFUkVOQ0U6XG4gICAgICAgICAgICB1cGRhdGVNSURJUG9ydHMoc3RhdGUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufVxuXG4vKipcbiAqIE1lbW9pc2VkIHNlbGVjdG9yIHRvIGFjY2VzcyBwcm9jZXNzb3JzIGJ5IGlkIGFzIG9iamVjdCBrZXkuXG4gKiBSZWNyZWF0ZXMgdGhlIG1lbW9pc2VkIGRhdGEgZWFjaCB0aW1lIGEgcHJvY2Vzc29yIGlzIGNyZWF0ZWQgb3IgZGVsZXRlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFByb2Nlc3NvckJ5SUQgPSBpZCA9PiBwcm9jZXNzb3JzW2lkXTtcblxuZXhwb3J0IGNvbnN0IGdldE1JRElQb3J0QnlJRCA9IGlkID0+IE1JRElQb3J0c1tpZF07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvc3RhdGUvc2VsZWN0b3JzLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createBaseParameter;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__remote__ = __webpack_require__(22);\n\n\n/**\n * Base parameter functionality.\n */\nfunction createBaseParameter(specs, my) {\n    var that,\n        defaultValue = specs.default,\n        changedCallbacks = [],\n        \n        /**\n         * Call all callbacks if the parameter's value changed.\n         * @param {Number|String|Boolean|Array} oldValue Value before change.\n         */\n        valueChanged = function(oldValue) {\n            if (oldValue == my.props.value) {\n                return;\n            }\n            \n            for (var i = 0, n = changedCallbacks.length; i < n; i++) {\n                changedCallbacks[i](that, oldValue, my.props.value);\n            }\n        },\n    \n        /**\n         * Adds a callback function, invoked on value changed.\n         * @param {Function} callback The function, that will be invoked on value changed.\n         */\n        addChangedCallback = function(callback) {\n            changedCallbacks.push(callback);\n        },\n\n        /**\n         * Removes a callback function.\n         * @param {Function} callback The function that will be removed.\n         */\n        removeChangedCallback = function(callback) {\n            var index = changedCallbacks.indexOf(callback);\n            if (index > -1) {\n                changedCallbacks.splice(index, 1);\n            }\n        },\n    \n        /**\n         * Reset value to its initial default value.\n         */\n        reset = function() {\n            setValue(defaultValue);\n        },\n\n        /**\n         * Sets the current value of the parameter.\n         * If changed, inform all callbacks.\n         */\n        setValue = function(newValue) {\n            var oldValue = my.props.value;\n            my.props.value = newValue;\n            valueChanged(oldValue);\n        },\n    \n        /**\n         * Returns the current value of the parameter.\n         * @return {*} Parameter value.\n         */\n        getValue = function() {\n            return my.props.value;\n        },\n    \n        /**\n         * Sets the current value of the parameter\n         * by passing a normalized value between 0 and 1.\n         * If changed, inform all callbacks.\n         * @param normalizedValue A normalized value between 0 and 1.\n         */\n        setValueNormalized = function(normalizedValue) {\n            var oldValue = my.props.value;\n            my.props.value = my.deNormalize(normalizedValue);\n            valueChanged(oldValue);\n        },\n\n        /**\n         * Returns the current normalized value of the parameter between 0 and 1.\n         * @return {Number} Normalized value.\n         */\n        getValueNormalized = function() {\n            return my.normalize(my.props.value);\n        },\n        \n        /**\n         * Get a property's value.\n         * @param  {String} key Property name.\n         * @return {*} Property value.\n         */\n        getProperty = function(key) {\n            let propValue;\n            if (my.hasOwnProperty(key)) {\n                propValue =  my[key];\n            } else if (my.props.hasOwnProperty(key)) {\n                propValue =  my.props[key];\n            }\n            return propValue;\n        },\n        \n        /**\n         * Restore processor from data object.\n         * @param {Object} data Preferences data object.\n         */\n        setData = function(data) {\n            for (var key in my.props) {\n                if (my.props.hasOwnProperty(key)) {\n                    my.props[key] = data.props[key];\n                }\n            }\n            // use setValue to trigger callbacks\n            my.props.value = defaultValue;\n            setValue(data.props.value);\n        }, \n        \n        /**\n         * Write parameter properties to data object.\n         * @return {Object} Data object.\n         */\n        getData = function() {\n            var data = {\n                props: my.props\n            };\n            return data;\n        };\n        \n    my = my || {};\n    my.props = {\n        value: specs.value || specs.default,\n    };\n    my.type = specs.type;\n    my.label = specs.label;\n    my.key = specs.key;\n    my.isMidiControllable = specs.isMidiControllable;\n    \n    that = specs.that || {};\n    if (my.isMidiControllable) {\n        that = Object(__WEBPACK_IMPORTED_MODULE_0__remote__[\"a\" /* default */])(specs, my);\n    }\n    \n    that.addChangedCallback = addChangedCallback;\n    that.removeChangedCallback = removeChangedCallback;\n    that.reset = reset;\n    that.setValue = setValue;\n    that.getValue = getValue;\n    that.setValueNormalized = setValueNormalized;\n    that.getValueNormalized = getValueNormalized;\n    that.getProperty = getProperty;\n    that.setData = setData;\n    that.getData = getData;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL2Jhc2UuanM/N2QwZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsNEJBQTRCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0RBQXdELE9BQU87QUFDL0Q7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG9CQUFvQixFQUFFO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQixvQkFBb0IsRUFBRTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVSZW1vdGVQYXJhbWV0ZXIgZnJvbSAnLi9yZW1vdGUnXG5cbi8qKlxuICogQmFzZSBwYXJhbWV0ZXIgZnVuY3Rpb25hbGl0eS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQmFzZVBhcmFtZXRlcihzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgZGVmYXVsdFZhbHVlID0gc3BlY3MuZGVmYXVsdCxcbiAgICAgICAgY2hhbmdlZENhbGxiYWNrcyA9IFtdLFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbGwgYWxsIGNhbGxiYWNrcyBpZiB0aGUgcGFyYW1ldGVyJ3MgdmFsdWUgY2hhbmdlZC5cbiAgICAgICAgICogQHBhcmFtIHtOdW1iZXJ8U3RyaW5nfEJvb2xlYW58QXJyYXl9IG9sZFZhbHVlIFZhbHVlIGJlZm9yZSBjaGFuZ2UuXG4gICAgICAgICAqL1xuICAgICAgICB2YWx1ZUNoYW5nZWQgPSBmdW5jdGlvbihvbGRWYWx1ZSkge1xuICAgICAgICAgICAgaWYgKG9sZFZhbHVlID09IG15LnByb3BzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGNoYW5nZWRDYWxsYmFja3MubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY2hhbmdlZENhbGxiYWNrc1tpXSh0aGF0LCBvbGRWYWx1ZSwgbXkucHJvcHMudmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkcyBhIGNhbGxiYWNrIGZ1bmN0aW9uLCBpbnZva2VkIG9uIHZhbHVlIGNoYW5nZWQuXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiwgdGhhdCB3aWxsIGJlIGludm9rZWQgb24gdmFsdWUgY2hhbmdlZC5cbiAgICAgICAgICovXG4gICAgICAgIGFkZENoYW5nZWRDYWxsYmFjayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBjaGFuZ2VkQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW1vdmVzIGEgY2FsbGJhY2sgZnVuY3Rpb24uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgcmVtb3ZlZC5cbiAgICAgICAgICovXG4gICAgICAgIHJlbW92ZUNoYW5nZWRDYWxsYmFjayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBjaGFuZ2VkQ2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VkQ2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXNldCB2YWx1ZSB0byBpdHMgaW5pdGlhbCBkZWZhdWx0IHZhbHVlLlxuICAgICAgICAgKi9cbiAgICAgICAgcmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNldFZhbHVlKGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIHBhcmFtZXRlci5cbiAgICAgICAgICogSWYgY2hhbmdlZCwgaW5mb3JtIGFsbCBjYWxsYmFja3MuXG4gICAgICAgICAqL1xuICAgICAgICBzZXRWYWx1ZSA9IGZ1bmN0aW9uKG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgb2xkVmFsdWUgPSBteS5wcm9wcy52YWx1ZTtcbiAgICAgICAgICAgIG15LnByb3BzLnZhbHVlID0gbmV3VmFsdWU7XG4gICAgICAgICAgICB2YWx1ZUNoYW5nZWQob2xkVmFsdWUpO1xuICAgICAgICB9LFxuICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyLlxuICAgICAgICAgKiBAcmV0dXJuIHsqfSBQYXJhbWV0ZXIgdmFsdWUuXG4gICAgICAgICAqL1xuICAgICAgICBnZXRWYWx1ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG15LnByb3BzLnZhbHVlO1xuICAgICAgICB9LFxuICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0cyB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyXG4gICAgICAgICAqIGJ5IHBhc3NpbmcgYSBub3JtYWxpemVkIHZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgICAgICogSWYgY2hhbmdlZCwgaW5mb3JtIGFsbCBjYWxsYmFja3MuXG4gICAgICAgICAqIEBwYXJhbSBub3JtYWxpemVkVmFsdWUgQSBub3JtYWxpemVkIHZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgICAgICovXG4gICAgICAgIHNldFZhbHVlTm9ybWFsaXplZCA9IGZ1bmN0aW9uKG5vcm1hbGl6ZWRWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIG9sZFZhbHVlID0gbXkucHJvcHMudmFsdWU7XG4gICAgICAgICAgICBteS5wcm9wcy52YWx1ZSA9IG15LmRlTm9ybWFsaXplKG5vcm1hbGl6ZWRWYWx1ZSk7XG4gICAgICAgICAgICB2YWx1ZUNoYW5nZWQob2xkVmFsdWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IG5vcm1hbGl6ZWQgdmFsdWUgb2YgdGhlIHBhcmFtZXRlciBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICAgICAqIEByZXR1cm4ge051bWJlcn0gTm9ybWFsaXplZCB2YWx1ZS5cbiAgICAgICAgICovXG4gICAgICAgIGdldFZhbHVlTm9ybWFsaXplZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG15Lm5vcm1hbGl6ZShteS5wcm9wcy52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IGEgcHJvcGVydHkncyB2YWx1ZS5cbiAgICAgICAgICogQHBhcmFtICB7U3RyaW5nfSBrZXkgUHJvcGVydHkgbmFtZS5cbiAgICAgICAgICogQHJldHVybiB7Kn0gUHJvcGVydHkgdmFsdWUuXG4gICAgICAgICAqL1xuICAgICAgICBnZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgbGV0IHByb3BWYWx1ZTtcbiAgICAgICAgICAgIGlmIChteS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgcHJvcFZhbHVlID0gIG15W2tleV07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG15LnByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBwcm9wVmFsdWUgPSAgbXkucHJvcHNba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwcm9wVmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogUmVzdG9yZSBwcm9jZXNzb3IgZnJvbSBkYXRhIG9iamVjdC5cbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgUHJlZmVyZW5jZXMgZGF0YSBvYmplY3QuXG4gICAgICAgICAqL1xuICAgICAgICBzZXREYXRhID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG15LnByb3BzKSB7XG4gICAgICAgICAgICAgICAgaWYgKG15LnByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbXkucHJvcHNba2V5XSA9IGRhdGEucHJvcHNba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB1c2Ugc2V0VmFsdWUgdG8gdHJpZ2dlciBjYWxsYmFja3NcbiAgICAgICAgICAgIG15LnByb3BzLnZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgc2V0VmFsdWUoZGF0YS5wcm9wcy52YWx1ZSk7XG4gICAgICAgIH0sIFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdyaXRlIHBhcmFtZXRlciBwcm9wZXJ0aWVzIHRvIGRhdGEgb2JqZWN0LlxuICAgICAgICAgKiBAcmV0dXJuIHtPYmplY3R9IERhdGEgb2JqZWN0LlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0RGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgcHJvcHM6IG15LnByb3BzXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkucHJvcHMgPSB7XG4gICAgICAgIHZhbHVlOiBzcGVjcy52YWx1ZSB8fCBzcGVjcy5kZWZhdWx0LFxuICAgIH07XG4gICAgbXkudHlwZSA9IHNwZWNzLnR5cGU7XG4gICAgbXkubGFiZWwgPSBzcGVjcy5sYWJlbDtcbiAgICBteS5rZXkgPSBzcGVjcy5rZXk7XG4gICAgbXkuaXNNaWRpQ29udHJvbGxhYmxlID0gc3BlY3MuaXNNaWRpQ29udHJvbGxhYmxlO1xuICAgIFxuICAgIHRoYXQgPSBzcGVjcy50aGF0IHx8IHt9O1xuICAgIGlmIChteS5pc01pZGlDb250cm9sbGFibGUpIHtcbiAgICAgICAgdGhhdCA9IGNyZWF0ZVJlbW90ZVBhcmFtZXRlcihzcGVjcywgbXkpO1xuICAgIH1cbiAgICBcbiAgICB0aGF0LmFkZENoYW5nZWRDYWxsYmFjayA9IGFkZENoYW5nZWRDYWxsYmFjaztcbiAgICB0aGF0LnJlbW92ZUNoYW5nZWRDYWxsYmFjayA9IHJlbW92ZUNoYW5nZWRDYWxsYmFjaztcbiAgICB0aGF0LnJlc2V0ID0gcmVzZXQ7XG4gICAgdGhhdC5zZXRWYWx1ZSA9IHNldFZhbHVlO1xuICAgIHRoYXQuZ2V0VmFsdWUgPSBnZXRWYWx1ZTtcbiAgICB0aGF0LnNldFZhbHVlTm9ybWFsaXplZCA9IHNldFZhbHVlTm9ybWFsaXplZDtcbiAgICB0aGF0LmdldFZhbHVlTm9ybWFsaXplZCA9IGdldFZhbHVlTm9ybWFsaXplZDtcbiAgICB0aGF0LmdldFByb3BlcnR5ID0gZ2V0UHJvcGVydHk7XG4gICAgdGhhdC5zZXREYXRhID0gc2V0RGF0YTtcbiAgICB0aGF0LmdldERhdGEgPSBnZXREYXRhO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvcGFyYW1ldGVyL2Jhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createBaseSettingView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__remote__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__state_selectors__ = __webpack_require__(0);\n\n\n\n/**\n * Processor setting view for a linear integer type parameter,\n * which has a slider and a number field.\n */\nfunction createBaseSettingView(specs, my) {\n    var that,\n        \n        init = function() {\n            // find template, add clone to settings panel\n            let template = document.querySelector('#template-setting-' + my.data.type);\n            let clone = template.content.cloneNode(true);\n            my.el = clone.firstElementChild;\n            specs.parentEl.appendChild(my.el);\n            \n            // show label\n            my.el.querySelector('.setting__label-text').innerHTML = my.data.label;\n\n            document.addEventListener(my.store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.CHANGE_PARAMETER:\n                        if (e.detail.action.processorID === my.processorID && \n                            e.detail.action.paramKey === my.key) {\n                            my.setValue(Object(__WEBPACK_IMPORTED_MODULE_1__state_selectors__[\"b\" /* getProcessorByID */])(my.processorID).params[my.key].value);\n                        }\n                        break;\n                    \n                    case e.detail.actions.RECREATE_PARAMETER:\n                        if (e.detail.action.processorID === my.processorID && \n                            e.detail.action.paramKey === my.key) {\n                            my.data = Object(__WEBPACK_IMPORTED_MODULE_1__state_selectors__[\"b\" /* getProcessorByID */])(my.processorID).params[my.key];\n                            my.initData();\n                        }\n                        break;\n                }\n            });\n        };\n        \n    my = my || {};\n    my.store = specs.store;\n    my.key = specs.key;\n    my.data = specs.data;\n    my.processorID = specs.processorID;\n    my.el;\n    \n    that = that || {};\n    if (my.data.isMidiControllable) {\n        that = Object(__WEBPACK_IMPORTED_MODULE_0__remote__[\"a\" /* default */])(specs, my);\n    }\n    \n    init();\n\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL2Jhc2UuanM/NDZhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUMyQjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZVJlbW90ZVNldHRpbmdWaWV3IGZyb20gJy4vcmVtb3RlJztcbmltcG9ydCB7IGdldFByb2Nlc3NvckJ5SUQgfSBmcm9tICcuLi8uLi9zdGF0ZS9zZWxlY3RvcnMnO1xuXG4vKipcbiAqIFByb2Nlc3NvciBzZXR0aW5nIHZpZXcgZm9yIGEgbGluZWFyIGludGVnZXIgdHlwZSBwYXJhbWV0ZXIsXG4gKiB3aGljaCBoYXMgYSBzbGlkZXIgYW5kIGEgbnVtYmVyIGZpZWxkLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVCYXNlU2V0dGluZ1ZpZXcoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIFxuICAgICAgICBpbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyBmaW5kIHRlbXBsYXRlLCBhZGQgY2xvbmUgdG8gc2V0dGluZ3MgcGFuZWxcbiAgICAgICAgICAgIGxldCB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZW1wbGF0ZS1zZXR0aW5nLScgKyBteS5kYXRhLnR5cGUpO1xuICAgICAgICAgICAgbGV0IGNsb25lID0gdGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBteS5lbCA9IGNsb25lLmZpcnN0RWxlbWVudENoaWxkO1xuICAgICAgICAgICAgc3BlY3MucGFyZW50RWwuYXBwZW5kQ2hpbGQobXkuZWwpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBzaG93IGxhYmVsXG4gICAgICAgICAgICBteS5lbC5xdWVyeVNlbGVjdG9yKCcuc2V0dGluZ19fbGFiZWwtdGV4dCcpLmlubmVySFRNTCA9IG15LmRhdGEubGFiZWw7XG5cbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIobXkuc3RvcmUuU1RBVEVfQ0hBTkdFLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5kZXRhaWwuYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBlLmRldGFpbC5hY3Rpb25zLkNIQU5HRV9QQVJBTUVURVI6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5kZXRhaWwuYWN0aW9uLnByb2Nlc3NvcklEID09PSBteS5wcm9jZXNzb3JJRCAmJiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLmRldGFpbC5hY3Rpb24ucGFyYW1LZXkgPT09IG15LmtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15LnNldFZhbHVlKGdldFByb2Nlc3NvckJ5SUQobXkucHJvY2Vzc29ySUQpLnBhcmFtc1tteS5rZXldLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBlLmRldGFpbC5hY3Rpb25zLlJFQ1JFQVRFX1BBUkFNRVRFUjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmRldGFpbC5hY3Rpb24ucHJvY2Vzc29ySUQgPT09IG15LnByb2Nlc3NvcklEICYmIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuZGV0YWlsLmFjdGlvbi5wYXJhbUtleSA9PT0gbXkua2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXkuZGF0YSA9IGdldFByb2Nlc3NvckJ5SUQobXkucHJvY2Vzc29ySUQpLnBhcmFtc1tteS5rZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15LmluaXREYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBteS5zdG9yZSA9IHNwZWNzLnN0b3JlO1xuICAgIG15LmtleSA9IHNwZWNzLmtleTtcbiAgICBteS5kYXRhID0gc3BlY3MuZGF0YTtcbiAgICBteS5wcm9jZXNzb3JJRCA9IHNwZWNzLnByb2Nlc3NvcklEO1xuICAgIG15LmVsO1xuICAgIFxuICAgIHRoYXQgPSB0aGF0IHx8IHt9O1xuICAgIGlmIChteS5kYXRhLmlzTWlkaUNvbnRyb2xsYWJsZSkge1xuICAgICAgICB0aGF0ID0gY3JlYXRlUmVtb3RlU2V0dGluZ1ZpZXcoc3BlY3MsIG15KTtcbiAgICB9XG4gICAgXG4gICAgaW5pdCgpO1xuXG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L3NldHRpbmcvYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIProcessorBase;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parameter_boolean__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parameter_integer__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parameter_itemized__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__parameter_string__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__parameter_vector2d__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__connectorin__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__connectorout__ = __webpack_require__(28);\n\n\n\n\n\n\n\n\n/**\n * Base functionality for all MIDI processors.\n */\nfunction createMIDIProcessorBase(specs, my) {\n    var that,\n        \n        /**\n         * Create parameters from an object of parameter specifications.\n         * @param  {Object} paramSpecs Definitions of all the processor's parameters. \n         */\n        // defineParams = function(paramSpecs) {\n        //     for (var key in paramSpecs) {\n        //         paramSpecs[key].key = key;\n        //         switch(paramSpecs[key].type) {\n        //             case 'integer':\n        //                 my.params[key] = createIntegerParameter(paramSpecs[key]);\n        //                 break;\n        //             case 'boolean':\n        //                 my.params[key] = createBooleanParameter(paramSpecs[key]);\n        //                 break;\n        //             case 'itemized':\n        //                 my.params[key] = createItemizedParameter(paramSpecs[key]);\n        //                 break;\n        //             case 'string':\n        //                 my.params[key] = createStringParameter(paramSpecs[key]);\n        //                 break;\n        //             case 'vector2d':\n        //                 my.params[key] = createVector2DParameter(paramSpecs[key]);\n        //                 break;\n        //         }\n        //         // my.params[key].addChangedCallback(paramChangedCallback);\n        //     }\n        //     initParams();\n        // },\n        \n        /**\n         * Set all parameter values from specs.\n         */\n        // initParams = function() {\n        //     for (var key in my.params) {\n        //         if (my.params.hasOwnProperty(key)) {\n        //             if (specs[key]) {\n        //                 my.params[key].setValue(specs[key]);\n        //             }\n        //         }\n        //     }\n        // },\n        \n        /**\n         * Called by the processor's parameters if their value is changed.\n         */\n        // paramChangedCallback = function(parameter, oldValue, newValue) {\n        //     // call the plugin's handler for this parameter\n        //     my['$' + parameter.getProperty('key')](newValue);\n        // },\n        \n        // setParamValue = function(key, value) {\n        //     if (my.params.hasOwnProperty(key)) {\n        //         my.params[key].setValue(value);\n        //     }\n        // },\n        \n        // getParamValue = function(key) {\n        //     if (my.params.hasOwnProperty(key)) {\n        //         return my.params[key].getValue();\n        //     }\n        // },\n        \n        // getParameters = function() {\n        //     return my.params;\n        // },\n        \n        // hasParameter = function(param) {\n        //     for (var key in my.params) {\n        //         if (my.params.hasOwnProperty(key)) {\n        //             if (my.params[key] === param) {\n        //                 return true;\n        //             }\n        //         }\n        //     }\n        //     return false;\n        // },\n        \n        /**\n         * General processor info.\n         * @return {Object} Processor properties info.\n         */\n        // getInfo = function() {\n        //     return my.info;\n        // },\n        \n        // getType = function() {\n        //     return type;\n        // },\n        \n        // setID = function(newId) {\n        //     id = newId;\n        // },\n        \n        getID = function() {\n            return my.id;\n        };\n        \n        /**\n         * Restore processor from data object.\n         * @param {Object} data Preferences data object.\n         */\n        // setData = function(data) {\n        //     for (var key in my.params) {\n        //         if (my.params.hasOwnProperty(key)) {\n        //             my.params[key].setData(data[key]);\n        //         }\n        //     }\n        // }, \n        \n        /**\n         * Write processor settings to data object.\n         */\n        // getData = function() {\n        //     var data = {};\n        //     data.type = type;\n        //     data.id = id;\n            \n        //     // parameters\n        //     for (var key in my.params) {\n        //         if (my.params.hasOwnProperty(key)) {\n        //             data[key] = my.params[key].getData();\n        //         }\n        //     }\n            \n        //     // connections\n        //     if (typeof my.getDestinationsData == 'function') {\n        //         my.getDestinationsData(data);\n        //     }\n            \n        //     // processor specific data\n        //     if (typeof my.getProcessorSpecificData == 'function') {\n        //         my.getProcessorSpecificData(data);\n        //     }\n        //     return data;\n        // };\n    \n    my = my || {};\n    my.type = specs.data.type,\n    my.id = specs.data.id,\n    my.params = specs.data.params;\n    // my.defineParams = defineParams;\n    \n    that = specs.that || {};\n    if (specs.data.inputs == 1) {\n        that = Object(__WEBPACK_IMPORTED_MODULE_5__connectorin__[\"a\" /* default */])(specs, my);\n    }\n    if (specs.data.outputs == 1) {\n        that = Object(__WEBPACK_IMPORTED_MODULE_6__connectorout__[\"a\" /* default */])(specs, my);\n    }\n\n    // defineParams(specs.params);\n    \n    // that.setParamValue = setParamValue;\n    // that.getParamValue = getParamValue;\n    // that.getParameters = getParameters;\n    // that.hasParameter = hasParameter;\n    // that.getInfo = getInfo;\n    // that.getType = getType;\n    // that.setID = setID;\n    that.getID = getID;\n    // that.setData = setData;\n    // that.getData = getData;\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\n * Unchangeable application configuration settings.\n */\nconst PPQN = 480;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PPQN;\n\n\n// window.WH = window.WH || {};\n\n// (function (WH) {\n\n//     /**\n//      * @constructor\n//      */\n//     function createConf() {\n\n//         var that = {},\n//             patternCount = 16,\n//             trackCount = 4,\n//             patternDurationInBeats = 4,\n//             stepsPerBeat = 4,\n//             ppqn = 480;\n\n//         that.getPatternCount = function() {\n//             return patternCount;\n//         };\n\n//         that.getTrackCount = function() {\n//             return trackCount;\n//         };\n\n//         that.getPatternDurationInBeats = function() {\n//             return patternDurationInBeats;\n//         };\n\n//         that.getStepsPerBeat = function() {\n//             return stepsPerBeat;\n//         };\n\n//         that.getStepCount = function() {\n//             return patternDurationInBeats * stepsPerBeat;\n//         };\n        \n//         that.getPPQN = function() {\n//             return ppqn;\n//         };\n        \n//         return that;\n//     }\n    \n//     /** \n//      * Singleton\n//      */\n//     WH.conf = createConf();\n// })(WH);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvY29yZS9jb25maWcuanM/ZDg1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVW5jaGFuZ2VhYmxlIGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuXG4gKi9cbmV4cG9ydCBjb25zdCBQUFFOID0gNDgwO1xuXG4vLyB3aW5kb3cuV0ggPSB3aW5kb3cuV0ggfHwge307XG5cbi8vIChmdW5jdGlvbiAoV0gpIHtcblxuLy8gICAgIC8qKlxuLy8gICAgICAqIEBjb25zdHJ1Y3RvclxuLy8gICAgICAqL1xuLy8gICAgIGZ1bmN0aW9uIGNyZWF0ZUNvbmYoKSB7XG5cbi8vICAgICAgICAgdmFyIHRoYXQgPSB7fSxcbi8vICAgICAgICAgICAgIHBhdHRlcm5Db3VudCA9IDE2LFxuLy8gICAgICAgICAgICAgdHJhY2tDb3VudCA9IDQsXG4vLyAgICAgICAgICAgICBwYXR0ZXJuRHVyYXRpb25JbkJlYXRzID0gNCxcbi8vICAgICAgICAgICAgIHN0ZXBzUGVyQmVhdCA9IDQsXG4vLyAgICAgICAgICAgICBwcHFuID0gNDgwO1xuXG4vLyAgICAgICAgIHRoYXQuZ2V0UGF0dGVybkNvdW50ID0gZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgICAgICByZXR1cm4gcGF0dGVybkNvdW50O1xuLy8gICAgICAgICB9O1xuXG4vLyAgICAgICAgIHRoYXQuZ2V0VHJhY2tDb3VudCA9IGZ1bmN0aW9uKCkge1xuLy8gICAgICAgICAgICAgcmV0dXJuIHRyYWNrQ291bnQ7XG4vLyAgICAgICAgIH07XG5cbi8vICAgICAgICAgdGhhdC5nZXRQYXR0ZXJuRHVyYXRpb25JbkJlYXRzID0gZnVuY3Rpb24oKSB7XG4vLyAgICAgICAgICAgICByZXR1cm4gcGF0dGVybkR1cmF0aW9uSW5CZWF0cztcbi8vICAgICAgICAgfTtcblxuLy8gICAgICAgICB0aGF0LmdldFN0ZXBzUGVyQmVhdCA9IGZ1bmN0aW9uKCkge1xuLy8gICAgICAgICAgICAgcmV0dXJuIHN0ZXBzUGVyQmVhdDtcbi8vICAgICAgICAgfTtcblxuLy8gICAgICAgICB0aGF0LmdldFN0ZXBDb3VudCA9IGZ1bmN0aW9uKCkge1xuLy8gICAgICAgICAgICAgcmV0dXJuIHBhdHRlcm5EdXJhdGlvbkluQmVhdHMgKiBzdGVwc1BlckJlYXQ7XG4vLyAgICAgICAgIH07XG4gICAgICAgIFxuLy8gICAgICAgICB0aGF0LmdldFBQUU4gPSBmdW5jdGlvbigpIHtcbi8vICAgICAgICAgICAgIHJldHVybiBwcHFuO1xuLy8gICAgICAgICB9O1xuICAgICAgICBcbi8vICAgICAgICAgcmV0dXJuIHRoYXQ7XG4vLyAgICAgfVxuICAgIFxuLy8gICAgIC8qKiBcbi8vICAgICAgKiBTaW5nbGV0b25cbi8vICAgICAgKi9cbi8vICAgICBXSC5jb25mID0gY3JlYXRlQ29uZigpO1xuLy8gfSkoV0gpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvY29yZS9jb25maWcuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getEuclidPattern;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = rotateEuclidPattern;\n\nconst cache = {};\n\nfunction getEuclidPattern(steps, pulses) {\n    const cacheKey = `${steps}_${pulses}`;\n    if (!cache[cacheKey]) {\n        cache[cacheKey] = createBjorklund(steps, pulses);\n    }\n    return cache[cacheKey].slice(0);\n}\n\nfunction rotateEuclidPattern(pattern, rotation) {\n    const elementsToShift = pattern.splice(rotation);\n    return elementsToShift.concat(pattern);\n}\n\n/**\n * Create Euclidean rhythm pattern.\n * @param {Number} steps Total amount of tsteps in the pattern.\n * @param {Number} pulses Pulses to spread over the pattern.\n * @return {Array} Array of Booleans that form the pattern.\n */\nfunction createBjorklund(steps, pulses) {\n    var pauses = steps - pulses;\n    if (pulses >= steps) {\n        return buildPatternListFilledWith(steps, true);\n    } else if (steps == 1) {\n        return buildPatternListFilledWith(steps, pulses == 1);\n    } else if (steps == 0 || pulses == 0) {\n        return buildPatternListFilledWith(steps, false);\n    } else {\n        let distribution = [];\n        for (let i = 0; i < steps; i++) {\n            distribution.push([i < pulses]);\n        }\n        return splitDistributionAndContinue(distribution, pauses);\n    }\n}\n\n/**\n * Divide as much as possible of the remainder over the distribution arrays.\n * @param {Array} distributionArray Two dimensional array of booleans.\n * @param {Number} remainder Amount of items not yet in distribution array.\n * @return {Function} One dimensional array of booleans, the Euclidean pattern.\n */\nfunction splitDistributionAndContinue(distributionArray, remainder) {\n    let newDistributionArray = [],\n        newRemainderArray = [];\n    if (remainder == 0) {\n        newDistributionArray = distributionArray;\n    } else {\n        let newDistributionSize = distributionArray.length - remainder;\n        for (let i = 0, n = distributionArray.length; i < n; i++) {\n            if (i < newDistributionSize) {\n                newDistributionArray.push(distributionArray[i]);\n            } else {\n                newRemainderArray.push(distributionArray[i]);\n            }\n        }\n    }\n    return bjorklund(newDistributionArray, newRemainderArray);\n}\n\n/**\n * Divide as much as possible of the remainder over the distribution arrays.\n * @param {Object} distributionArray Two dimensional array.\n * @param {Object} remainderArray Two dimensional array.\n * @return {Object} One dimensional array of booleans, the Euclidean pattern.\n */\nfunction bjorklund(distributionArray, remainderArray) {\n    // handy for debugging\n    // console.log('distributionArray', toStringArrayList(distributionArray)); \n    // console.log('remainderArray', toStringArrayList(remainderArray));\n    \n    if (remainderArray.length <= 1) {\n        return flattenArrays([distributionArray, remainderArray]);\n    } else {\n        let fullRounds = Math.floor(remainderArray.length / distributionArray.length),\n            remainder = remainderArray.length % distributionArray.length,\n            newRemainder = remainder == 0 ? 0 : distributionArray.length - remainder;\n        for (let i = 0; i < fullRounds; i++) {\n            let p = distributionArray.length;\n            for (let j = 0; j < p; j++) {\n                distributionArray[j].push(remainderArray.shift());\n            }\n        }\n        for (let i = 0; i < remainder; i++ ) {\n            distributionArray[i].push(remainderArray.shift());\n        }\n        \n        return splitDistributionAndContinue(distributionArray, newRemainder);\n    }\n}\n\n/**\n * Create a pattern filled with only pulses or silences.\n * @param {Number} steps Total amount of tsteps in the pattern.\n * @param {Boolen} value Value to fill the array with, true for pulses.\n * @return {Array} Array of Booleans that form the pattern.\n */\nfunction buildPatternListFilledWith(steps, value) {\n    let distribution = [];\n    for (let i = 0; i < steps; i++) {\n        distribution.push(value);\n    }\n    return distribution;\n}\n\n/**\n * Flatten a multidimensional array.\n * @param {Object} arr The array to flatten.\n * @return {Object} One dimensional flattened array.\n */\nfunction flattenArrays(arr) {\n    return arr.reduce(function (flat, toFlatten) {\n        return flat.concat(Array.isArray(toFlatten) ? flattenArrays(toFlatten) : toFlatten);\n    }, []);\n}\n\nfunction toStringArrayList(arrayList) {\n    var str = '';\n    for (let i = 0, n = arrayList.length; i < n; i++) {\n        str += '[' + arrayList[i] + ']';\n    }\n    return str;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvZXVjbGlkLmpzP2ZlMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsTUFBTSxHQUFHLE9BQU87QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLE9BQU87QUFDbEIsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFEQUFxRCxPQUFPO0FBQzVEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQSw4RTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdCQUFnQjtBQUN2QztBQUNBLDJCQUEyQixPQUFPO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixlQUFlO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsV0FBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0EseUNBQXlDLE9BQU87QUFDaEQ7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY2FjaGUgPSB7fTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV1Y2xpZFBhdHRlcm4oc3RlcHMsIHB1bHNlcykge1xuICAgIGNvbnN0IGNhY2hlS2V5ID0gYCR7c3RlcHN9XyR7cHVsc2VzfWA7XG4gICAgaWYgKCFjYWNoZVtjYWNoZUtleV0pIHtcbiAgICAgICAgY2FjaGVbY2FjaGVLZXldID0gY3JlYXRlQmpvcmtsdW5kKHN0ZXBzLCBwdWxzZXMpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVbY2FjaGVLZXldLnNsaWNlKDApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlRXVjbGlkUGF0dGVybihwYXR0ZXJuLCByb3RhdGlvbikge1xuICAgIGNvbnN0IGVsZW1lbnRzVG9TaGlmdCA9IHBhdHRlcm4uc3BsaWNlKHJvdGF0aW9uKTtcbiAgICByZXR1cm4gZWxlbWVudHNUb1NoaWZ0LmNvbmNhdChwYXR0ZXJuKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgRXVjbGlkZWFuIHJoeXRobSBwYXR0ZXJuLlxuICogQHBhcmFtIHtOdW1iZXJ9IHN0ZXBzIFRvdGFsIGFtb3VudCBvZiB0c3RlcHMgaW4gdGhlIHBhdHRlcm4uXG4gKiBAcGFyYW0ge051bWJlcn0gcHVsc2VzIFB1bHNlcyB0byBzcHJlYWQgb3ZlciB0aGUgcGF0dGVybi5cbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBvZiBCb29sZWFucyB0aGF0IGZvcm0gdGhlIHBhdHRlcm4uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJqb3JrbHVuZChzdGVwcywgcHVsc2VzKSB7XG4gICAgdmFyIHBhdXNlcyA9IHN0ZXBzIC0gcHVsc2VzO1xuICAgIGlmIChwdWxzZXMgPj0gc3RlcHMpIHtcbiAgICAgICAgcmV0dXJuIGJ1aWxkUGF0dGVybkxpc3RGaWxsZWRXaXRoKHN0ZXBzLCB0cnVlKTtcbiAgICB9IGVsc2UgaWYgKHN0ZXBzID09IDEpIHtcbiAgICAgICAgcmV0dXJuIGJ1aWxkUGF0dGVybkxpc3RGaWxsZWRXaXRoKHN0ZXBzLCBwdWxzZXMgPT0gMSk7XG4gICAgfSBlbHNlIGlmIChzdGVwcyA9PSAwIHx8IHB1bHNlcyA9PSAwKSB7XG4gICAgICAgIHJldHVybiBidWlsZFBhdHRlcm5MaXN0RmlsbGVkV2l0aChzdGVwcywgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBkaXN0cmlidXRpb24gPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7XG4gICAgICAgICAgICBkaXN0cmlidXRpb24ucHVzaChbaSA8IHB1bHNlc10pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzcGxpdERpc3RyaWJ1dGlvbkFuZENvbnRpbnVlKGRpc3RyaWJ1dGlvbiwgcGF1c2VzKTtcbiAgICB9XG59XG5cbi8qKlxuICogRGl2aWRlIGFzIG11Y2ggYXMgcG9zc2libGUgb2YgdGhlIHJlbWFpbmRlciBvdmVyIHRoZSBkaXN0cmlidXRpb24gYXJyYXlzLlxuICogQHBhcmFtIHtBcnJheX0gZGlzdHJpYnV0aW9uQXJyYXkgVHdvIGRpbWVuc2lvbmFsIGFycmF5IG9mIGJvb2xlYW5zLlxuICogQHBhcmFtIHtOdW1iZXJ9IHJlbWFpbmRlciBBbW91bnQgb2YgaXRlbXMgbm90IHlldCBpbiBkaXN0cmlidXRpb24gYXJyYXkuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gT25lIGRpbWVuc2lvbmFsIGFycmF5IG9mIGJvb2xlYW5zLCB0aGUgRXVjbGlkZWFuIHBhdHRlcm4uXG4gKi9cbmZ1bmN0aW9uIHNwbGl0RGlzdHJpYnV0aW9uQW5kQ29udGludWUoZGlzdHJpYnV0aW9uQXJyYXksIHJlbWFpbmRlcikge1xuICAgIGxldCBuZXdEaXN0cmlidXRpb25BcnJheSA9IFtdLFxuICAgICAgICBuZXdSZW1haW5kZXJBcnJheSA9IFtdO1xuICAgIGlmIChyZW1haW5kZXIgPT0gMCkge1xuICAgICAgICBuZXdEaXN0cmlidXRpb25BcnJheSA9IGRpc3RyaWJ1dGlvbkFycmF5O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBuZXdEaXN0cmlidXRpb25TaXplID0gZGlzdHJpYnV0aW9uQXJyYXkubGVuZ3RoIC0gcmVtYWluZGVyO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgbiA9IGRpc3RyaWJ1dGlvbkFycmF5Lmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgPCBuZXdEaXN0cmlidXRpb25TaXplKSB7XG4gICAgICAgICAgICAgICAgbmV3RGlzdHJpYnV0aW9uQXJyYXkucHVzaChkaXN0cmlidXRpb25BcnJheVtpXSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld1JlbWFpbmRlckFycmF5LnB1c2goZGlzdHJpYnV0aW9uQXJyYXlbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBiam9ya2x1bmQobmV3RGlzdHJpYnV0aW9uQXJyYXksIG5ld1JlbWFpbmRlckFycmF5KTtcbn1cblxuLyoqXG4gKiBEaXZpZGUgYXMgbXVjaCBhcyBwb3NzaWJsZSBvZiB0aGUgcmVtYWluZGVyIG92ZXIgdGhlIGRpc3RyaWJ1dGlvbiBhcnJheXMuXG4gKiBAcGFyYW0ge09iamVjdH0gZGlzdHJpYnV0aW9uQXJyYXkgVHdvIGRpbWVuc2lvbmFsIGFycmF5LlxuICogQHBhcmFtIHtPYmplY3R9IHJlbWFpbmRlckFycmF5IFR3byBkaW1lbnNpb25hbCBhcnJheS5cbiAqIEByZXR1cm4ge09iamVjdH0gT25lIGRpbWVuc2lvbmFsIGFycmF5IG9mIGJvb2xlYW5zLCB0aGUgRXVjbGlkZWFuIHBhdHRlcm4uXG4gKi9cbmZ1bmN0aW9uIGJqb3JrbHVuZChkaXN0cmlidXRpb25BcnJheSwgcmVtYWluZGVyQXJyYXkpIHtcbiAgICAvLyBoYW5keSBmb3IgZGVidWdnaW5nXG4gICAgLy8gY29uc29sZS5sb2coJ2Rpc3RyaWJ1dGlvbkFycmF5JywgdG9TdHJpbmdBcnJheUxpc3QoZGlzdHJpYnV0aW9uQXJyYXkpKTsgXG4gICAgLy8gY29uc29sZS5sb2coJ3JlbWFpbmRlckFycmF5JywgdG9TdHJpbmdBcnJheUxpc3QocmVtYWluZGVyQXJyYXkpKTtcbiAgICBcbiAgICBpZiAocmVtYWluZGVyQXJyYXkubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgcmV0dXJuIGZsYXR0ZW5BcnJheXMoW2Rpc3RyaWJ1dGlvbkFycmF5LCByZW1haW5kZXJBcnJheV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBmdWxsUm91bmRzID0gTWF0aC5mbG9vcihyZW1haW5kZXJBcnJheS5sZW5ndGggLyBkaXN0cmlidXRpb25BcnJheS5sZW5ndGgpLFxuICAgICAgICAgICAgcmVtYWluZGVyID0gcmVtYWluZGVyQXJyYXkubGVuZ3RoICUgZGlzdHJpYnV0aW9uQXJyYXkubGVuZ3RoLFxuICAgICAgICAgICAgbmV3UmVtYWluZGVyID0gcmVtYWluZGVyID09IDAgPyAwIDogZGlzdHJpYnV0aW9uQXJyYXkubGVuZ3RoIC0gcmVtYWluZGVyO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZ1bGxSb3VuZHM7IGkrKykge1xuICAgICAgICAgICAgbGV0IHAgPSBkaXN0cmlidXRpb25BcnJheS5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHA7IGorKykge1xuICAgICAgICAgICAgICAgIGRpc3RyaWJ1dGlvbkFycmF5W2pdLnB1c2gocmVtYWluZGVyQXJyYXkuc2hpZnQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZW1haW5kZXI7IGkrKyApIHtcbiAgICAgICAgICAgIGRpc3RyaWJ1dGlvbkFycmF5W2ldLnB1c2gocmVtYWluZGVyQXJyYXkuc2hpZnQoKSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiBzcGxpdERpc3RyaWJ1dGlvbkFuZENvbnRpbnVlKGRpc3RyaWJ1dGlvbkFycmF5LCBuZXdSZW1haW5kZXIpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXR0ZXJuIGZpbGxlZCB3aXRoIG9ubHkgcHVsc2VzIG9yIHNpbGVuY2VzLlxuICogQHBhcmFtIHtOdW1iZXJ9IHN0ZXBzIFRvdGFsIGFtb3VudCBvZiB0c3RlcHMgaW4gdGhlIHBhdHRlcm4uXG4gKiBAcGFyYW0ge0Jvb2xlbn0gdmFsdWUgVmFsdWUgdG8gZmlsbCB0aGUgYXJyYXkgd2l0aCwgdHJ1ZSBmb3IgcHVsc2VzLlxuICogQHJldHVybiB7QXJyYXl9IEFycmF5IG9mIEJvb2xlYW5zIHRoYXQgZm9ybSB0aGUgcGF0dGVybi5cbiAqL1xuZnVuY3Rpb24gYnVpbGRQYXR0ZXJuTGlzdEZpbGxlZFdpdGgoc3RlcHMsIHZhbHVlKSB7XG4gICAgbGV0IGRpc3RyaWJ1dGlvbiA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RlcHM7IGkrKykge1xuICAgICAgICBkaXN0cmlidXRpb24ucHVzaCh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBkaXN0cmlidXRpb247XG59XG5cbi8qKlxuICogRmxhdHRlbiBhIG11bHRpZGltZW5zaW9uYWwgYXJyYXkuXG4gKiBAcGFyYW0ge09iamVjdH0gYXJyIFRoZSBhcnJheSB0byBmbGF0dGVuLlxuICogQHJldHVybiB7T2JqZWN0fSBPbmUgZGltZW5zaW9uYWwgZmxhdHRlbmVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBmbGF0dGVuQXJyYXlzKGFycikge1xuICAgIHJldHVybiBhcnIucmVkdWNlKGZ1bmN0aW9uIChmbGF0LCB0b0ZsYXR0ZW4pIHtcbiAgICAgICAgcmV0dXJuIGZsYXQuY29uY2F0KEFycmF5LmlzQXJyYXkodG9GbGF0dGVuKSA/IGZsYXR0ZW5BcnJheXModG9GbGF0dGVuKSA6IHRvRmxhdHRlbik7XG4gICAgfSwgW10pO1xufVxuXG5mdW5jdGlvbiB0b1N0cmluZ0FycmF5TGlzdChhcnJheUxpc3QpIHtcbiAgICB2YXIgc3RyID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDAsIG4gPSBhcnJheUxpc3QubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHN0ciArPSAnWycgKyBhcnJheUxpc3RbaV0gKyAnXSc7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvZXVjbGlkLmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createUUID;\n/**\n * Utilities\n * Mouse or touch event detection.\n */\nconst util = ( function() {\n    const isTouchDevice = 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;\n    \n    /**\n     * Type of events to use, touch or mouse\n     * @type {String}\n     */\n    const eventType = {\n        start: isTouchDevice ? 'touchstart' : 'mousedown',\n        end: isTouchDevice ? 'touchend' : 'mouseup',\n        click: isTouchDevice ? 'touchend' : 'click',\n        move: isTouchDevice ? 'touchmove' : 'mousemove',\n    };\n\n    \n\n    return {\n        isTouchDevice: isTouchDevice,\n        eventType: eventType\n    }\n})();\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = util;\n\n\n/**\n * Create a fairly unique ID.\n * @see https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n */\nfunction createUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvY29yZS91dGlsLmpzPzg5OWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUFBO0FBQUE7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVdGlsaXRpZXNcbiAqIE1vdXNlIG9yIHRvdWNoIGV2ZW50IGRldGVjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHV0aWwgPSAoIGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGlzVG91Y2hEZXZpY2UgPSAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgfHwgd2luZG93LkRvY3VtZW50VG91Y2ggJiYgZG9jdW1lbnQgaW5zdGFuY2VvZiBEb2N1bWVudFRvdWNoO1xuICAgIFxuICAgIC8qKlxuICAgICAqIFR5cGUgb2YgZXZlbnRzIHRvIHVzZSwgdG91Y2ggb3IgbW91c2VcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IGV2ZW50VHlwZSA9IHtcbiAgICAgICAgc3RhcnQ6IGlzVG91Y2hEZXZpY2UgPyAndG91Y2hzdGFydCcgOiAnbW91c2Vkb3duJyxcbiAgICAgICAgZW5kOiBpc1RvdWNoRGV2aWNlID8gJ3RvdWNoZW5kJyA6ICdtb3VzZXVwJyxcbiAgICAgICAgY2xpY2s6IGlzVG91Y2hEZXZpY2UgPyAndG91Y2hlbmQnIDogJ2NsaWNrJyxcbiAgICAgICAgbW92ZTogaXNUb3VjaERldmljZSA/ICd0b3VjaG1vdmUnIDogJ21vdXNlbW92ZScsXG4gICAgfTtcblxuICAgIFxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNUb3VjaERldmljZTogaXNUb3VjaERldmljZSxcbiAgICAgICAgZXZlbnRUeXBlOiBldmVudFR5cGVcbiAgICB9XG59KSgpO1xuXG4vKipcbiAqIENyZWF0ZSBhIGZhaXJseSB1bmlxdWUgSUQuXG4gKiBAc2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwNTAzNC9jcmVhdGUtZ3VpZC11dWlkLWluLWphdmFzY3JpcHRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVVVSUQoKSB7XG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24oYykge1xuICAgICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCk7XG4gICAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL2NvcmUvdXRpbC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addWindowResize;\n/**\n * Window resize listener functionality.\n * Add callback functions that will be called on window resize,\n * but debounced to not be called more that every so many milliseconds.\n */\nvar debouncedFunction,\n    callbacks = [],\n    delay = 250,\n    \n    /**\n     * Returns a function, that, as long as it continues to be invoked, \n     * will not be triggered. The function will be called after it \n     * stops being called for N milliseconds. If `immediate` is passed, \n     * trigger the function on the leading edge, instead of the trailing.\n     * @see https://davidwalsh.name/javascript-debounce-function\n     * @param  {Function} func Function to call after delay.\n     * @param  {Number} wait Milliseconds to wait before next call.\n     * @param  {Boolean} immediate True to not wait.\n     */\n    debounce = function(func, wait, immediate) {\n        var timeout;\n        return function() {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    };\n\nfunction addWindowResize(specs, my) {\n    var that,\n        \n        /**\n         * Add callback function to be called on debounced resize.\n         * @param  {Function} callback Callback function.\n         */\n        addWindowResizeCallback = function(callback) {\n            callbacks.push(callback);\n            if (!debouncedFunction) {\n                debouncedFunction = debounce(function() {\n                    callbacks.forEach(function(callbackFunction) {\n                        callbackFunction();\n                    });\n                }, delay);\n                window.addEventListener('resize', debouncedFunction);\n            }\n        };\n    \n    my = my || {};\n    my.addWindowResizeCallback = addWindowResizeCallback;\n    \n    that = specs.that || {};\n    \n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy93aW5kb3dyZXNpemUuanM/OTM1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekIsZ0JBQWdCLE9BQU87QUFDdkIsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXaW5kb3cgcmVzaXplIGxpc3RlbmVyIGZ1bmN0aW9uYWxpdHkuXG4gKiBBZGQgY2FsbGJhY2sgZnVuY3Rpb25zIHRoYXQgd2lsbCBiZSBjYWxsZWQgb24gd2luZG93IHJlc2l6ZSxcbiAqIGJ1dCBkZWJvdW5jZWQgdG8gbm90IGJlIGNhbGxlZCBtb3JlIHRoYXQgZXZlcnkgc28gbWFueSBtaWxsaXNlY29uZHMuXG4gKi9cbnZhciBkZWJvdW5jZWRGdW5jdGlvbixcbiAgICBjYWxsYmFja3MgPSBbXSxcbiAgICBkZWxheSA9IDI1MCxcbiAgICBcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZnVuY3Rpb24sIHRoYXQsIGFzIGxvbmcgYXMgaXQgY29udGludWVzIHRvIGJlIGludm9rZWQsIFxuICAgICAqIHdpbGwgbm90IGJlIHRyaWdnZXJlZC4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGl0IFxuICAgICAqIHN0b3BzIGJlaW5nIGNhbGxlZCBmb3IgTiBtaWxsaXNlY29uZHMuIElmIGBpbW1lZGlhdGVgIGlzIHBhc3NlZCwgXG4gICAgICogdHJpZ2dlciB0aGUgZnVuY3Rpb24gb24gdGhlIGxlYWRpbmcgZWRnZSwgaW5zdGVhZCBvZiB0aGUgdHJhaWxpbmcuXG4gICAgICogQHNlZSBodHRwczovL2Rhdmlkd2Fsc2gubmFtZS9qYXZhc2NyaXB0LWRlYm91bmNlLWZ1bmN0aW9uXG4gICAgICogQHBhcmFtICB7RnVuY3Rpb259IGZ1bmMgRnVuY3Rpb24gdG8gY2FsbCBhZnRlciBkZWxheS5cbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHdhaXQgTWlsbGlzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIG5leHQgY2FsbC5cbiAgICAgKiBAcGFyYW0gIHtCb29sZWFufSBpbW1lZGlhdGUgVHJ1ZSB0byBub3Qgd2FpdC5cbiAgICAgKi9cbiAgICBkZWJvdW5jZSA9IGZ1bmN0aW9uKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSkge1xuICAgICAgICB2YXIgdGltZW91dDtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRleHQgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgdmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgaWYgKCFpbW1lZGlhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIGNhbGxOb3cgPSBpbW1lZGlhdGUgJiYgIXRpbWVvdXQ7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gICAgICAgICAgICBpZiAoY2FsbE5vdykgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGRXaW5kb3dSZXNpemUoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBvbiBkZWJvdW5jZWQgcmVzaXplLlxuICAgICAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAgICAgICAqL1xuICAgICAgICBhZGRXaW5kb3dSZXNpemVDYWxsYmFjayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBjYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICBpZiAoIWRlYm91bmNlZEZ1bmN0aW9uKSB7XG4gICAgICAgICAgICAgICAgZGVib3VuY2VkRnVuY3Rpb24gPSBkZWJvdW5jZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24oY2FsbGJhY2tGdW5jdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tGdW5jdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LCBkZWxheSk7XG4gICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlZEZ1bmN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LmFkZFdpbmRvd1Jlc2l6ZUNhbGxiYWNrID0gYWRkV2luZG93UmVzaXplQ2FsbGJhY2s7XG4gICAgXG4gICAgdGhhdCA9IHNwZWNzLnRoYXQgfHwge307XG4gICAgXG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvdmlldy93aW5kb3dyZXNpemUuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCanvasProcessorBaseView;\n\nfunction createCanvasProcessorBaseView(specs, my) {\n    var that,\n        connectorGraphic,\n\n        /**\n         * Base functionality for processor canvas views.\n         */\n        getConnectorGraphic = function() {\n            if (!connectorGraphic) {\n                const canvas = document.createElement('canvas'),\n                    ctx = canvas.getContext('2d'),\n                    radius = 12,\n                    lineWidth = 2,\n                    resource = {\n                        radius: radius,\n                        lineWidth: lineWidth,\n                        canvas: canvas,\n                        ctx: ctx,\n                        setTheme: function(theme) {\n                            console.log(theme);\n                            this.ctx.lineWidth = this.lineWidth;\n                            this.ctx.strokeStyle = theme ? theme.colorHigh : '#333';\n                            this.ctx.setLineDash([4, 4]);\n                            this.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n                            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                            this.ctx.moveTo(this.radius, 0);\n                            this.ctx.arc(0, 0, this.radius, 0, Math.PI * 2, true);\n                            this.ctx.stroke();\n                        }\n                    };\n                    \n                canvas.width = (radius + lineWidth) * 2;\n                canvas.height = (radius + lineWidth) * 2;\n                connectorGraphic = resource;\n            }\n            return connectorGraphic;\n        },\n    \n        // getProcessor = function() {\n        //     return my.processor;\n        // },\n        \n        // setPosition2d = function(position2d) {\n        //     my.processor.setParamValue('position2d', position2d);\n        // },\n        \n        getPosition2d = function() {\n            return my.data.params.position2d.value; //  my.processor.getParamValue('position2d');\n        },\n        \n        getID = function() {\n            return my.data.id;\n        };\n        \n    my = my || {};\n    my.data = specs.data;\n    my.store = specs.store;\n    // my.processor = specs.processor;\n    my.getConnectorGraphic = getConnectorGraphic;\n    my.colorHigh = '#cccccc';\n    my.colorMid = '#dddddd';\n    my.colorLow = '#eeeeee';\n    \n    that = specs.that || {};\n    \n    // that.getProcessor = getProcessor;\n    // that.setPosition2d = setPosition2d;\n    that.getPosition2d = getPosition2d;\n    that.getID = getID;\n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9jYW52YXNwcm9jZXNzb3JiYXNlLmpzP2VjMjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsWUFBWTs7QUFFWjtBQUNBO0FBQ0EsWUFBWTs7QUFFWjtBQUNBLG1EQUFtRDtBQUNuRCxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDYW52YXNQcm9jZXNzb3JCYXNlVmlldyhzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgY29ubmVjdG9yR3JhcGhpYyxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQmFzZSBmdW5jdGlvbmFsaXR5IGZvciBwcm9jZXNzb3IgY2FudmFzIHZpZXdzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0Q29ubmVjdG9yR3JhcGhpYyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKCFjb25uZWN0b3JHcmFwaGljKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyksXG4gICAgICAgICAgICAgICAgICAgIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpLFxuICAgICAgICAgICAgICAgICAgICByYWRpdXMgPSAxMixcbiAgICAgICAgICAgICAgICAgICAgbGluZVdpZHRoID0gMixcbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2UgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYWRpdXM6IHJhZGl1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVXaWR0aDogbGluZVdpZHRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FudmFzOiBjYW52YXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBjdHg6IGN0eCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRoZW1lOiBmdW5jdGlvbih0aGVtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoZW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN0eC5saW5lV2lkdGggPSB0aGlzLmxpbmVXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN0eC5zdHJva2VTdHlsZSA9IHRoZW1lID8gdGhlbWUuY29sb3JIaWdoIDogJyMzMzMnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3R4LnNldExpbmVEYXNoKFs0LCA0XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHgudHJhbnNsYXRlKHRoaXMuY2FudmFzLndpZHRoIC8gMiwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3R4Lm1vdmVUbyh0aGlzLnJhZGl1cywgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguYXJjKDAsIDAsIHRoaXMucmFkaXVzLCAwLCBNYXRoLlBJICogMiwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IChyYWRpdXMgKyBsaW5lV2lkdGgpICogMjtcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0ID0gKHJhZGl1cyArIGxpbmVXaWR0aCkgKiAyO1xuICAgICAgICAgICAgICAgIGNvbm5lY3RvckdyYXBoaWMgPSByZXNvdXJjZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb25uZWN0b3JHcmFwaGljO1xuICAgICAgICB9LFxuICAgIFxuICAgICAgICAvLyBnZXRQcm9jZXNzb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gICAgIHJldHVybiBteS5wcm9jZXNzb3I7XG4gICAgICAgIC8vIH0sXG4gICAgICAgIFxuICAgICAgICAvLyBzZXRQb3NpdGlvbjJkID0gZnVuY3Rpb24ocG9zaXRpb24yZCkge1xuICAgICAgICAvLyAgICAgbXkucHJvY2Vzc29yLnNldFBhcmFtVmFsdWUoJ3Bvc2l0aW9uMmQnLCBwb3NpdGlvbjJkKTtcbiAgICAgICAgLy8gfSxcbiAgICAgICAgXG4gICAgICAgIGdldFBvc2l0aW9uMmQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBteS5kYXRhLnBhcmFtcy5wb3NpdGlvbjJkLnZhbHVlOyAvLyAgbXkucHJvY2Vzc29yLmdldFBhcmFtVmFsdWUoJ3Bvc2l0aW9uMmQnKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGdldElEID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gbXkuZGF0YS5pZDtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBteS5kYXRhID0gc3BlY3MuZGF0YTtcbiAgICBteS5zdG9yZSA9IHNwZWNzLnN0b3JlO1xuICAgIC8vIG15LnByb2Nlc3NvciA9IHNwZWNzLnByb2Nlc3NvcjtcbiAgICBteS5nZXRDb25uZWN0b3JHcmFwaGljID0gZ2V0Q29ubmVjdG9yR3JhcGhpYztcbiAgICBteS5jb2xvckhpZ2ggPSAnI2NjY2NjYyc7XG4gICAgbXkuY29sb3JNaWQgPSAnI2RkZGRkZCc7XG4gICAgbXkuY29sb3JMb3cgPSAnI2VlZWVlZSc7XG4gICAgXG4gICAgdGhhdCA9IHNwZWNzLnRoYXQgfHwge307XG4gICAgXG4gICAgLy8gdGhhdC5nZXRQcm9jZXNzb3IgPSBnZXRQcm9jZXNzb3I7XG4gICAgLy8gdGhhdC5zZXRQb3NpdGlvbjJkID0gc2V0UG9zaXRpb24yZDtcbiAgICB0aGF0LmdldFBvc2l0aW9uMmQgPSBnZXRQb3NpdGlvbjJkO1xuICAgIHRoYXQuZ2V0SUQgPSBnZXRJRDtcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L2NhbnZhc3Byb2Nlc3NvcmJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\nvar TWEEN = TWEEN || (function () {\n\n\tvar _tweens = [];\n\n\treturn {\n\n\t\tgetAll: function () {\n\n\t\t\treturn _tweens;\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\t_tweens = [];\n\n\t\t},\n\n\t\tadd: function (tween) {\n\n\t\t\t_tweens.push(tween);\n\n\t\t},\n\n\t\tremove: function (tween) {\n\n\t\t\tvar i = _tweens.indexOf(tween);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t_tweens.splice(i, 1);\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function (time, preserve) {\n\n\t\t\tif (_tweens.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\n\t\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t\twhile (i < _tweens.length) {\n\n\t\t\t\tif (_tweens[i].update(time) || preserve) {\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\t};\n\n})();\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (window) === 'undefined' && typeof (process) !== 'undefined') {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof (window) !== 'undefined' &&\n         window.performance !== undefined &&\n\t\t window.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = window.performance.now.bind(window.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object) {\n\n\tvar _object = object;\n\tvar _valuesStart = {};\n\tvar _valuesEnd = {};\n\tvar _valuesStartRepeat = {};\n\tvar _duration = 1000;\n\tvar _repeat = 0;\n\tvar _repeatDelayTime;\n\tvar _yoyo = false;\n\tvar _isPlaying = false;\n\tvar _reversed = false;\n\tvar _delayTime = 0;\n\tvar _startTime = null;\n\tvar _easingFunction = TWEEN.Easing.Linear.None;\n\tvar _interpolationFunction = TWEEN.Interpolation.Linear;\n\tvar _chainedTweens = [];\n\tvar _onStartCallback = null;\n\tvar _onStartCallbackFired = false;\n\tvar _onUpdateCallback = null;\n\tvar _onCompleteCallback = null;\n\tvar _onStopCallback = null;\n\n\tthis.to = function (properties, duration) {\n\n\t\t_valuesEnd = properties;\n\n\t\tif (duration !== undefined) {\n\t\t\t_duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.start = function (time) {\n\n\t\tTWEEN.add(this);\n\n\t\t_isPlaying = true;\n\n\t\t_onStartCallbackFired = false;\n\n\t\t_startTime = time !== undefined ? time : TWEEN.now();\n\t\t_startTime += _delayTime;\n\n\t\tfor (var property in _valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (_valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (_valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t_valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (_object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value.\n\t\t\t_valuesStart[property] = _object[property];\n\n\t\t\tif ((_valuesStart[property] instanceof Array) === false) {\n\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.stop = function () {\n\n\t\tif (!_isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tTWEEN.remove(this);\n\t\t_isPlaying = false;\n\n\t\tif (_onStopCallback !== null) {\n\t\t\t_onStopCallback.call(_object, _object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t};\n\n\tthis.end = function () {\n\n\t\tthis.update(_startTime + _duration);\n\t\treturn this;\n\n\t};\n\n\tthis.stopChainedTweens = function () {\n\n\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t_chainedTweens[i].stop();\n\t\t}\n\n\t};\n\n\tthis.delay = function (amount) {\n\n\t\t_delayTime = amount;\n\t\treturn this;\n\n\t};\n\n\tthis.repeat = function (times) {\n\n\t\t_repeat = times;\n\t\treturn this;\n\n\t};\n\n\tthis.repeatDelay = function (amount) {\n\n\t\t_repeatDelayTime = amount;\n\t\treturn this;\n\n\t};\n\n\tthis.yoyo = function (yoyo) {\n\n\t\t_yoyo = yoyo;\n\t\treturn this;\n\n\t};\n\n\n\tthis.easing = function (easing) {\n\n\t\t_easingFunction = easing;\n\t\treturn this;\n\n\t};\n\n\tthis.interpolation = function (interpolation) {\n\n\t\t_interpolationFunction = interpolation;\n\t\treturn this;\n\n\t};\n\n\tthis.chain = function () {\n\n\t\t_chainedTweens = arguments;\n\t\treturn this;\n\n\t};\n\n\tthis.onStart = function (callback) {\n\n\t\t_onStartCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onUpdate = function (callback) {\n\n\t\t_onUpdateCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onComplete = function (callback) {\n\n\t\t_onCompleteCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onStop = function (callback) {\n\n\t\t_onStopCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.update = function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < _startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (_onStartCallbackFired === false) {\n\n\t\t\tif (_onStartCallback !== null) {\n\t\t\t\t_onStartCallback.call(_object, _object);\n\t\t\t}\n\n\t\t\t_onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - _startTime) / _duration;\n\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\n\t\tvalue = _easingFunction(elapsed);\n\n\t\tfor (property in _valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\tvar end = _valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\t_object[property] = _interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (_onUpdateCallback !== null) {\n\t\t\t_onUpdateCallback.call(_object, value);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (_repeat > 0) {\n\n\t\t\t\tif (isFinite(_repeat)) {\n\t\t\t\t\t_repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in _valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (_valuesEnd[property]) === 'string') {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\tvar tmp = _valuesStartRepeat[property];\n\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\t_valuesStart[property] = _valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (_yoyo) {\n\t\t\t\t\t_reversed = !_reversed;\n\t\t\t\t}\n\n\t\t\t\tif (_repeatDelayTime !== undefined) {\n\t\t\t\t\t_startTime = time + _repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\t_startTime = time + _delayTime;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (_onCompleteCallback !== null) {\n\n\t\t\t\t\t_onCompleteCallback.call(_object, _object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\t_chainedTweens[i].start(_startTime + _duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (true) {\n\n\t\t// AMD\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn TWEEN;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n\t\t// Node.js\n\t\tmodule.exports = TWEEN;\n\n\t} else if (root !== undefined) {\n\n\t\t// Global variable\n\t\troot.TWEEN = TWEEN;\n\n\t}\n\n})(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(54)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIBaseView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__state_selectors__ = __webpack_require__(0);\n\n\n/**\n * MIDI input or output port processor view.\n */\nfunction createMIDIBaseView(specs, my) {\n    var that,\n        parentEl = specs.parentEl,\n        port = specs.port,\n        \n        initialize = function() {\n            // set callback for the port to update the view\n            // port.setViewCallback(updateView);\n            \n            // find template, add clone to midi ports list\n            let template = document.querySelector('#template-midi-port');\n            let clone = template.content.cloneNode(true);\n            my.el = clone.firstElementChild;\n            parentEl.appendChild(my.el);\n            \n            // set data-connected=\"true\" to make the element visible\n            my.el.dataset.connected = true;\n            \n            // show label\n            my.el.querySelector('.midi-port__label').innerHTML = specs.name;\n            \n            // find checkboxes\n            my.networkEl = my.el.querySelector('.midi-port__network');\n            my.syncEl = my.el.querySelector('.midi-port__sync');\n            my.remoteEl = my.el.querySelector('.midi-port__remote');\n            \n            // add DOM event listeners\n            my.networkEl.addEventListener('change', function(e) {\n                if (!e.currentTarget.dataset.disabled) {\n                    my.store.dispatch(my.store.getActions().togglePortNetwork(my.id, my.isInput));\n                }\n            });\n            my.syncEl.addEventListener('change', function(e) {\n                if (!e.currentTarget.dataset.disabled) {\n                    my.store.dispatch(my.store.getActions().togglePortSync(my.id, my.isInput));\n                }\n            });\n            my.remoteEl.addEventListener('change', function(e) {\n                if (!e.currentTarget.dataset.disabled) {\n                    my.store.dispatch(my.store.getActions().togglePortRemote(my.id, my.isInput));\n                }\n            });\n\n            // listen to state updates\n            document.addEventListener(my.store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.TOGGLE_MIDI_PREFERENCE:\n                    case e.detail.actions.TOGGLE_PORT_SYNC:\n                    case e.detail.actions.TOGGLE_PORT_REMOTE:\n                        if (e.detail.action.id === my.id) {\n                            const port = Object(__WEBPACK_IMPORTED_MODULE_0__state_selectors__[\"a\" /* getMIDIPortByID */])(my.id);\n                            my.networkEl.querySelector('[type=checkbox]').checked = port.networkEnabled;\n                            my.syncEl.querySelector('[type=checkbox]').checked = port.syncEnabled;\n                            my.remoteEl.querySelector('[type=checkbox]').checked = port.remoteEnabled;\n                        }\n                        break;\n                }\n            });\n        },\n        \n        /**\n         * Called before this view is deleted.\n         */\n        terminate = function() {\n            if (my.el && parentEl) {\n                parentEl.removeChild(my.el);\n            }\n        },\n        \n        /**\n         * Callback for port to update view.\n         */\n        // updateView = function(key, value) {\n        //     switch (key) {\n        //         case 'network':\n        //             my.networkEl.querySelector('[type=checkbox]').checked = value;\n        //             break;\n        //         case 'sync':\n        //             my.syncEl.querySelector('[type=checkbox]').checked = value;\n        //             break;\n        //         case 'remote':\n        //             my.remoteEl.querySelector('[type=checkbox]').checked = value;\n        //             break;\n        //         case 'connected':\n        //             my.el.dataset.connected = value;\n        //             break;\n        //     }\n        // },\n        \n        getID = function() {\n            return my.id;\n        };\n        \n    my = my || {};\n    my.store = specs.store;\n    my.isInput = specs.isInput;\n    my.id = specs.id;\n    my.el;\n    my.networkEl;\n    my.syncEl;\n    my.remoteEl;\n    \n    that = that || {};\n    \n    initialize();\n    \n    that.terminate = terminate;\n    that.getID = getID;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9taWRpX2Jhc2UuanM/NDI4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTs7QUFFWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE1JRElQb3J0QnlJRCB9IGZyb20gJy4uL3N0YXRlL3NlbGVjdG9ycyc7XG5cbi8qKlxuICogTUlESSBpbnB1dCBvciBvdXRwdXQgcG9ydCBwcm9jZXNzb3Igdmlldy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlTUlESUJhc2VWaWV3KHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBwYXJlbnRFbCA9IHNwZWNzLnBhcmVudEVsLFxuICAgICAgICBwb3J0ID0gc3BlY3MucG9ydCxcbiAgICAgICAgXG4gICAgICAgIGluaXRpYWxpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIHNldCBjYWxsYmFjayBmb3IgdGhlIHBvcnQgdG8gdXBkYXRlIHRoZSB2aWV3XG4gICAgICAgICAgICAvLyBwb3J0LnNldFZpZXdDYWxsYmFjayh1cGRhdGVWaWV3KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gZmluZCB0ZW1wbGF0ZSwgYWRkIGNsb25lIHRvIG1pZGkgcG9ydHMgbGlzdFxuICAgICAgICAgICAgbGV0IHRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RlbXBsYXRlLW1pZGktcG9ydCcpO1xuICAgICAgICAgICAgbGV0IGNsb25lID0gdGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBteS5lbCA9IGNsb25lLmZpcnN0RWxlbWVudENoaWxkO1xuICAgICAgICAgICAgcGFyZW50RWwuYXBwZW5kQ2hpbGQobXkuZWwpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBzZXQgZGF0YS1jb25uZWN0ZWQ9XCJ0cnVlXCIgdG8gbWFrZSB0aGUgZWxlbWVudCB2aXNpYmxlXG4gICAgICAgICAgICBteS5lbC5kYXRhc2V0LmNvbm5lY3RlZCA9IHRydWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIHNob3cgbGFiZWxcbiAgICAgICAgICAgIG15LmVsLnF1ZXJ5U2VsZWN0b3IoJy5taWRpLXBvcnRfX2xhYmVsJykuaW5uZXJIVE1MID0gc3BlY3MubmFtZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gZmluZCBjaGVja2JveGVzXG4gICAgICAgICAgICBteS5uZXR3b3JrRWwgPSBteS5lbC5xdWVyeVNlbGVjdG9yKCcubWlkaS1wb3J0X19uZXR3b3JrJyk7XG4gICAgICAgICAgICBteS5zeW5jRWwgPSBteS5lbC5xdWVyeVNlbGVjdG9yKCcubWlkaS1wb3J0X19zeW5jJyk7XG4gICAgICAgICAgICBteS5yZW1vdGVFbCA9IG15LmVsLnF1ZXJ5U2VsZWN0b3IoJy5taWRpLXBvcnRfX3JlbW90ZScpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBhZGQgRE9NIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgICAgICAgbXkubmV0d29ya0VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWUuY3VycmVudFRhcmdldC5kYXRhc2V0LmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG15LnN0b3JlLmRpc3BhdGNoKG15LnN0b3JlLmdldEFjdGlvbnMoKS50b2dnbGVQb3J0TmV0d29yayhteS5pZCwgbXkuaXNJbnB1dCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbXkuc3luY0VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWUuY3VycmVudFRhcmdldC5kYXRhc2V0LmRpc2FibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG15LnN0b3JlLmRpc3BhdGNoKG15LnN0b3JlLmdldEFjdGlvbnMoKS50b2dnbGVQb3J0U3luYyhteS5pZCwgbXkuaXNJbnB1dCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbXkucmVtb3RlRWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGlmICghZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuZGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbXkuc3RvcmUuZGlzcGF0Y2gobXkuc3RvcmUuZ2V0QWN0aW9ucygpLnRvZ2dsZVBvcnRSZW1vdGUobXkuaWQsIG15LmlzSW5wdXQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gbGlzdGVuIHRvIHN0YXRlIHVwZGF0ZXNcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIobXkuc3RvcmUuU1RBVEVfQ0hBTkdFLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5kZXRhaWwuYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBlLmRldGFpbC5hY3Rpb25zLlRPR0dMRV9NSURJX1BSRUZFUkVOQ0U6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgZS5kZXRhaWwuYWN0aW9ucy5UT0dHTEVfUE9SVF9TWU5DOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIGUuZGV0YWlsLmFjdGlvbnMuVE9HR0xFX1BPUlRfUkVNT1RFOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuZGV0YWlsLmFjdGlvbi5pZCA9PT0gbXkuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3J0ID0gZ2V0TUlESVBvcnRCeUlEKG15LmlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBteS5uZXR3b3JrRWwucXVlcnlTZWxlY3RvcignW3R5cGU9Y2hlY2tib3hdJykuY2hlY2tlZCA9IHBvcnQubmV0d29ya0VuYWJsZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXkuc3luY0VsLnF1ZXJ5U2VsZWN0b3IoJ1t0eXBlPWNoZWNrYm94XScpLmNoZWNrZWQgPSBwb3J0LnN5bmNFbmFibGVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG15LnJlbW90ZUVsLnF1ZXJ5U2VsZWN0b3IoJ1t0eXBlPWNoZWNrYm94XScpLmNoZWNrZWQgPSBwb3J0LnJlbW90ZUVuYWJsZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDYWxsZWQgYmVmb3JlIHRoaXMgdmlldyBpcyBkZWxldGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGVybWluYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAobXkuZWwgJiYgcGFyZW50RWwpIHtcbiAgICAgICAgICAgICAgICBwYXJlbnRFbC5yZW1vdmVDaGlsZChteS5lbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQ2FsbGJhY2sgZm9yIHBvcnQgdG8gdXBkYXRlIHZpZXcuXG4gICAgICAgICAqL1xuICAgICAgICAvLyB1cGRhdGVWaWV3ID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICAvLyAgICAgc3dpdGNoIChrZXkpIHtcbiAgICAgICAgLy8gICAgICAgICBjYXNlICduZXR3b3JrJzpcbiAgICAgICAgLy8gICAgICAgICAgICAgbXkubmV0d29ya0VsLnF1ZXJ5U2VsZWN0b3IoJ1t0eXBlPWNoZWNrYm94XScpLmNoZWNrZWQgPSB2YWx1ZTtcbiAgICAgICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIC8vICAgICAgICAgY2FzZSAnc3luYyc6XG4gICAgICAgIC8vICAgICAgICAgICAgIG15LnN5bmNFbC5xdWVyeVNlbGVjdG9yKCdbdHlwZT1jaGVja2JveF0nKS5jaGVja2VkID0gdmFsdWU7XG4gICAgICAgIC8vICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAvLyAgICAgICAgIGNhc2UgJ3JlbW90ZSc6XG4gICAgICAgIC8vICAgICAgICAgICAgIG15LnJlbW90ZUVsLnF1ZXJ5U2VsZWN0b3IoJ1t0eXBlPWNoZWNrYm94XScpLmNoZWNrZWQgPSB2YWx1ZTtcbiAgICAgICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIC8vICAgICAgICAgY2FzZSAnY29ubmVjdGVkJzpcbiAgICAgICAgLy8gICAgICAgICAgICAgbXkuZWwuZGF0YXNldC5jb25uZWN0ZWQgPSB2YWx1ZTtcbiAgICAgICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH0sXG4gICAgICAgIFxuICAgICAgICBnZXRJRCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG15LmlkO1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LnN0b3JlID0gc3BlY3Muc3RvcmU7XG4gICAgbXkuaXNJbnB1dCA9IHNwZWNzLmlzSW5wdXQ7XG4gICAgbXkuaWQgPSBzcGVjcy5pZDtcbiAgICBteS5lbDtcbiAgICBteS5uZXR3b3JrRWw7XG4gICAgbXkuc3luY0VsO1xuICAgIG15LnJlbW90ZUVsO1xuICAgIFxuICAgIHRoYXQgPSB0aGF0IHx8IHt9O1xuICAgIFxuICAgIGluaXRpYWxpemUoKTtcbiAgICBcbiAgICB0aGF0LnRlcm1pbmF0ZSA9IHRlcm1pbmF0ZTtcbiAgICB0aGF0LmdldElEID0gZ2V0SUQ7XG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L21pZGlfYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wh_core_app__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wh_core_file__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__wh_core_transport__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__wh_midi_midi__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__wh_midi_network__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__wh_midi_remote__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__wh_midi_sync__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__wh_state_actions__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__wh_state_reducers__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__wh_state_store__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__wh_view_app__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__wh_view_canvas__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__wh_view_preferences__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__wh_view_remote__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__wh_view_file__ = __webpack_require__(62);\n/**\n    Euclidean Pattern Generator\n    Copyright (C) 2017, 2018  Wouter Hisschemoller\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Application startup.\n */\ndocument.addEventListener('DOMContentLoaded', function(e) {\n\n    // Create all objects that will be the modules of the app.\n    var app = {},\n        appView = {},\n        canvasView = {},\n        file = {},\n        fileView = {},\n        midi = {},\n        midiNetwork = {},\n        midiRemote = {},\n        midiSync = {},\n        preferencesView = {},\n        remoteView = {},\n        transport = {};\n    \n    const store = Object(__WEBPACK_IMPORTED_MODULE_9__wh_state_store__[\"a\" /* default */])({\n        actions: Object(__WEBPACK_IMPORTED_MODULE_7__wh_state_actions__[\"a\" /* default */])(),\n        reducers: Object(__WEBPACK_IMPORTED_MODULE_8__wh_state_reducers__[\"a\" /* default */])()\n    });\n\n    // Add functionality to the modules and inject dependencies.\n    Object(__WEBPACK_IMPORTED_MODULE_0__wh_core_app__[\"a\" /* default */])({\n        that: app,\n        appView: appView,\n        midiNetwork: midiNetwork,\n        midiRemote: midiRemote,\n        transport: transport\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_10__wh_view_app__[\"a\" /* default */])({\n        that: appView,\n        store: store,\n        app: app\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_11__wh_view_canvas__[\"a\" /* default */])({\n        that: canvasView,\n        store: store\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_12__wh_view_preferences__[\"a\" /* default */])({\n        that: preferencesView,\n        store: store\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_13__wh_view_remote__[\"a\" /* default */])({\n        that: remoteView,\n        appView: appView,\n        midiRemote: midiRemote\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_1__wh_core_file__[\"a\" /* default */])({\n        that: file,\n        store: store,\n        midi: midi,\n        midiNetwork: midiNetwork,\n        midiRemote: midiRemote,\n        transport: transport\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_14__wh_view_file__[\"a\" /* default */])({\n        that: fileView,\n        file: file\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_3__wh_midi_midi__[\"a\" /* default */])({\n        that: midi,\n        store: store,\n        preferencesView: preferencesView,\n        midiNetwork: midiNetwork,\n        midiRemote: midiRemote,\n        midiSync: midiSync\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_5__wh_midi_remote__[\"a\" /* default */])({\n        that: midiRemote,\n        app: app,\n        remoteView: remoteView\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_6__wh_midi_sync__[\"a\" /* default */])({\n        that: midiSync,\n        transport: transport\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_4__wh_midi_network__[\"a\" /* default */])({\n        that: midiNetwork,\n        store: store,\n        app: app,\n        appView: appView,\n        canvasView: canvasView,\n        midiRemote: midiRemote,\n        preferencesView: preferencesView\n    });\n    Object(__WEBPACK_IMPORTED_MODULE_2__wh_core_transport__[\"a\" /* default */])({\n        that: transport,\n        store: store,\n        app: app,\n        canvasView: canvasView,\n        midiNetwork: midiNetwork\n    });\n\n    // initialise\n    midi.connect()\n        .then(file.loadLocalStorage)\n        .then(transport.run);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz9jNDViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsdUJBQXVCO0FBQ3ZCLGlCQUFpQjtBQUNqQixxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLHdCQUF3QjtBQUN4Qix1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLDRCQUE0QjtBQUM1Qix1QkFBdUI7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICAgIEV1Y2xpZGVhbiBQYXR0ZXJuIEdlbmVyYXRvclxuICAgIENvcHlyaWdodCAoQykgMjAxNywgMjAxOCAgV291dGVyIEhpc3NjaGVtb2xsZXJcblxuICAgIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbiAgICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAgICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlQXBwIGZyb20gJy4vd2gvY29yZS9hcHAnO1xuaW1wb3J0IGNyZWF0ZUZpbGUgZnJvbSAnLi93aC9jb3JlL2ZpbGUnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zcG9ydCBmcm9tICcuL3doL2NvcmUvdHJhbnNwb3J0JztcbmltcG9ydCBjcmVhdGVNSURJIGZyb20gJy4vd2gvbWlkaS9taWRpJztcbmltcG9ydCBjcmVhdGVNSURJTmV0d29yayBmcm9tICcuL3doL21pZGkvbmV0d29yayc7XG5pbXBvcnQgY3JlYXRlTUlESVJlbW90ZSBmcm9tICcuL3doL21pZGkvcmVtb3RlJztcbmltcG9ydCBjcmVhdGVNSURJU3luYyBmcm9tICcuL3doL21pZGkvc3luYyc7XG5pbXBvcnQgY3JlYXRlQWN0aW9ucyBmcm9tICcuL3doL3N0YXRlL2FjdGlvbnMnO1xuaW1wb3J0IGNyZWF0ZVJlZHVjZXJzIGZyb20gJy4vd2gvc3RhdGUvcmVkdWNlcnMnO1xuaW1wb3J0IGNyZWF0ZVN0b3JlIGZyb20gJy4vd2gvc3RhdGUvc3RvcmUnO1xuaW1wb3J0IGNyZWF0ZUFwcFZpZXcgZnJvbSAnLi93aC92aWV3L2FwcCc7XG5pbXBvcnQgY3JlYXRlQ2FudmFzVmlldyBmcm9tICcuL3doL3ZpZXcvY2FudmFzJztcbmltcG9ydCBjcmVhdGVQcmVmZXJlbmNlc1ZpZXcgZnJvbSAnLi93aC92aWV3L3ByZWZlcmVuY2VzJztcbmltcG9ydCBjcmVhdGVSZW1vdGVWaWV3IGZyb20gJy4vd2gvdmlldy9yZW1vdGUnO1xuaW1wb3J0IGNyZWF0ZUZpbGVWaWV3IGZyb20gJy4vd2gvdmlldy9maWxlJztcblxuLyoqXG4gKiBBcHBsaWNhdGlvbiBzdGFydHVwLlxuICovXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oZSkge1xuXG4gICAgLy8gQ3JlYXRlIGFsbCBvYmplY3RzIHRoYXQgd2lsbCBiZSB0aGUgbW9kdWxlcyBvZiB0aGUgYXBwLlxuICAgIHZhciBhcHAgPSB7fSxcbiAgICAgICAgYXBwVmlldyA9IHt9LFxuICAgICAgICBjYW52YXNWaWV3ID0ge30sXG4gICAgICAgIGZpbGUgPSB7fSxcbiAgICAgICAgZmlsZVZpZXcgPSB7fSxcbiAgICAgICAgbWlkaSA9IHt9LFxuICAgICAgICBtaWRpTmV0d29yayA9IHt9LFxuICAgICAgICBtaWRpUmVtb3RlID0ge30sXG4gICAgICAgIG1pZGlTeW5jID0ge30sXG4gICAgICAgIHByZWZlcmVuY2VzVmlldyA9IHt9LFxuICAgICAgICByZW1vdGVWaWV3ID0ge30sXG4gICAgICAgIHRyYW5zcG9ydCA9IHt9O1xuICAgIFxuICAgIGNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUoe1xuICAgICAgICBhY3Rpb25zOiBjcmVhdGVBY3Rpb25zKCksXG4gICAgICAgIHJlZHVjZXJzOiBjcmVhdGVSZWR1Y2VycygpXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgZnVuY3Rpb25hbGl0eSB0byB0aGUgbW9kdWxlcyBhbmQgaW5qZWN0IGRlcGVuZGVuY2llcy5cbiAgICBjcmVhdGVBcHAoe1xuICAgICAgICB0aGF0OiBhcHAsXG4gICAgICAgIGFwcFZpZXc6IGFwcFZpZXcsXG4gICAgICAgIG1pZGlOZXR3b3JrOiBtaWRpTmV0d29yayxcbiAgICAgICAgbWlkaVJlbW90ZTogbWlkaVJlbW90ZSxcbiAgICAgICAgdHJhbnNwb3J0OiB0cmFuc3BvcnRcbiAgICB9KTtcbiAgICBjcmVhdGVBcHBWaWV3KHtcbiAgICAgICAgdGhhdDogYXBwVmlldyxcbiAgICAgICAgc3RvcmU6IHN0b3JlLFxuICAgICAgICBhcHA6IGFwcFxuICAgIH0pO1xuICAgIGNyZWF0ZUNhbnZhc1ZpZXcoe1xuICAgICAgICB0aGF0OiBjYW52YXNWaWV3LFxuICAgICAgICBzdG9yZTogc3RvcmVcbiAgICB9KTtcbiAgICBjcmVhdGVQcmVmZXJlbmNlc1ZpZXcoe1xuICAgICAgICB0aGF0OiBwcmVmZXJlbmNlc1ZpZXcsXG4gICAgICAgIHN0b3JlOiBzdG9yZVxuICAgIH0pO1xuICAgIGNyZWF0ZVJlbW90ZVZpZXcoe1xuICAgICAgICB0aGF0OiByZW1vdGVWaWV3LFxuICAgICAgICBhcHBWaWV3OiBhcHBWaWV3LFxuICAgICAgICBtaWRpUmVtb3RlOiBtaWRpUmVtb3RlXG4gICAgfSk7XG4gICAgY3JlYXRlRmlsZSh7XG4gICAgICAgIHRoYXQ6IGZpbGUsXG4gICAgICAgIHN0b3JlOiBzdG9yZSxcbiAgICAgICAgbWlkaTogbWlkaSxcbiAgICAgICAgbWlkaU5ldHdvcms6IG1pZGlOZXR3b3JrLFxuICAgICAgICBtaWRpUmVtb3RlOiBtaWRpUmVtb3RlLFxuICAgICAgICB0cmFuc3BvcnQ6IHRyYW5zcG9ydFxuICAgIH0pO1xuICAgIGNyZWF0ZUZpbGVWaWV3KHtcbiAgICAgICAgdGhhdDogZmlsZVZpZXcsXG4gICAgICAgIGZpbGU6IGZpbGVcbiAgICB9KTtcbiAgICBjcmVhdGVNSURJKHtcbiAgICAgICAgdGhhdDogbWlkaSxcbiAgICAgICAgc3RvcmU6IHN0b3JlLFxuICAgICAgICBwcmVmZXJlbmNlc1ZpZXc6IHByZWZlcmVuY2VzVmlldyxcbiAgICAgICAgbWlkaU5ldHdvcms6IG1pZGlOZXR3b3JrLFxuICAgICAgICBtaWRpUmVtb3RlOiBtaWRpUmVtb3RlLFxuICAgICAgICBtaWRpU3luYzogbWlkaVN5bmNcbiAgICB9KTtcbiAgICBjcmVhdGVNSURJUmVtb3RlKHtcbiAgICAgICAgdGhhdDogbWlkaVJlbW90ZSxcbiAgICAgICAgYXBwOiBhcHAsXG4gICAgICAgIHJlbW90ZVZpZXc6IHJlbW90ZVZpZXdcbiAgICB9KTtcbiAgICBjcmVhdGVNSURJU3luYyh7XG4gICAgICAgIHRoYXQ6IG1pZGlTeW5jLFxuICAgICAgICB0cmFuc3BvcnQ6IHRyYW5zcG9ydFxuICAgIH0pO1xuICAgIGNyZWF0ZU1JRElOZXR3b3JrKHtcbiAgICAgICAgdGhhdDogbWlkaU5ldHdvcmssXG4gICAgICAgIHN0b3JlOiBzdG9yZSxcbiAgICAgICAgYXBwOiBhcHAsXG4gICAgICAgIGFwcFZpZXc6IGFwcFZpZXcsXG4gICAgICAgIGNhbnZhc1ZpZXc6IGNhbnZhc1ZpZXcsXG4gICAgICAgIG1pZGlSZW1vdGU6IG1pZGlSZW1vdGUsXG4gICAgICAgIHByZWZlcmVuY2VzVmlldzogcHJlZmVyZW5jZXNWaWV3XG4gICAgfSk7XG4gICAgY3JlYXRlVHJhbnNwb3J0KHtcbiAgICAgICAgdGhhdDogdHJhbnNwb3J0LFxuICAgICAgICBzdG9yZTogc3RvcmUsXG4gICAgICAgIGFwcDogYXBwLFxuICAgICAgICBjYW52YXNWaWV3OiBjYW52YXNWaWV3LFxuICAgICAgICBtaWRpTmV0d29yazogbWlkaU5ldHdvcmtcbiAgICB9KTtcblxuICAgIC8vIGluaXRpYWxpc2VcbiAgICBtaWRpLmNvbm5lY3QoKVxuICAgICAgICAudGhlbihmaWxlLmxvYWRMb2NhbFN0b3JhZ2UpXG4gICAgICAgIC50aGVuKHRyYW5zcG9ydC5ydW4pO1xufSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createApp;\n/**\n * App stores UI state that's rendered in AppView.\n */\nfunction createApp(specs, my) {\n    let that,\n        appView = specs.appView,\n        midiNetwork = specs.midiNetwork,\n        midiRemote = specs.midiRemote,\n        transport = specs.transport,\n        panelStates = {\n            help: false,\n            preferences: false,\n            remote: false,\n            settings: false\n        },\n        \n        togglePanel = function(panelID, isVisible) {\n            if (typeof panelStates[panelID] == 'boolean') {\n                panelStates[panelID] = isVisible;\n                appView.showPanel(panelID, panelStates[panelID]);\n            }\n        },\n        \n        updateApp = function(property, value) {\n            switch(property) {\n                case 'bpm':\n                    transport.setBPM(value);\n                    break;\n                case 'play':\n                    transport.toggleStartStop();\n                    break;\n                case 'remote':\n                    midiRemote.toggleMidiLearn(value);\n                    break;\n                case 'connections':\n                    midiNetwork.toggleConnections(value);\n                    break;\n            }\n        },\n        \n        appUpdated = function(property, value) {\n            appView.updateControl(property, value);\n        };\n    \n    that = specs.that || {};\n    \n    that.togglePanel = togglePanel;\n    that.updateApp = updateApp;\n    that.appUpdated = appUpdated;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvY29yZS9hcHAuanM/MjRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwcCBzdG9yZXMgVUkgc3RhdGUgdGhhdCdzIHJlbmRlcmVkIGluIEFwcFZpZXcuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUFwcChzcGVjcywgbXkpIHtcbiAgICBsZXQgdGhhdCxcbiAgICAgICAgYXBwVmlldyA9IHNwZWNzLmFwcFZpZXcsXG4gICAgICAgIG1pZGlOZXR3b3JrID0gc3BlY3MubWlkaU5ldHdvcmssXG4gICAgICAgIG1pZGlSZW1vdGUgPSBzcGVjcy5taWRpUmVtb3RlLFxuICAgICAgICB0cmFuc3BvcnQgPSBzcGVjcy50cmFuc3BvcnQsXG4gICAgICAgIHBhbmVsU3RhdGVzID0ge1xuICAgICAgICAgICAgaGVscDogZmFsc2UsXG4gICAgICAgICAgICBwcmVmZXJlbmNlczogZmFsc2UsXG4gICAgICAgICAgICByZW1vdGU6IGZhbHNlLFxuICAgICAgICAgICAgc2V0dGluZ3M6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICB0b2dnbGVQYW5lbCA9IGZ1bmN0aW9uKHBhbmVsSUQsIGlzVmlzaWJsZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYW5lbFN0YXRlc1twYW5lbElEXSA9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICBwYW5lbFN0YXRlc1twYW5lbElEXSA9IGlzVmlzaWJsZTtcbiAgICAgICAgICAgICAgICBhcHBWaWV3LnNob3dQYW5lbChwYW5lbElELCBwYW5lbFN0YXRlc1twYW5lbElEXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICB1cGRhdGVBcHAgPSBmdW5jdGlvbihwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHN3aXRjaChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ2JwbSc6XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zcG9ydC5zZXRCUE0odmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdwbGF5JzpcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNwb3J0LnRvZ2dsZVN0YXJ0U3RvcCgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdyZW1vdGUnOlxuICAgICAgICAgICAgICAgICAgICBtaWRpUmVtb3RlLnRvZ2dsZU1pZGlMZWFybih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2Nvbm5lY3Rpb25zJzpcbiAgICAgICAgICAgICAgICAgICAgbWlkaU5ldHdvcmsudG9nZ2xlQ29ubmVjdGlvbnModmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGFwcFVwZGF0ZWQgPSBmdW5jdGlvbihwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgICAgICAgICAgIGFwcFZpZXcudXBkYXRlQ29udHJvbChwcm9wZXJ0eSwgdmFsdWUpO1xuICAgICAgICB9O1xuICAgIFxuICAgIHRoYXQgPSBzcGVjcy50aGF0IHx8IHt9O1xuICAgIFxuICAgIHRoYXQudG9nZ2xlUGFuZWwgPSB0b2dnbGVQYW5lbDtcbiAgICB0aGF0LnVwZGF0ZUFwcCA9IHVwZGF0ZUFwcDtcbiAgICB0aGF0LmFwcFVwZGF0ZWQgPSBhcHBVcGRhdGVkO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvY29yZS9hcHAuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createFile;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filexml__ = __webpack_require__(14);\n\n\n/**\n * Saves state to - or restores it from localstorage.\n * Saves state to file, opens external files.\n */\nfunction createFile(specs, my) {\n    var that,\n        store = specs.store,\n        midi = specs.midi,\n        midiNetwork = specs.midiNetwork,\n        midiRemote = specs.midiRemote,\n        transport = specs.transport,\n        projectName = 'project',\n        preferencesName = 'preferences',\n        resetKeyCombo = {},\n\n        /**\n         * Autosave file if true.\n         * @type {Boolean}\n         */\n        autoSaveEnabled = true,\n\n        init = function() {\n            window.addEventListener('beforeunload', onBeforeUnload);\n            \n            // key combo r + s + t resets the stored project and preferences.\n            document.addEventListener('keydown', function(e) {\n                resetKeyCombo[e.keyCode] = true;\n                if (Object.keys(resetKeyCombo).length == 3 && resetKeyCombo[82] && resetKeyCombo[83] && resetKeyCombo[84]) {\n                    localStorage.clear();\n                    setup();\n                }\n            });\n            document.addEventListener('keyup', function(e) {\n                resetKeyCombo = {};\n            });\n        },\n\n        /**\n         * Setup on application start.\n         */\n        loadLocalStorage = function() {\n            return new Promise((resolve, reject) => {\n                loadPreferences();\n                if (!loadProjectFromStorage()) {\n                    createNew();\n                }\n                resolve();\n            });\n        },\n\n        /**\n         * Get the stored preferences, if any.\n         */\n        loadPreferences = function() {\n            var data = localStorage.getItem(preferencesName);\n            store.dispatch(store.getActions().setPreferences(data));\n            // if (data) {\n            //     data = JSON.parse(data);\n            //     midi.setData(data.midi);\n            //     preferences.setData(data.preferences);\n            // } else {\n            //     midi.setData();\n            //     preferences.setData();\n            //     console.log('No data in LocalStorage with name \"' + preferencesName + '\".');\n            // }\n        },\n\n        /**\n         * Save application preferences to localStorage.\n         * @param {Object} data Object with preferences data to save.\n         */\n        savePreferences = function() {\n            const data = store.getState().preferences;\n            localStorage.setItem(preferencesName, JSON.stringify(data));\n        },\n\n        /**\n         * Create new empty default project.\n         * Clear all settings and set default values..\n         */\n        createNew = function() {\n            // setData();\n            store.dispatch(store.getActions().setProject());\n        },\n\n        /**\n         * Load project from localStorage.\n         * @return {Boolean} True if a project was found in localstorage.\n         */\n        loadProjectFromStorage = function() {\n            let data = localStorage.getItem(projectName);\n            if (data) {\n                store.dispatch(store.getActions().setProject(JSON.parse(data)));\n                // data = JSON.parse(data);\n                // setData(data);\n            } else {\n                console.log(`No data in LocalStorage with name \"${projectName}\".`);\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Save project if autoSave is enabled.\n         */\n        autoSave = function() {\n            if (autoSaveEnabled) {\n                save();\n            }\n        },\n\n        /**\n         * Collect all project data and save it in localStorage.\n         */\n        save = function() {\n            let data = getData();\n            localStorage.setItem(projectName, JSON.stringify(data));\n        },\n\n        /**\n         * Save the preferences when the page unloads.\n         */\n        onBeforeUnload = function(e) {\n            savePreferences();\n            autoSave();\n        },\n\n        /**\n         * Collect project data to save.\n         * @return {Object} Project data.\n         */\n        getData = function() {\n            return {\n                bpm: transport.getBPM(),\n                network: midiNetwork.getData(),\n                remote: midiRemote.getData()\n            };\n        },\n\n        /**\n         * Restore project from data object.\n         *\n         * Order is important:\n         * 1. MIDI devices have already been detected and input and output objects created.\n         * 2. midi.setData() restores state of the input and output objects. As a result:\n         *   2a. Input ports are added to the remote object for external control.\n         *   2b. Input ports are added to the sync object for external sync.\n         *   2c. Output ports are added to the network which creates output processors for them.\n         * 3. network.setData restores the processors. And:\n         *   3a. Registers the processor with the remote object so they can be controlled.\n         *   3b. Restores the output processor IDs, to identify the for connections.\n         *   3c. Restores all connections between processors.\n         * 4. midiRemote.setData() restores all assignments from MIDI inputs to processor parameters.\n         *\n         * @param {Object} data Project data.\n         */\n        setData = function(data) {\n            console.log(data);\n            data = data || {};\n            transport.setBPM(data.bpm);\n            midiNetwork.setData(data.network);\n            midiRemote.setData(data.remote);\n        },\n\n        /**\n         * Import project data from filesystem JSON file.\n         * @param {Object} file File object.\n         */\n        importFile = function(file) {\n            let fileReader = new FileReader();\n            // closure to capture the file information\n            fileReader.onload = (function(f) {\n                return function(e) {\n                    let isJSON = true\n                    try {\n                        const data = JSON.parse(e.target.result);\n                        if (data) {\n                            setData(data);\n                        }\n                    } catch(errorMessage) {\n                        console.log(errorMessage);\n                        isJSON = false;\n                    }\n                    if (!isJSON) {\n                        // try if it's a legacy xml file\n                        const legacyData = my.convertLegacyFile(e.target.result);\n                        if (legacyData) {\n                            setData(legacyData);\n                        }\n                    }\n                };\n            })(file);\n            fileReader.readAsText(file);\n        },\n\n        /**\n         * Export project data to filesystem JSON file.\n         */\n        exportFile = function() {\n            let jsonString = JSON.stringify(getData()),\n                blob = new Blob([jsonString], {type: 'application/json'}),\n                a = document.createElement('a');\n            a.download = 'epg.json';\n            a.href = URL.createObjectURL(blob);\n            a.click();\n        };\n    \n    my = my || {};\n\n    that = Object(__WEBPACK_IMPORTED_MODULE_0__filexml__[\"a\" /* default */])(specs, my);\n    \n    init();\n\n    that.loadLocalStorage = loadLocalStorage;\n    that.createNew = createNew;\n    that.autoSave = autoSave;\n    that.save = save;\n    that.importFile = importFile;\n    that.exportFile = exportFile;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addXMLFileParser;\n/**\n * \n */\nfunction addXMLFileParser(specs, my) {\n\n    let that;\n    \n    const convertLegacyFile = function(xmlString) {\n            const xmlData = parseXML(xmlString),\n                data = convertData(xmlData);\n            return data;\n        },\n        \n        convertData = function(src) {\n            const dest = {\n                bpm: src.project.tempo,\n                midi: {\n                    inputs: [],\n                    outputs: []\n                },\n                network: {\n                    processors: []\n                },\n                remote: []\n            };\n            for (let i = 0, n = src.project.patterns.pattern.length; i < n; i++) {\n                const pattern = src.project.patterns.pattern[i];\n                const processor = {\n                    type: 'epg',\n                    id: pattern.id,\n                    steps: {\n                        props: {\n                            value: parseInt(pattern.events.steps, 10),\n                            min: 0,\n                            max: 64\n                        }\n                    },\n                    pulses: {\n                        props: {\n                            value: parseInt(pattern.events.notes, 10),\n                            min: 0,\n                            max: parseInt(pattern.events.steps, 10)\n                        }\n                    },\n                    rotation: {\n                        props: {\n                            value: parseInt(pattern.events.rotation, 10),\n                            min: 0,\n                            max: parseInt(pattern.events.steps, 10) - 1\n                        }\n                    },\n                    channel_out: {\n                        props: {\n                            value: parseInt(pattern.midi_out.channel, 10) + 1,\n                            min: 1,\n                            max: 16\n                        }\n                    },\n                    pitch_out: {\n                        props: {\n                            value: parseInt(pattern.midi_out.pitch, 10),\n                            min: 0,\n                            max: 127\n                        }\n                    },\n                    velocity_out: {\n                        props: {\n                            value: parseInt(pattern.midi_out.velocity, 10),\n                            min: 0,\n                            max: 127\n                        }\n                    },\n                    rate: {\n                        props: {\n                            value: (1 / parseInt(pattern.settings.quantization, 10)) * 4\n                        }\n                    },\n                    is_triplets: {\n                        props: {\n                            value: false\n                        }\n                    },\n                    note_length: {\n                        props: {\n                            // Old noteLength is in pulses where PPQN is 24, \n                            // so for example 6 is a sixteenth note length,\n                            // 96 is one 4/4 measure.\n                            value: convertNoteLength(parseInt(pattern.settings.notelength, 10))\n                        }\n                    },\n                    is_mute: {\n                        props: {\n                            value: pattern.settings.mute == 'true'\n                        }\n                    },\n                    name: {\n                        props: {\n                            value: pattern.name['#text']\n                        }\n                    },\n                    position2d: {\n                        props: {\n                            value: {\n                                x: parseInt(pattern.location.x, 10) + 100,\n                                y: parseInt(pattern.location.y, 10) + 100\n                            }\n                        }\n                    },\n                    destinations: []\n                };\n                dest.network.processors.push(processor);\n            };\n            return dest;\n        },\n        \n        /**\n         * Old noteLength is in pulses where PPQN is 24, \n         * so for example 6 is a sixteenth note length,\n         * 96 is one 4/4 measure.\n         * @param  {Number} oldLength Note length in pulses.\n         * @return {Number} New note length in fraction of a beat.\n         */\n        convertNoteLength = function(oldLength) {\n            let newNoteLength;\n            if (oldLength == 96) {\n                newNoteLength = 4;\n            } else if (oldLength >= 48) {\n                newNoteLength = 2;\n            } else if (oldLength >= 24) {\n                newNoteLength = 1;\n            } else if (oldLength >= 12) {\n                newNoteLength = 0.5;\n            } else if (oldLength >= 6) {\n                newNoteLength = 0.25;\n            } else {\n                newNoteLength = 0.125;\n            }\n            return newNoteLength;\n        },\n        \n        /**\n         * Parse XML string to Javascript object.\n         * @see https://stackoverflow.com/questions/4200913/xml-to-javascript-object\n         * @param  {String} xmlString XML data as string.\n         * @param  {[type]} arrayTags [description]\n         * @return {Object} Javascript object created from XML.\n         */\n        parseXML = function(xml, arrayTags) {\n            var dom = null;\n            if (window.DOMParser) {\n                dom = (new DOMParser()).parseFromString(xml, \"text/xml\");\n            } else if (window.ActiveXObject) {\n                dom = new ActiveXObject('Microsoft.XMLDOM');\n                dom.async = false;\n                if (!dom.loadXML(xml)) {\n                    throw dom.parseError.reason + \" \" + dom.parseError.srcText;\n                }\n            } else {\n                throw \"cannot parse xml string!\";\n            }\n\n            function isArray(o) {\n                return Object.prototype.toString.apply(o) === '[object Array]';\n            }\n\n            function parseNode(xmlNode, result) {\n                if (xmlNode.nodeName == \"#text\" || xmlNode.nodeName == '#cdata-section') {\n                    var v = xmlNode.nodeValue;\n                    if (v.trim()) {\n                       result['#text'] = v;\n                    }\n                    return;\n                }\n\n                var jsonNode = {};\n                var existing = result[xmlNode.nodeName];\n                if(existing) {\n                    if(!isArray(existing)) {\n                        result[xmlNode.nodeName] = [existing, jsonNode];\n                    } else {\n                        result[xmlNode.nodeName].push(jsonNode);\n                    }\n                } else {\n                    if(arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1) {\n                        result[xmlNode.nodeName] = [jsonNode];\n                    } else {\n                        result[xmlNode.nodeName] = jsonNode;\n                    }\n                }\n\n                if(xmlNode.attributes) {\n                    var length = xmlNode.attributes.length;\n                    for(var i = 0; i < length; i++) {\n                        var attribute = xmlNode.attributes[i];\n                        jsonNode[attribute.nodeName] = attribute.nodeValue;\n                    }\n                }\n\n                var length = xmlNode.childNodes.length;\n                for(var i = 0; i < length; i++) {\n                    parseNode(xmlNode.childNodes[i], jsonNode);\n                }\n            }\n\n            var result = {};\n            if(dom.childNodes.length) {\n                parseNode(dom.childNodes[0], result);\n            }\n\n            return result;\n        };\n    \n    my = my || {};\n    my.convertLegacyFile = convertLegacyFile;\n    \n    that = specs.that;\n    \n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export createSequencer */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createTransport;\n/**\n * Timing, transport and sequencing functionality.\n * Divided in two sets of functionality, Transport and Sequencer.\n * \n * Unix epoch,                page    AudioContext   Transport        now,\n * 01-01-1970 00:00:00 UTC    load    created        start            the present\n *  |                          |       |              |                | \n *  |--------------------------|-------|-------//-----|--------//------|\n *  \n *  |------------------------------------------------------------------> Date.now()\n *                             |---------------------------------------> performance.now()\n *                                     |-------------------------------> AudioContext.currentTime\n */\n\n// window.WH = window.WH || {};\n\n// (function (ns) {\n    \n/**\n * @description Creates sequencer functionality.\n * Takes time from transport to get music events from arrangement and\n * drives components that process music events.\n * @param {Object} specs External specifications.\n * @param {Object} my Internally shared properties.\n */\nfunction createSequencer (specs, my) {\n    var that,\n        app = specs.app,\n        canvasView = specs.canvasView,\n        midiNetwork = specs.midiNetwork,\n        ppqn = 480,\n        bpm = 120,\n        lastBpm = bpm,\n        tickInMilliseconds,\n        audioContextOffset = 0,\n        timelineOffset = 0,\n        playbackQueue = [],\n        renderThrottleCounter = 0,\n        processorEvents = {},\n        \n        /**\n         * Scan the arrangement for events and send them to concerned components.\n         * @param {Number} scanStart Start in ms of timespan to scan.\n         * @param {Number} scanEnd End in ms of timespan to scan.\n         * @param {Number} nowToScanStart Duration from now until start time in ms.\n         * @param {Number} offset Position of transport playhead in ms.\n         */\n        scanEvents = function(scanStart, scanEnd, nowToScanStart, offset) {\n            midiNetwork.process(msec2tick(scanStart), msec2tick(scanEnd), msec2tick(nowToScanStart), tickInMilliseconds, msec2tick(offset), processorEvents);\n        },\n        \n        /**\n         * Use Timing's requestAnimationFrame as clock for view updates.\n         * @param {Number} position Timing position, equal to performance.now(). \n         */\n        updateView = function(position) {\n            if (renderThrottleCounter % 2 === 0) {\n                // midiNetwork.render(msec2tick(position));\n                canvasView.draw(position, processorEvents);\n                Object.keys(processorEvents).forEach(v => processorEvents[v] = []);\n            }\n            renderThrottleCounter++;\n        },\n        \n        /**\n         * Convert milliseconds to ticks.\n         */\n        msec2tick = function (sec) {\n            return sec / tickInMilliseconds;\n        },\n        \n        /**\n         * Convert ticks to milliseconds.\n         */\n        tick2msec = function (tick) {\n            return tick * tickInMilliseconds;\n        },\n        \n        /**\n         * Set Beats Per Minute.\n         * @param {Number} newBpm New value for BPM.\n         */\n        setBPM = function(newBpm = 120) {\n            bpm = newBpm;\n            var beatInMilliseconds = 60000.0 / bpm;\n            tickInMilliseconds = beatInMilliseconds / ppqn;\n            // calculate change factor\n            var factor = lastBpm / bpm;\n            my.setLoopByFactor(factor);\n            app.appUpdated('bpm', bpm);\n        },\n        \n        /**\n         * Get Beats Per Minute of the project.\n         * @return [Number] Beats Per Minute.\n         */\n        getBPM = function() {\n            return bpm;\n        },\n        \n        /**\n         * Set difference between AudioContext.currentTime and performance.now.\n         * Used to convert timing for AudioContext playback.\n         * @param {Number} acCurrentTime Timestamp in seconds.\n         */\n        setAudioContextOffset = function(acCurrentTime) {\n            audioContextOffset = performance.now() - (acCurrentTime * 1000);\n        };\n    \n    my = my || {};\n    my.setBPM = setBPM;\n    my.store = specs.store;\n    my.scanEvents = scanEvents;\n    my.updateView = updateView;\n    \n    that = specs.that || {};\n    \n    that.setBPM = setBPM;\n    that.getBPM = getBPM;\n    that.setAudioContextOffset = setAudioContextOffset;\n    return that;\n}\n\n/**\n * Functionality to add synchronisation to external MIDI clock.\n * MIDI clock sends clock events at 24 ppqn.\n * @see https://en.wikipedia.org/wiki/MIDI_beat_clock\n * \n * The MIDI 'start' and 'stop' events just start and stop the transport.\n * The MIDI 'clock' event adjusts the BPM tempo.\n * \n * BPM is calculated with the time difference between clock event timestamps.\n */\nfunction createExternalClock (specs, my) {\n    var that,\n        isEnabled = false,\n        midiInput,\n        prevBPM = 0,\n        prevTimestamp = 0,\n        updateTimeout,\n        \n        /**\n         * Enable synchronisation to external MIDI clock.\n         * @param {Boolean} isEnabled True to synchronise to external MIDI clock.\n         * @param {Object} midiInputPort MIDI input port.\n         */\n        setExternalClockEnabled = function(isEnabled, midiInputPort) {\n            if (isEnabled) {\n                midiInput = midiInputPort;\n                midiInput.addListener('start', 1, onStart);\n                midiInput.addListener('stop', 1, onStop);\n                midiInput.addListener('clock', 1, onClock);\n            } else {\n                if (midiInput) {\n                    midiInput.removeListener('start', onStart);\n                    midiInput.removeListener('stop', onStop);\n                    midiInput.removeListener('clock', onClock);\n                }\n                midiInput = null;\n            }\n        },\n        \n        /**\n         * Start transport.\n         */\n        onStart = function() {\n            that.start();\n        },\n        \n        /**\n         * Stop transport.\n         */\n        onStop = function() {\n            that.pause();\n            that.rewind();\n        },\n        \n        /**\n         * Convert events at 24 ppqn to BPM, suppress jitter from unstable clocks.\n         * @param {Object} e Event from WebMIDI.js.\n         */\n        onClock = function(e) {\n            if (prevTimestamp > 0) {\n                var newBPM = 60000 / ((e.timestamp - prevTimestamp) * 24);\n                var bpm = prevBPM ? ((prevBPM * 23) + newBPM) / 24 : newBPM;\n                prevBPM = bpm;\n                bpm = bpm.toFixed(1);\n                if (bpm != that.getBPM()) {\n                    updateTempo(bpm);\n                }\n            }\n            prevTimestamp = e.timestamp;\n        },\n        \n        /**\n         * Update tempo no more than once every 500ms.\n         * @param {Number} bpm The new changed BPM.\n         */\n        updateTempo = function(bpm) {\n            if (!updateTimeout) {\n                that.setBPM(bpm);\n                updateTimeout = setTimeout(function() {\n                    updateTimeout = 0;\n                }, 500);\n            }\n        };\n    \n    that = specs.that || {};\n    \n    that.setExternalClockEnabled = setExternalClockEnabled;\n    return that;\n}\n\n/**\n * @description Creates transport timing functionality.\n * Time is always measured in milliseconds since document load.\n * The timer can be started, stopped, rewound to zero and looped.\n * It defines a scan range that is just ahead of the play position\n * and that is meant to be used to scan for events to play.\n * @param {Object} specs Options.\n * @param {Object} my Properties shared between the functionalities of the object.\n */\nfunction createTransport(specs, my) {\n    var that,\n        app = specs.app,\n        position = 0,\n        origin = 0,\n        scanStart = 0,\n        scanEnd = 0,\n        lookAhead = 200,\n        loopStart = 0,\n        loopEnd = 0,\n        isRunning = false,\n        isLooping = false,\n        needsScan = false,\n\n        init = function() {\n            document.addEventListener(my.store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.TOGGLE_PLAY:\n                        toggleStartStop(e.detail.state.isPlaying);\n                        break;\n                    \n                    case e.detail.actions.SET_PROJECT:\n                    case e.detail.actions.SET_TEMPO:\n                        my.setBPM(e.detail.state.bpm);\n                        break;\n                }\n            });\n        },\n        \n        /**\n         * Set the scan range.\n         * @param {Number} start Start timestamp of scan range.\n         */\n        setScanRange = function (start) {\n            scanStart = start;\n            scanEnd =  scanStart + lookAhead;\n            needsScan = true;\n        },\n        \n        /**\n         * Updated the playhead position by adjusting the timeline origin.\n         * @param {Number} newOrigin Timeline origin timestamp.\n         */\n        setOrigin = function(newOrigin) {\n            loopStart = loopStart - origin + newOrigin;\n            loopEnd = loopEnd - origin + newOrigin;\n            origin = newOrigin;\n        },\n        \n        /**\n         * Timer using requestAnimationFrame that updates the transport timing.\n         */\n        run = function() {\n            if (isRunning) {\n                position = performance.now();\n                if (isLooping && position < loopEnd && scanStart < loopEnd && scanEnd > loopEnd) {\n                    setOrigin(origin + (loopEnd - loopStart));\n                }\n                if (scanEnd - position < 16.7) {\n                    setScanRange(scanEnd);\n                }\n                if (needsScan) {\n                    needsScan = false;\n                    my.scanEvents(scanStart - origin, scanEnd - origin, scanStart - position, position - origin);\n                }\n            }\n            my.updateView(position - origin);\n            requestAnimationFrame(run);\n        },\n        \n        /**\n         * Start the timer.\n         */\n        start = function() {\n            var offset = position - origin;\n            position = performance.now();\n            setOrigin(position - offset);\n            setScanRange(position);\n            isRunning = true;\n            app.appUpdated('play', isRunning);\n        },\n        \n        /**\n         * Pause the timer.\n         */\n        pause = function () {\n            isRunning = false;\n            app.appUpdated('play', isRunning);\n        },\n        \n        /**\n         * Rewind the timer to timeline start.\n         */\n        rewind = function () {\n            position = performance.now();\n            setOrigin(position);\n            setScanRange(position);\n        },\n        \n        /**\n         * Toggle between stop and play.\n         */\n        toggleStartStop = function() {\n            if (isRunning) {\n                pause();\n            } else {\n                rewind();\n                start();\n            }\n        },\n        \n        /**\n         * Set loop startpoint.\n         * @param {Number} position Loop start timestamp.\n         */\n        setLoopStart = function (position) {\n            loopStart = origin + position;\n        },\n        \n        /**\n         * Set loop endpoint.\n         * @param {Number} position Loop end timestamp.\n         */\n        setLoopEnd = function (position) {\n            loopEnd = origin + position;\n        },\n        \n        /**\n         * Set loop mode.\n         * @param {Boolean} isEnabled True to enable looping.\n         * @param {Number} position Loop start timestamp.\n         * @param {Number} position Loop end timestamp.\n         */\n        setLoop = function (isEnabled, startPosition, endPosition) {\n            isLooping = isEnabled;\n        },\n        \n        /**\n         * Change loop points by a factor if the tempo changes.\n         * @param {number} factor Time points multiplier.\n         */\n        setLoopByFactor = function(factor) {\n            setLoopStart(loopStart * factor);\n            setLoopEnd(loopEnd * factor);\n        };\n        \n    my = my || {};\n    my.setLoopByFactor = setLoopByFactor;\n    \n    that = createSequencer(specs, my);\n    that = createExternalClock(specs, my);\n\n    init();\n    \n    that.start = start;\n    that.pause = pause;\n    that.rewind = rewind;\n    that.toggleStartStop = toggleStartStop\n    that.run = run;\n    that.setLoopStart = setLoopStart;\n    that.setLoopEnd = setLoopEnd;\n    that.setLoop = setLoop;\n    return that;\n};\n    \n//     ns.createTransport = createTransport;\n\n// })(WH);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDI;\n/**\n * Handles connection with soft- and hardware MIDI devices.\n */\nfunction createMIDI(specs) {\n    var that,\n        store = specs.store,\n        preferencesView = specs.preferencesView,\n        midiNetwork = specs.midiNetwork,\n        midiRemote = specs.midiRemote,\n        midiSync = specs.midiSync,\n        transport = specs.transport,\n        midiAccess,\n        inputs = [],\n        outputs = [],\n        dataFromStorage,\n\n        connect = function() {\n            return new Promise((resolve, reject) => {\n                requestAccess(resolve, onAccessFailure, false);\n            });\n        },\n\n        /**\n         * Request system for access to MIDI ports.\n         * @param {function} successCallback\n         * @param {function} failureCallback\n         * @param {boolean} sysex True if sysex data must be included.\n         */\n        requestAccess = function(successCallback, failureCallback, sysex) {\n            if (navigator.requestMIDIAccess) {\n                navigator.requestMIDIAccess({\n                    sysex: !!sysex\n                }).then(function(_midiAccess) {\n                    if (!_midiAccess.inputs.size && !_midiAccess.outputs.size) {\n                        failureCallback('No MIDI devices found on this system.');\n                    } else {\n                        onAccessSuccess(_midiAccess);\n                        successCallback();\n                    }\n                }, function() {\n                    failureCallback('RequestMIDIAccess failed.');\n                });\n            } else {\n                failureCallback('Web MIDI API not available.');\n            }\n        },\n\n        /**\n         * MIDI access request failed.\n         * @param {String} errorMessage\n         */\n        onAccessFailure = function(errorMessage) {\n            console.log(errorMessage);\n        },\n\n        /**\n         * MIDI access request succeeded.\n         * @param {Object} midiAccessObj MidiAccess object.\n         */\n        onAccessSuccess = function(_midiAccess) {\n            console.log('MIDI enabled.');\n            midiAccess = _midiAccess;\n\n            const inputs = midiAccess.inputs.values();\n            const outputs = midiAccess.outputs.values();\n            \n            for (let port = inputs.next(); port && !port.done; port = inputs.next()) {\n                store.dispatch(store.getActions().addMIDIPort(port.value.id, port.value.name, true));\n                // createInput(port.value);\n            }\n            \n            for (let port = outputs.next(); port && !port.done; port = outputs.next()) {\n                store.dispatch(store.getActions().addMIDIPort(port.value.id, port.value.name, false));\n                // createOutput(port.value);\n            }\n            \n            // restorePortSettings();\n\n            midiAccess.onstatechange = onAccessStateChange;\n        },\n\n        /**\n         * MIDIAccess object statechange handler.\n         * If the change is the addition of a new port, create a port module.\n         * This handles MIDI devices that are connected after the app initialisation.\n         * Disconnected or reconnected ports are handled by the port modules.\n         * @param {Object} e MIDIConnectionEvent object.\n         */\n        onAccessStateChange = function(e) {\n            let ports = (e.port.type == 'input') ? inputs : outputs,\n                exists = false,\n                n = ports.length;\n\n            while (--n >= 0 && exists == false) {\n                exists = (e.port.id == ports[n].getID());\n            }\n\n            if (!exists) {\n                if (e.port.type == 'input') {\n                    createInput(e.port);\n                } else {\n                    createOutput(e.port);\n                }\n            }\n        },\n        \n        /**\n         * Create a MIDI input model and view.\n         * @param  {Object} midiPort MIDIInput module.\n         */\n        createInput = function(midiPort) {\n            console.log('MIDI input port:', midiPort.name + ' (' + midiPort.manufacturer + ')', midiPort.id);\n            var input = ns.createMIDIPortInput({\n                midiPort: midiPort,\n                network: midiNetwork,\n                sync: midiSync,\n                remote: midiRemote\n            });\n            // create a view for this port in the preferences panel\n            preferencesView.createMIDIPortView(true, input);\n            // store port\n            inputs.push(input);\n            // port initialisation last\n            input.setup();\n        },\n        \n        /**\n         * Create a MIDI output model and view.\n         * @param  {Object} midiPort MIDIOutput module.\n         */\n        createOutput = function(midiPort) {\n            console.log('MIDI output port:', midiPort.name + ' (' + midiPort.manufacturer + ')', midiPort.id);\n            var output = ns.createMIDIPortOutput({\n                midiPort: midiPort,\n                network: midiNetwork,\n                sync: midiSync,\n                remote: midiRemote\n            });\n            // create a view for this port in the preferences panel\n            preferencesView.createMIDIPortView(false, output);\n            // store port\n            outputs.push(output);\n            // port initialisation last\n            output.setup();\n        },\n        \n        /**\n         * Restore settings at initialisation.\n         * If port settings data from localStorage and \n         * access to MIDI ports exists, restore port settings.\n         */\n        restorePortSettings = function() {\n            if (midiAccess && dataFromStorage) {\n                const data = dataFromStorage;\n                \n                if (data.inputs) {\n                    let inputData;\n                    for (let i = 0, n = data.inputs.length; i < n; i++) {\n                        inputData = data.inputs[i];\n                        // find the input port by MIDIInput ID\n                        for (let j = 0, nn = inputs.length; j < nn; j++) {\n                            if (inputData.midiPortID == inputs[j].getID()) {\n                                inputs[j].setData(inputData);\n                            }\n                        }\n                    }\n                }\n                \n                if (data.outputs) {\n                    let outputData;\n                    for (let i = 0, n = data.outputs.length; i < n; i++) {\n                        outputData = data.outputs[i];\n                        // find the output port by MIDIOutput ID\n                        for (let j = 0, nn = outputs.length; j < nn; j++) {\n                            if (outputData.midiPortID == outputs[j].getID()) {\n                                outputs[j].setData(outputData);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \n        clearPortSettings = function() {\n            inputs.forEach(function(input) {\n                input.setData();\n            });\n            outputs.forEach(function(output) {\n                output.setData();\n            });\n        },\n\n        /**\n         * Restore MIDI port object settings from data object.\n         * @param {Object} data Preferences data object.\n         */\n        setData = function(data = {}) {\n            dataFromStorage = data;\n            clearPortSettings();\n            restorePortSettings();\n        },\n\n        /**\n         * Write MIDI port object settings to data object.\n         * @return {Object} MIDI port object data.\n         */\n        getData = function() {\n            const data = {\n                inputs: [],\n                outputs: []\n            };\n            \n            for (let i = 0, n = inputs.length; i < n; i++) {\n                data.inputs.push(inputs[i].getData());\n            }\n            \n            for (let i = 0, n = outputs.length; i < n; i++) {\n                data.outputs.push(outputs[i].getData());\n            }\n            \n            return data;\n        };\n\n    that = specs.that;\n\n    that.connect = connect;\n    that.setData = setData;\n    that.getData = getData;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDINetwork;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__networkconnections__ = __webpack_require__(18);\n\n\n/**\n * Manages the graph of midi processors.\n */\nfunction createMIDINetwork(specs, my) {\n    var that,\n        store = specs.store,\n        app = specs.app,\n        appView = specs.appView,\n        canvasView = specs.canvasView,\n        midiRemote = specs.midiRemote,\n        preferencesView = specs.preferencesView,\n        processors = [],\n        numProcessors = 0,\n        numInputProcessors = 0,\n        connections = [],\n\n        init = function() {\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.ADD_PROCESSOR:\n                        createProcessor(e.detail.state.processors);\n                        break;\n                    \n                    case e.detail.actions.DELETE_PROCESSOR:\n                        deleteProcessor(e.detail.action.id);\n                        break;\n                }\n            });\n        },\n\n        /**\n         * Create a new processor in the network.\n         * @param {Array} state Array of all processor data.\n         */\n        createProcessor = function(state) {\n            state.forEach((data, i) => {\n                if (!processors[i] || (data.id !== processors[i].getID())) {\n                    const module = __webpack_require__(19)(`./${data.type}/processor`);\n                    const processor = module.createProcessor({\n                        data: data,\n                        store: store\n                    });\n                    processors.splice(i, 0, processor);\n                }\n            });\n            numProcessors = processors.length;\n            \n            \n            \n            return;\n\n\n            // if (midiProcessors[specs.type]) {\n            //     specs = specs || {};\n            //     specs.that = {};\n            //     specs.id = specs.id || specs.type + performance.now() + '_' + Math.random();\n            //     var processor = midiProcessors[specs.type].createProcessor(specs);\n\n            //     // insert the processor at the right position\n            //     switch (specs.type) {\n            //         case 'input':\n            //             processors.unshift(processor);\n            //             numInputProcessors++;\n            //             break;\n            //         case 'output':\n            //             processors.push(processor);\n            //             break;\n            //         default:\n            //             processors.splice(numInputProcessors, 0, processor);\n            //     }\n\n            //     console.log('Create processor ' + processor.getType() + ' (id ' + processor.getID() + ')');\n            //     numProcessors = processors.length;\n                \n            //     setProcessorDefaultName(processor);\n\n            //     // create the views for the processor\n            //     switch (specs.type) {\n            //         case 'input':\n            //             break;\n            //         case 'output':\n            //             canvasView.createProcessorView(processor);\n            //             break;\n            //         case 'epg':\n            //             appView.createSettingsView(processor);\n            //             canvasView.createProcessorView(processor);\n            //             midiRemote.registerProcessor(processor);\n            //             selectProcessor(processor);\n            //             // canvasView.markDirty();\n            //             break;\n            //     }\n            // } else {\n            //     console.error('No MIDI processor found of type: ', specs.type);\n            // }\n            \n            // return processor;\n        },\n\n        /**\n         * Delete a processor.\n         * @param {String} id ID of processor to delete.\n         */\n        deleteProcessor = function(id) {\n            var processor;\n            for (var i = 0, n = processors.length; i < n; i++) {\n                if (processors[i].getID() === id) {\n                    processor = processors[i];\n                    if (typeof processor.terminate === 'function') {\n                        processor.terminate();\n                    }\n                    processors.splice(processors.indexOf(processor), 1);\n                    break;\n                }\n            }\n            numProcessors = processors.length;\n            \n            // if (processor) {\n            //     console.log('Delete processor ' + processor.getType() + ' (id ' + processor.getID() + ')');\n                \n                // disconnect other processors that have this processor as destination\n                // for (var i = 0; i < numProcessors; i++) {\n                //     if (typeof processors[i].disconnect === 'function') {\n                //         disconnectProcessors(processors[i], processor);\n                //     }\n                // }\n                \n                // delete the views for the processor\n                // switch (processor.getType()) {\n                //     case 'input':\n                //         numInputProcessors--;\n                //         break;\n                //     case 'output':\n                //         canvasView.deleteProcessorView(processor);\n                //         break;\n                //     case 'epg':\n                //         appView.deleteSettingsView(processor);\n                //         canvasView.deleteProcessorView(processor);\n                //         midiRemote.unregisterProcessor(processor);\n                //         break;\n                // }\n\n                // disconnect this processor from its destinations\n                // if (typeof processor.disconnect === 'function') {\n                //     const destinationProcessors = processor.getDestinations();\n                //     for (let i = 0, n = destinationProcessors.length; i < n; i++) {\n                //         disconnectProcessors(processor, destinationProcessors[i]);\n                //     }\n                // }\n                \n                // selectNextProcessor(processor);\n                \n                // if (typeof processor.terminate === 'function') {\n                //     processor.terminate();\n                // }\n                \n                // processors.splice(processors.indexOf(processor), 1);\n                // numProcessors = processors.length;\n            // }\n        },\n\n        /**\n         * Select a processor.\n         * @param  {Object} processor Processor to select.\n         */\n        selectProcessor = function(processor) {\n            app.togglePanel('settings', processor != null);\n            app.appUpdated('settings', processor != null);\n            for (var i = 0; i < numProcessors; i++) {\n                var proc = processors[i];\n                if (typeof proc.setSelected == 'function') {\n                    proc.setSelected(proc === processor);\n                }\n            }\n        },\n\n        /**\n         * Select the next processor from the given.\n         * @param  {Object} processor Processor to select.\n         */\n        selectNextProcessor = function(processor) {\n            let processorIndex = processors.indexOf(processor),\n                nextIndex,\n                nextProcessor,\n                isNextProcessor;\n            for (let i = 1, n = processors.length; i <= n; i++) {\n                nextIndex = (processorIndex + i) % n;\n                nextProcessor = processors[nextIndex];\n                if (nextProcessor.getType() !== 'input' && nextProcessor.getType() !== 'output' && nextProcessor !== processor) {\n                    isNextProcessor = true;\n                    selectProcessor(nextProcessor);\n                    break;\n                }\n            }\n            \n            if (!isNextProcessor) {\n                selectProcessor(null);\n            }\n        },\n        \n        connectProcessors = function(sourceProcessor, destinationProcessor) {\n            if (!sourceProcessor.getDestinations().includes(destinationProcessor)) {\n                sourceProcessor.connect(destinationProcessor);\n            }\n        },\n        \n        disconnectProcessors = function(sourceProcessor, destinationProcessor) {\n            if (sourceProcessor.getDestinations().includes(destinationProcessor)) {\n                sourceProcessor.disconnect(destinationProcessor);\n            }\n        },\n        \n        /**\n         * Set default processor name.\n         * @param {Object} processor Processor to name.\n         */\n        // setProcessorDefaultName = function(processor) {\n        //     let name, number, spaceIndex, \n        //         highestNumber = 0,\n        //         staticName = 'Processor';\n        //     for (let i = 0; i < numProcessors; i++) {\n        //         name = processors[i].getParamValue('name');\n        //         if (name && name.indexOf(staticName) == 0) {\n        //             spaceIndex = name.lastIndexOf(' ');\n        //             if (spaceIndex != -1) {\n        //                 number = parseInt(name.substr(spaceIndex), 10);\n        //                 if (!isNaN(number)) {\n        //                     highestNumber = Math.max(highestNumber, number);\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     processor.setParamValue('name', 'Processor ' + (highestNumber + 1));\n        // },\n\n        /**\n         * Let all processors process their data.\n         * @param {Number} start Start time in ticks of timespan to process.\n         * @param {Number} end End time in ticks of timespan to process.\n         * @param {Number} nowToScanStart Duration from now until start time in ticks.\n         * @param {Number} ticksToMsMultiplier Ticks to ms. conversion multiplier.\n         * @param {Number} offset Position of transport playhead in ticks.\n         * @param {Object} processorEvents Object to collect processor generated events to displayin the view.\n         */\n        process = function(start, end, nowToScanStart, ticksToMsMultiplier, offset, processorEvents) {\n            for (var i = 0; i < numProcessors; i++) {\n                processors[i].process(start, end, nowToScanStart, ticksToMsMultiplier, offset, processorEvents);\n            }\n        },\n\n        /**\n         * Update view. At requestAnimationFrame speed.\n         * @param  {Number} position Transport playback position in ticks.\n         */\n        // render = function(position) {\n        //     for (var i = 0; i < numProcessors; i++) {\n        //         if (processors[i].render) {\n        //             processors[i].render(position);\n        //         }\n        //     }\n        // },\n\n        /**\n         * Clear the whole network.\n         * Remove all processors except the inputs and outputs.\n         * Remove all the connections.\n         */\n        clear = function() {\n            let type,\n                n = numProcessors;\n            while (--n >= 0) {\n                type = processors[n].getType();\n                if (type !== 'input' && type !== 'output') {\n                    deleteProcessor(processors[n]);\n                }\n            }\n        },\n\n        /**\n         * Restore network from data object.\n         * @param {Object} data Preferences data object.\n         */\n        setData = function(data = {}) {\n            // clear all old data\n            clear();\n            \n            if (!data.processors || data.processors.length == 0) {\n                return;\n            }\n            \n            // create the processors\n            data.processors.forEach(function(item) {\n                // don't create MIDI inputs and outputs yet\n                if (item.type !== 'input' && item.type !== 'output') {\n                    createProcessor({\n                        type: item.type,\n                        id: item.id\n                    }, true);\n                }\n            });\n\n            // find midi processors created for the detected midi ports,\n            // match them with the saved midi processor data,\n            // by comparing the midi port ids\n            // then give the matched processors the processor id from the saved data\n            // so that connections to input and output processors can be restored\n            var pdata = data.processors,\n                n = pdata.length,\n                procType,\n                numProcessors = processors.length;\n            for (var i = 0; i < n; i++) {\n                if (pdata[i].type === 'input' || pdata[i].type === 'output') {\n                    for (var j = 0; j < numProcessors; j++) {\n                        procType = processors[j].getType();\n                        if (procType === 'input' || procType === 'output') {\n                            if (pdata[i].midiPortID === processors[j].getPort().id) {\n                                processors[j].setID(pdata[i].id);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // restore state of the processor\n            for (var i = 0; i < n; i++) {\n                for (var j = 0; j < numProcessors; j++) {\n                    if (pdata[i].id === processors[j].getID()) {\n                        processors[j].setData(pdata[i]);\n                    }\n                }\n            }\n\n            // connect the processors\n            var sourceProcessor, numDestinations, destinationIDs;\n            for (var i = 0; i < n; i++) {\n                destinationIDs = pdata[i].destinations;\n                if (destinationIDs && destinationIDs.length) {\n                    // find source processor\n                    sourceProcessor = null;\n                    for (var j = 0; j < numProcessors; j++) {\n                        if (pdata[i].id === processors[j].getID()) {\n                            sourceProcessor = processors[j];\n                        }\n                    }\n\n                    // find destination processor(s)\n                    if (sourceProcessor) {\n                        numDestinations = destinationIDs.length;\n                        for (var j = 0; j < numDestinations; j++) {\n                            for (var k = 0; k < numProcessors; k++) {\n                                if (destinationIDs[j] == processors[k].getID()) {\n                                    connectProcessors(sourceProcessor, processors[k]);\n                                    console.log('Connect ' + sourceProcessor.getType() + ' to ' + processors[k].getType());\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        /**\n         * Write network settings to data object.\n         * @return {Object} Data to store.\n         */\n        getData = function() {\n            // collect data from all processors\n            var processor,\n                procData = [];\n            for (var i = 0; i < numProcessors; i++) {\n                procData.push(processors[i].getData());\n            }\n\n            return {\n                processors: procData\n            };\n        };\n\n    my = my || {};\n\n    that = Object(__WEBPACK_IMPORTED_MODULE_0__networkconnections__[\"a\" /* default */])(specs, my);\n\n    init();\n\n    that.createProcessor = createProcessor;\n    that.deleteProcessor = deleteProcessor;\n    that.selectProcessor = selectProcessor;\n    that.connectProcessors = connectProcessors;\n    that.disconnectProcessors = disconnectProcessors;\n    that.process = process;\n    // that.render = render;\n    that.clear = clear;\n    that.setData = setData;\n    that.getData = getData;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDINetworkConnections;\n/**\n * \n */\nfunction createMIDINetworkConnections(specs, my) {\n    var that,\n        app = specs.app,\n        canvasView = specs.canvasView,\n        isConnectModeEnabled = false,\n        \n        /**\n         * Enter or leave application connect mode.\n         * @param  {Boolean} isEnabled True to enable connect mode.\n         */\n        toggleConnections = function(isEnabled) {\n            isConnectModeEnabled = isEnabled;\n            canvasView.toggleConnectMode(isConnectModeEnabled);\n            app.appUpdated('connections', isConnectModeEnabled);\n        };\n    \n    my = my || {};\n    \n    that = specs.that || {};\n    \n    that.toggleConnections = toggleConnections;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvbWlkaS9uZXR3b3JrY29ubmVjdGlvbnMuanM/YmNjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVNSURJTmV0d29ya0Nvbm5lY3Rpb25zKHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBhcHAgPSBzcGVjcy5hcHAsXG4gICAgICAgIGNhbnZhc1ZpZXcgPSBzcGVjcy5jYW52YXNWaWV3LFxuICAgICAgICBpc0Nvbm5lY3RNb2RlRW5hYmxlZCA9IGZhbHNlLFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVudGVyIG9yIGxlYXZlIGFwcGxpY2F0aW9uIGNvbm5lY3QgbW9kZS5cbiAgICAgICAgICogQHBhcmFtICB7Qm9vbGVhbn0gaXNFbmFibGVkIFRydWUgdG8gZW5hYmxlIGNvbm5lY3QgbW9kZS5cbiAgICAgICAgICovXG4gICAgICAgIHRvZ2dsZUNvbm5lY3Rpb25zID0gZnVuY3Rpb24oaXNFbmFibGVkKSB7XG4gICAgICAgICAgICBpc0Nvbm5lY3RNb2RlRW5hYmxlZCA9IGlzRW5hYmxlZDtcbiAgICAgICAgICAgIGNhbnZhc1ZpZXcudG9nZ2xlQ29ubmVjdE1vZGUoaXNDb25uZWN0TW9kZUVuYWJsZWQpO1xuICAgICAgICAgICAgYXBwLmFwcFVwZGF0ZWQoJ2Nvbm5lY3Rpb25zJywgaXNDb25uZWN0TW9kZUVuYWJsZWQpO1xuICAgICAgICB9O1xuICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgXG4gICAgdGhhdCA9IHNwZWNzLnRoYXQgfHwge307XG4gICAgXG4gICAgdGhhdC50b2dnbGVDb25uZWN0aW9ucyA9IHRvZ2dsZUNvbm5lY3Rpb25zO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvbWlkaS9uZXR3b3JrY29ubmVjdGlvbnMuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./epg/processor\": 20,\n\t\"./example/processor\": 29,\n\t\"./output/processor\": 30\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycyBeXFwuXFwvLipcXC9wcm9jZXNzb3IkPzcyN2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9lcGcvcHJvY2Vzc29yXCI6IDIwLFxuXHRcIi4vZXhhbXBsZS9wcm9jZXNzb3JcIjogMjksXG5cdFwiLi9vdXRwdXQvcHJvY2Vzc29yXCI6IDMwXG59O1xuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpKTtcbn07XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdHZhciBpZCA9IG1hcFtyZXFdO1xuXHRpZighKGlkICsgMSkpIC8vIGNoZWNrIGZvciBudW1iZXIgb3Igc3RyaW5nXG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJy5cIik7XG5cdHJldHVybiBpZDtcbn07XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gMTk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvcHJvY2Vzc29ycyBeXFwuXFwvLipcXC9wcm9jZXNzb3IkXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"createProcessor\"] = createProcessor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__midi_processorbase__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_config__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__state_selectors__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__euclid__ = __webpack_require__(5);\n\n\n\n\n\nfunction createProcessor(specs, my) {\n    let that,\n        store = specs.store,\n        position = 0,\n        duration = 0,\n        noteDuration,\n        euclidPattern = [],\n        noteOffEvents = [],\n        pulsesOnly = [];\n\n    const initialize = function() {\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.CHANGE_PARAMETER:\n                        if (e.detail.action.processorID === my.id) {\n                            my.params = Object(__WEBPACK_IMPORTED_MODULE_2__state_selectors__[\"b\" /* getProcessorByID */])(my.id).params;\n                            switch (e.detail.action.paramKey) {\n                                case 'steps':\n                                    updatePulsesAndRotation();\n                                    updatePattern(true);\n                                    break;\n                                case 'pulses':\n                                    updatePattern(true);\n                                    break;\n                                case 'rotation':\n                                case 'is_triplets':\n                                case 'rate':\n                                case 'note_length':\n                                    updatePattern();\n                                    break;\n                                case 'is_mute':\n                                    break;\n                            }\n                        }\n                        break;\n                }\n                updatePattern(true);\n            });        \n        },\n\n        terminate = function() {},\n            \n        /**\n         * Process events to happen in a time slice.\n         * timeline start        now      scanStart     scanEnd\n         * |----------------------|-----------|------------|\n         *                        |-----------| \n         *                        nowToScanStart\n         * @param {Number} scanStart Timespan start in ticks from timeline start.\n         * @param {Number} scanEnd   Timespan end in ticks from timeline start.\n         * @param {Number} nowToScanStart Timespan from current timeline position to scanStart.\n         * @param {Number} ticksToMsMultiplier Duration of one tick in milliseconds.\n         * @param {Number} offset Time from doc start to timeline start in ticks.\n         * @param {Array} processorEvents Array to collect processor generated events to displayin the view.\n         */\n        process = function(scanStart, scanEnd, nowToScanStart, ticksToMsMultiplier, offset, processorEvents) {\n            \n            // if the processor is muted only process remaining note offs.\n            if (my.params.is_mute.value) {\n                processNoteOffs(scanStart, scanEnd);\n                return;\n            }\n            \n            // if the pattern loops during this timespan.\n            var localStart = scanStart % duration,\n                localEnd = scanEnd % duration,\n                localStart2 = false,\n                localEnd2;\n            if (localStart > localEnd) {\n                localStart2 = 0,\n                localEnd2 = localEnd;\n                localEnd = duration;\n            }\n            \n            // check if notes occur during the current timespan\n            var n = pulsesOnly.length;\n            for (var i = 0; i < n; i++) {\n                var pulseStartTime = pulsesOnly[i].startTime,\n                    scanStartToNoteStart = pulseStartTime - localStart,\n                    isOn = (localStart <= pulseStartTime) && (pulseStartTime < localEnd);\n                    \n                // if pattern looped back to the start\n                if (localStart2 !== false) {\n                    scanStartToNoteStart = pulseStartTime - localStart + duration;\n                    isOn = isOn || (localStart2 <= pulseStartTime) && (pulseStartTime < localEnd2);\n                } \n                \n                // if a note should play\n                if (isOn) {\n                    var channel = my.params.channel_out.value,\n                        pitch = my.params.pitch_out.value,\n                        velocity = my.params.velocity_out.value,\n                        pulseStartTimestamp = scanStart + scanStartToNoteStart;\n                    \n                    // send the Note On message\n                    my.setOutputData({\n                        timestampTicks: pulseStartTimestamp,\n                        channel: channel,\n                        type: 'noteon',\n                        pitch: pitch,\n                        velocity: velocity\n                    });\n                    \n                    // store the Note Off message to send later\n                    noteOffEvents.push({\n                        timestampTicks: pulseStartTimestamp + noteDuration,\n                        channel: channel,\n                        type: 'noteoff',\n                        pitch: pitch,\n                        velocity: 0\n                    });\n                    \n                    // update pattern graphic view\n                    // var stepIndex = pulsesOnly[i].stepIndex,\n                    //     delayFromNowToNoteStart = (nowToScanStart + scanStartToNoteStart) * ticksToMsMultiplier,\n                    //     delayFromNowToNoteEnd = (delayFromNowToNoteStart + noteDuration) * ticksToMsMultiplier;\n                    // processCallback(stepIndex, delayFromNowToNoteStart, delayFromNowToNoteEnd);\n                    \n                    if (!processorEvents[my.id]) {\n                        processorEvents[my.id] = [];\n                    }\n                    const delayFromNowToNoteStart = (nowToScanStart + scanStartToNoteStart) * ticksToMsMultiplier;\n                    processorEvents[my.id].push({\n                        stepIndex: pulsesOnly[i].stepIndex,\n                        delayFromNowToNoteStart: delayFromNowToNoteStart,\n                        delayFromNowToNoteEnd: (delayFromNowToNoteStart + noteDuration) * ticksToMsMultiplier\n                    });\n                }\n            }\n            \n            if (localStart2 !== false) {\n                localStart = localStart2;\n            }\n            \n            processNoteOffs(scanStart, scanEnd);\n        },\n            \n        /**\n         * Check for scheduled note off events.\n         * @param {Number} scanStart Timespan start in ticks from timeline start.\n         * @param {Number} scanEnd   Timespan end in ticks from timeline start.\n         */\n        processNoteOffs = function(scanStart, scanEnd) {\n            var i = noteOffEvents.length;\n            while (--i > -1) {\n                var noteOffTime = noteOffEvents[i].timestampTicks;\n                if (scanStart <= noteOffTime && scanEnd > noteOffTime) {\n                    my.setOutputData(noteOffEvents.splice(i, 1)[0]);\n                }\n            }\n        },\n\n        /**\n         * After a change of the steps parameter update the pulses and rotation parameters.\n         */\n        updatePulsesAndRotation = function() {\n            store.dispatch(store.getActions().recreateParameter(my.id, 'pulses', { max: my.params.steps.value }));\n            store.dispatch(store.getActions().recreateParameter(my.id, 'rotation', { max: my.params.steps.value - 1 }));\n            store.dispatch(store.getActions().changeParameter(my.id, 'pulses', my.params.pulses.value));\n            store.dispatch(store.getActions().changeParameter(my.id, 'rotation', my.params.rotation.value));\n        },\n            \n        /**\n         * Update all pattern properties.\n         * @param {Boolean} isEuclidChange Steps, pulses or rotation change.\n         */\n        updatePattern = function(isEuclidChange) {\n            // euclidean pattern properties, changes in steps, pulses, rotation\n            if (isEuclidChange) {\n                euclidPattern = Object(__WEBPACK_IMPORTED_MODULE_3__euclid__[\"a\" /* getEuclidPattern */])(my.params.steps.value, my.params.pulses.value);\n                euclidPattern = Object(__WEBPACK_IMPORTED_MODULE_3__euclid__[\"b\" /* rotateEuclidPattern */])(euclidPattern, my.params.rotation.value);\n            }\n            \n            // playback propertie)s, changes in isTriplets, rate, noteLength\n            var rate = my.params.is_triplets.value ? my.params.rate.value * (2 / 3) : my.params.rate.value,\n                stepDuration = rate * __WEBPACK_IMPORTED_MODULE_1__core_config__[\"a\" /* PPQN */];\n            noteDuration = my.params.note_length.value * __WEBPACK_IMPORTED_MODULE_1__core_config__[\"a\" /* PPQN */];\n            duration = my.params.steps.value * stepDuration;\n            position = position % duration;\n            \n            // create array of note start times in ticks\n            pulsesOnly.length = 0;\n            var n = euclidPattern.length;\n            for (var i = 0; i < n; i++) {\n                if (euclidPattern[i]) {\n                    pulsesOnly.push({\n                        startTime: i * stepDuration,\n                        stepIndex: i\n                    });\n                }\n            }\n        };\n\n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__midi_processorbase__[\"a\" /* default */])(specs, my);\n\n    initialize();\n\n    that.terminate = terminate;\n    that.process = process;\n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(1);\n\n\n/**\n * Parameter for Boolean values.\n */\nfunction createBooleanParameter(specs, my) {\n    var that,\n        \n        normalize = function(value) {\n            return value ? 1 : 0;\n        },\n        \n        deNormalize = function(normalizedValue) {\n            return normalizedValue > .5;\n        };\n    \n    my = my || {};\n    my.normalize = normalize;\n    my.deNormalize = deNormalize;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL2Jvb2xlYW4uanM/NTcwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUJhc2VQYXJhbWV0ZXIgZnJvbSAnLi9iYXNlJ1xuXG4vKipcbiAqIFBhcmFtZXRlciBmb3IgQm9vbGVhbiB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUJvb2xlYW5QYXJhbWV0ZXIoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIFxuICAgICAgICBub3JtYWxpemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gMSA6IDA7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBkZU5vcm1hbGl6ZSA9IGZ1bmN0aW9uKG5vcm1hbGl6ZWRWYWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRWYWx1ZSA+IC41O1xuICAgICAgICB9O1xuICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkubm9ybWFsaXplID0gbm9ybWFsaXplO1xuICAgIG15LmRlTm9ybWFsaXplID0gZGVOb3JtYWxpemU7XG4gICAgXG4gICAgdGhhdCA9IGNyZWF0ZUJhc2VQYXJhbWV0ZXIoc3BlY3MsIG15KTtcbiAgICBcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3BhcmFtZXRlci9ib29sZWFuLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createRemoteParameter;\n/**\n * Functionality for parameters that are controllable by external MIDI CC values.\n * Also includes functionality for MIDI learn mode.\n */\nfunction createRemoteParameter(specs, my) {\n    var that,\n        remoteStateChangeCallbacks = [],\n        \n        /**\n         * Set the remote state of the parameter.\n         * This calls the setting view associated with this parameter, so that\n         * it goes into learn mode or shows it's selected or assigned.\n         * @param {String} state Remote assignment state, for example 'selected' or 'assigned'\n         * @param {Function} callback Function to call when in learn mode (ugly, improve some day)\n         */\n        setRemoteState = function(state, callback) {\n            for (var i = 0, n = remoteStateChangeCallbacks.length; i < n; i++) {\n                remoteStateChangeCallbacks[i](state, callback);\n            }\n        },\n        \n        /**\n         * Add a callback function to update the remote overlay on the\n         * parameter's setting view, so that the setting view can go\n         * into learn mode, or show that it's selected or assigned.\n         * It also updates the remote view entries of assigned parameters.\n         * @param {Function} callback Callback function.\n         */\n        addRemoteStateCallback = function(callback) {\n            remoteStateChangeCallbacks.push(callback);\n        },\n\n        /**\n         * Removes a callback function.\n         * @param {Function} callback The function that will be removed.\n         */\n        removeRemoteStateCallback = function(callback) {\n            var index = remoteStateChangeCallbacks.indexOf(callback);\n            if (index > -1) {\n                remoteStateChangeCallbacks.splice(index, 1);\n            }\n        },\n        \n        setRemoteProperty = function(key, value) {\n            if (my.remoteProps.hasOwnProperty(key)) {\n                my.remoteProps[key] = value;\n            }\n        },\n        \n        getRemoteProperty = function(key) {\n            if (my.remoteProps.hasOwnProperty(key)) {\n                return my.remoteProps[key];\n            }\n        },\n        \n        getRemoteData = function() {\n            return my.remoteProps;\n        };\n    \n    my = my || {};\n    my.remoteProps = {\n        channel: null,\n        controller: null\n    };\n    \n    that = specs.that || {};\n    \n    that.setRemoteState = setRemoteState;\n    that.addRemoteStateCallback = addRemoteStateCallback;\n    that.removeRemoteStateCallback = removeRemoteStateCallback;\n    that.setRemoteProperty = setRemoteProperty;\n    that.getRemoteProperty = getRemoteProperty;\n    that.getRemoteData = getRemoteData;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL3JlbW90ZS5qcz9lMGI3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsU0FBUztBQUM1QjtBQUNBO0FBQ0Esa0VBQWtFLE9BQU87QUFDekU7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbmFsaXR5IGZvciBwYXJhbWV0ZXJzIHRoYXQgYXJlIGNvbnRyb2xsYWJsZSBieSBleHRlcm5hbCBNSURJIENDIHZhbHVlcy5cbiAqIEFsc28gaW5jbHVkZXMgZnVuY3Rpb25hbGl0eSBmb3IgTUlESSBsZWFybiBtb2RlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVSZW1vdGVQYXJhbWV0ZXIoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIHJlbW90ZVN0YXRlQ2hhbmdlQ2FsbGJhY2tzID0gW10sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHRoZSByZW1vdGUgc3RhdGUgb2YgdGhlIHBhcmFtZXRlci5cbiAgICAgICAgICogVGhpcyBjYWxscyB0aGUgc2V0dGluZyB2aWV3IGFzc29jaWF0ZWQgd2l0aCB0aGlzIHBhcmFtZXRlciwgc28gdGhhdFxuICAgICAgICAgKiBpdCBnb2VzIGludG8gbGVhcm4gbW9kZSBvciBzaG93cyBpdCdzIHNlbGVjdGVkIG9yIGFzc2lnbmVkLlxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gc3RhdGUgUmVtb3RlIGFzc2lnbm1lbnQgc3RhdGUsIGZvciBleGFtcGxlICdzZWxlY3RlZCcgb3IgJ2Fzc2lnbmVkJ1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBGdW5jdGlvbiB0byBjYWxsIHdoZW4gaW4gbGVhcm4gbW9kZSAodWdseSwgaW1wcm92ZSBzb21lIGRheSlcbiAgICAgICAgICovXG4gICAgICAgIHNldFJlbW90ZVN0YXRlID0gZnVuY3Rpb24oc3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHJlbW90ZVN0YXRlQ2hhbmdlQ2FsbGJhY2tzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgIHJlbW90ZVN0YXRlQ2hhbmdlQ2FsbGJhY2tzW2ldKHN0YXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIGEgY2FsbGJhY2sgZnVuY3Rpb24gdG8gdXBkYXRlIHRoZSByZW1vdGUgb3ZlcmxheSBvbiB0aGVcbiAgICAgICAgICogcGFyYW1ldGVyJ3Mgc2V0dGluZyB2aWV3LCBzbyB0aGF0IHRoZSBzZXR0aW5nIHZpZXcgY2FuIGdvXG4gICAgICAgICAqIGludG8gbGVhcm4gbW9kZSwgb3Igc2hvdyB0aGF0IGl0J3Mgc2VsZWN0ZWQgb3IgYXNzaWduZWQuXG4gICAgICAgICAqIEl0IGFsc28gdXBkYXRlcyB0aGUgcmVtb3RlIHZpZXcgZW50cmllcyBvZiBhc3NpZ25lZCBwYXJhbWV0ZXJzLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICAgICAgICovXG4gICAgICAgIGFkZFJlbW90ZVN0YXRlQ2FsbGJhY2sgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICAgICAgcmVtb3RlU3RhdGVDaGFuZ2VDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlbW92ZXMgYSBjYWxsYmFjayBmdW5jdGlvbi5cbiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSByZW1vdmVkLlxuICAgICAgICAgKi9cbiAgICAgICAgcmVtb3ZlUmVtb3RlU3RhdGVDYWxsYmFjayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSByZW1vdGVTdGF0ZUNoYW5nZUNhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgcmVtb3RlU3RhdGVDaGFuZ2VDYWxsYmFja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIHNldFJlbW90ZVByb3BlcnR5ID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKG15LnJlbW90ZVByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBteS5yZW1vdGVQcm9wc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBnZXRSZW1vdGVQcm9wZXJ0eSA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgaWYgKG15LnJlbW90ZVByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbXkucmVtb3RlUHJvcHNba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGdldFJlbW90ZURhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBteS5yZW1vdGVQcm9wcztcbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LnJlbW90ZVByb3BzID0ge1xuICAgICAgICBjaGFubmVsOiBudWxsLFxuICAgICAgICBjb250cm9sbGVyOiBudWxsXG4gICAgfTtcbiAgICBcbiAgICB0aGF0ID0gc3BlY3MudGhhdCB8fCB7fTtcbiAgICBcbiAgICB0aGF0LnNldFJlbW90ZVN0YXRlID0gc2V0UmVtb3RlU3RhdGU7XG4gICAgdGhhdC5hZGRSZW1vdGVTdGF0ZUNhbGxiYWNrID0gYWRkUmVtb3RlU3RhdGVDYWxsYmFjaztcbiAgICB0aGF0LnJlbW92ZVJlbW90ZVN0YXRlQ2FsbGJhY2sgPSByZW1vdmVSZW1vdGVTdGF0ZUNhbGxiYWNrO1xuICAgIHRoYXQuc2V0UmVtb3RlUHJvcGVydHkgPSBzZXRSZW1vdGVQcm9wZXJ0eTtcbiAgICB0aGF0LmdldFJlbW90ZVByb3BlcnR5ID0gZ2V0UmVtb3RlUHJvcGVydHk7XG4gICAgdGhhdC5nZXRSZW1vdGVEYXRhID0gZ2V0UmVtb3RlRGF0YTtcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3BhcmFtZXRlci9yZW1vdGUuanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(1);\n\n\n/**\n * Parameter for integer values between a minimum and maximum.\n */\nfunction createIntegerParameter(specs, my) {\n    var that,\n        changedMaxCallbacks = [],\n        \n        init = function() {\n            my.props.min = specs.min;\n            my.props.max = specs.max;\n        },\n        \n        /**\n         * Convert value to number between 0 and 1.\n         * @param  {Number} value Parameter's value.\n         * @return {Number} Normalised value between 0 and 1.\n         */\n        normalize = function(value) {\n            return (value - my.props.min) / (my.props.max - my.props.min);\n        },\n        \n        /**\n         * Get value from number between 0 and 1.\n         * @param  {Number} normalizedValue Normalised value between 0 and 1.\n         * @return {Number} Parameter's value.\n         */\n        deNormalize = function(normalizedValue) {\n            return Math.round(my.props.min + normalizedValue * (my.props.max - my.props.min));\n        },\n        \n        /**\n         * Set a new maximum value.\n         * This happens to EPG pulses and rotation when steps change.\n         * @param {Number} newMax The new Maximum value for this parameter.\n         */\n        setMax = function(newMax) {\n            my.props.max = newMax;\n            var n = changedMaxCallbacks.length;\n            for (var i = 0; i < n; i++) {\n                changedMaxCallbacks[i](my.props.max);\n            }\n        },\n    \n        /**\n         * Adds a max callback function.\n         * @param {Function} callback The function, that will be invoked on max value changed.\n         */\n        addChangedMaxCallback = function(callback) {\n            changedMaxCallbacks.push(callback);\n        },\n\n        /**\n         * Removes a max callback function.\n         * @param {Function} callback The function that will be removed.\n         */\n        removeChangedMaxCallback = function(callback) {\n            var index = changedMaxCallbacks.indexOf(callback);\n            if (index > -1) {\n                changedMaxCallbacks.splice(index, 1);\n            }\n        };\n    \n    my = my || {};\n    my.normalize = normalize;\n    my.deNormalize = deNormalize;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    that.setMax = setMax;\n    that.addChangedMaxCallback = addChangedMaxCallback;\n    that.removeChangedMaxCallback = removeChangedMaxCallback;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL2ludGVnZXIuanM/NjhjMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQixvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQixvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE9BQU87QUFDbEM7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUJhc2VQYXJhbWV0ZXIgZnJvbSAnLi9iYXNlJ1xuXG4vKipcbiAqIFBhcmFtZXRlciBmb3IgaW50ZWdlciB2YWx1ZXMgYmV0d2VlbiBhIG1pbmltdW0gYW5kIG1heGltdW0uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUludGVnZXJQYXJhbWV0ZXIoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIGNoYW5nZWRNYXhDYWxsYmFja3MgPSBbXSxcbiAgICAgICAgXG4gICAgICAgIGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG15LnByb3BzLm1pbiA9IHNwZWNzLm1pbjtcbiAgICAgICAgICAgIG15LnByb3BzLm1heCA9IHNwZWNzLm1heDtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDb252ZXJ0IHZhbHVlIHRvIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gdmFsdWUgUGFyYW1ldGVyJ3MgdmFsdWUuXG4gICAgICAgICAqIEByZXR1cm4ge051bWJlcn0gTm9ybWFsaXNlZCB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICAgICAqL1xuICAgICAgICBub3JtYWxpemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuICh2YWx1ZSAtIG15LnByb3BzLm1pbikgLyAobXkucHJvcHMubWF4IC0gbXkucHJvcHMubWluKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXQgdmFsdWUgZnJvbSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxLlxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IG5vcm1hbGl6ZWRWYWx1ZSBOb3JtYWxpc2VkIHZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSBQYXJhbWV0ZXIncyB2YWx1ZS5cbiAgICAgICAgICovXG4gICAgICAgIGRlTm9ybWFsaXplID0gZnVuY3Rpb24obm9ybWFsaXplZFZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChteS5wcm9wcy5taW4gKyBub3JtYWxpemVkVmFsdWUgKiAobXkucHJvcHMubWF4IC0gbXkucHJvcHMubWluKSk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IGEgbmV3IG1heGltdW0gdmFsdWUuXG4gICAgICAgICAqIFRoaXMgaGFwcGVucyB0byBFUEcgcHVsc2VzIGFuZCByb3RhdGlvbiB3aGVuIHN0ZXBzIGNoYW5nZS5cbiAgICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IG5ld01heCBUaGUgbmV3IE1heGltdW0gdmFsdWUgZm9yIHRoaXMgcGFyYW1ldGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgc2V0TWF4ID0gZnVuY3Rpb24obmV3TWF4KSB7XG4gICAgICAgICAgICBteS5wcm9wcy5tYXggPSBuZXdNYXg7XG4gICAgICAgICAgICB2YXIgbiA9IGNoYW5nZWRNYXhDYWxsYmFja3MubGVuZ3RoO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VkTWF4Q2FsbGJhY2tzW2ldKG15LnByb3BzLm1heCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBZGRzIGEgbWF4IGNhbGxiYWNrIGZ1bmN0aW9uLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24sIHRoYXQgd2lsbCBiZSBpbnZva2VkIG9uIG1heCB2YWx1ZSBjaGFuZ2VkLlxuICAgICAgICAgKi9cbiAgICAgICAgYWRkQ2hhbmdlZE1heENhbGxiYWNrID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGNoYW5nZWRNYXhDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlbW92ZXMgYSBtYXggY2FsbGJhY2sgZnVuY3Rpb24uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgcmVtb3ZlZC5cbiAgICAgICAgICovXG4gICAgICAgIHJlbW92ZUNoYW5nZWRNYXhDYWxsYmFjayA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBjaGFuZ2VkTWF4Q2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VkTWF4Q2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBteS5ub3JtYWxpemUgPSBub3JtYWxpemU7XG4gICAgbXkuZGVOb3JtYWxpemUgPSBkZU5vcm1hbGl6ZTtcbiAgICBcbiAgICB0aGF0ID0gY3JlYXRlQmFzZVBhcmFtZXRlcihzcGVjcywgbXkpO1xuICAgIFxuICAgIGluaXQoKTtcbiAgICBcbiAgICB0aGF0LnNldE1heCA9IHNldE1heDtcbiAgICB0aGF0LmFkZENoYW5nZWRNYXhDYWxsYmFjayA9IGFkZENoYW5nZWRNYXhDYWxsYmFjaztcbiAgICB0aGF0LnJlbW92ZUNoYW5nZWRNYXhDYWxsYmFjayA9IHJlbW92ZUNoYW5nZWRNYXhDYWxsYmFjaztcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3BhcmFtZXRlci9pbnRlZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(1);\n\n\n/**\n * Parameter for integer values between an minimum and maximum.\n */\nfunction createItemizedParameter(specs, my) {\n    var that,\n        \n        normalize = function(value) {\n            return (value - my.min) / (my.max - my.min);\n        },\n        \n        deNormalize = function(normalizedValue) {\n            if (normalizedValue == 1) {\n                return values[my.model[my.model.length - 1].value];\n            }\n            return my.model[Math.floor(normalizedValue * my.model.length)].value;\n        },\n        \n        getModel = function() {\n            return my.model;\n        };\n    \n    my = my || {};\n    my.model = specs.model;\n    my.normalize = normalize;\n    my.deNormalize = deNormalize;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    that.getModel = getModel;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL2l0ZW1pemVkLmpzPzUwZDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlQmFzZVBhcmFtZXRlciBmcm9tICcuL2Jhc2UnXG5cbi8qKlxuICogUGFyYW1ldGVyIGZvciBpbnRlZ2VyIHZhbHVlcyBiZXR3ZWVuIGFuIG1pbmltdW0gYW5kIG1heGltdW0uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUl0ZW1pemVkUGFyYW1ldGVyKHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBcbiAgICAgICAgbm9ybWFsaXplID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiAodmFsdWUgLSBteS5taW4pIC8gKG15Lm1heCAtIG15Lm1pbik7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBkZU5vcm1hbGl6ZSA9IGZ1bmN0aW9uKG5vcm1hbGl6ZWRWYWx1ZSkge1xuICAgICAgICAgICAgaWYgKG5vcm1hbGl6ZWRWYWx1ZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlc1tteS5tb2RlbFtteS5tb2RlbC5sZW5ndGggLSAxXS52YWx1ZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbXkubW9kZWxbTWF0aC5mbG9vcihub3JtYWxpemVkVmFsdWUgKiBteS5tb2RlbC5sZW5ndGgpXS52YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGdldE1vZGVsID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gbXkubW9kZWw7XG4gICAgICAgIH07XG4gICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBteS5tb2RlbCA9IHNwZWNzLm1vZGVsO1xuICAgIG15Lm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZTtcbiAgICBteS5kZU5vcm1hbGl6ZSA9IGRlTm9ybWFsaXplO1xuICAgIFxuICAgIHRoYXQgPSBjcmVhdGVCYXNlUGFyYW1ldGVyKHNwZWNzLCBteSk7XG4gICAgXG4gICAgdGhhdC5nZXRNb2RlbCA9IGdldE1vZGVsO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvcGFyYW1ldGVyL2l0ZW1pemVkLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(1);\n\n\n/**\n * Parameter for String values.\n */\nfunction createStringParameter(specs, my) {\n    var that,\n        \n        normalize = function(value) {\n            return value ? 1 : 0;\n        },\n        \n        deNormalize = function(normalizedValue) {\n            return value;\n        };\n    \n    my = my || {};\n    my.normalize = normalize;\n    my.deNormalize = deNormalize;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL3N0cmluZy5qcz85NGMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlQmFzZVBhcmFtZXRlciBmcm9tICcuL2Jhc2UnXG5cbi8qKlxuICogUGFyYW1ldGVyIGZvciBTdHJpbmcgdmFsdWVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdHJpbmdQYXJhbWV0ZXIoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIFxuICAgICAgICBub3JtYWxpemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gMSA6IDA7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBkZU5vcm1hbGl6ZSA9IGZ1bmN0aW9uKG5vcm1hbGl6ZWRWYWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9O1xuICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkubm9ybWFsaXplID0gbm9ybWFsaXplO1xuICAgIG15LmRlTm9ybWFsaXplID0gZGVOb3JtYWxpemU7XG4gICAgXG4gICAgdGhhdCA9IGNyZWF0ZUJhc2VQYXJhbWV0ZXIoc3BlY3MsIG15KTtcbiAgICBcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3BhcmFtZXRlci9zdHJpbmcuanNcbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(1);\n\n\n/**\n * Parameter for Boolean values.\n */\nfunction createVector2DParameter(specs, my) {\n    var that,\n        \n        normalize = function(value) {\n            return value ? 1 : 0;\n        },\n        \n        deNormalize = function(normalizedValue) {\n            return value;\n        };\n    \n    my = my || {};\n    my.normalize = normalize;\n    my.deNormalize = deNormalize;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcGFyYW1ldGVyL3ZlY3RvcjJkLmpzP2E1NjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVCYXNlUGFyYW1ldGVyIGZyb20gJy4vYmFzZSdcblxuLyoqXG4gKiBQYXJhbWV0ZXIgZm9yIEJvb2xlYW4gdmFsdWVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVWZWN0b3IyRFBhcmFtZXRlcihzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgXG4gICAgICAgIG5vcm1hbGl6ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPyAxIDogMDtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIGRlTm9ybWFsaXplID0gZnVuY3Rpb24obm9ybWFsaXplZFZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH07XG4gICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBteS5ub3JtYWxpemUgPSBub3JtYWxpemU7XG4gICAgbXkuZGVOb3JtYWxpemUgPSBkZU5vcm1hbGl6ZTtcbiAgICBcbiAgICB0aGF0ID0gY3JlYXRlQmFzZVBhcmFtZXRlcihzcGVjcywgbXkpO1xuICAgIFxuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvcGFyYW1ldGVyL3ZlY3RvcjJkLmpzXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIConnectorIn;\n/**\n * MIDI network processor in connector.\n */\nfunction createMIDIConnectorIn(specs, my) {\n    var that,\n        sources = [],\n        numSources = 0,\n        \n        /**\n         * Collects data from all processors this input is connected to.\n         * @return {Array} MIDI event data from all connected processors.\n         */\n        getInputData = function() {\n            var outputData = [], \n                data = [];\n            for (var i = 0; i < numSources; i++) {\n                data = sources[i].getOutputData();\n                outputData = outputData.concat(data);\n                data.length = 0;\n            }\n            return outputData;\n        },\n        \n        /**\n         * Connect a processor as source for this processor.\n         * @param  {Object} processor Network MIDI processor.\n         */\n        addConnection = function(processor) {\n            sources.push(processor);\n            numSources = sources.length;\n            console.log('Connect ' + processor.getType() + ' (id ' + processor.getID() + ') to ' + that.getType() + ' (id ' + that.getID() + ')');\n        },\n        \n        /**\n         * Remove a processor as source for this processor.\n         * @param  {Object} processor Network MIDI processor.\n         */\n        removeConnection = function(processor) {\n            var n = sources.length;\n            while (--n >= 0) {\n                if (processor === sources[n]) {\n                    sources.splice(n, 1);\n                    numSources = sources.length;\n                    console.log('Disconnect ' + processor.getType() + ' (id ' + processor.getID() + ') from ' + that.getType() + ' (id ' + that.getID() + ')');\n                    break;\n                }\n            }\n        },\n        \n        /**\n         * Get number of connections.\n         * Used by the output port module to determine if \n         * @return {Number} Number of connections to this output processor.\n         */\n        hasInputConnections = function() {\n            return numSources > 0;\n        };\n    \n    my = my || {};\n    my.getInputData = getInputData;\n\n    that = specs.that || {};\n    that.addConnection = addConnection;\n    that.removeConnection = removeConnection;\n    that.hasInputConnections = hasInputConnections;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvbWlkaS9jb25uZWN0b3Jpbi5qcz9mZDIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGdCQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNSURJIG5ldHdvcmsgcHJvY2Vzc29yIGluIGNvbm5lY3Rvci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlTUlESUNvbm5lY3RvckluKHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBzb3VyY2VzID0gW10sXG4gICAgICAgIG51bVNvdXJjZXMgPSAwLFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbGxlY3RzIGRhdGEgZnJvbSBhbGwgcHJvY2Vzc29ycyB0aGlzIGlucHV0IGlzIGNvbm5lY3RlZCB0by5cbiAgICAgICAgICogQHJldHVybiB7QXJyYXl9IE1JREkgZXZlbnQgZGF0YSBmcm9tIGFsbCBjb25uZWN0ZWQgcHJvY2Vzc29ycy5cbiAgICAgICAgICovXG4gICAgICAgIGdldElucHV0RGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIG91dHB1dERhdGEgPSBbXSwgXG4gICAgICAgICAgICAgICAgZGF0YSA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1Tb3VyY2VzOyBpKyspIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gc291cmNlc1tpXS5nZXRPdXRwdXREYXRhKCk7XG4gICAgICAgICAgICAgICAgb3V0cHV0RGF0YSA9IG91dHB1dERhdGEuY29uY2F0KGRhdGEpO1xuICAgICAgICAgICAgICAgIGRhdGEubGVuZ3RoID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvdXRwdXREYXRhO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbm5lY3QgYSBwcm9jZXNzb3IgYXMgc291cmNlIGZvciB0aGlzIHByb2Nlc3Nvci5cbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBwcm9jZXNzb3IgTmV0d29yayBNSURJIHByb2Nlc3Nvci5cbiAgICAgICAgICovXG4gICAgICAgIGFkZENvbm5lY3Rpb24gPSBmdW5jdGlvbihwcm9jZXNzb3IpIHtcbiAgICAgICAgICAgIHNvdXJjZXMucHVzaChwcm9jZXNzb3IpO1xuICAgICAgICAgICAgbnVtU291cmNlcyA9IHNvdXJjZXMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3QgJyArIHByb2Nlc3Nvci5nZXRUeXBlKCkgKyAnIChpZCAnICsgcHJvY2Vzc29yLmdldElEKCkgKyAnKSB0byAnICsgdGhhdC5nZXRUeXBlKCkgKyAnIChpZCAnICsgdGhhdC5nZXRJRCgpICsgJyknKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW1vdmUgYSBwcm9jZXNzb3IgYXMgc291cmNlIGZvciB0aGlzIHByb2Nlc3Nvci5cbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBwcm9jZXNzb3IgTmV0d29yayBNSURJIHByb2Nlc3Nvci5cbiAgICAgICAgICovXG4gICAgICAgIHJlbW92ZUNvbm5lY3Rpb24gPSBmdW5jdGlvbihwcm9jZXNzb3IpIHtcbiAgICAgICAgICAgIHZhciBuID0gc291cmNlcy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc29yID09PSBzb3VyY2VzW25dKSB7XG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZXMuc3BsaWNlKG4sIDEpO1xuICAgICAgICAgICAgICAgICAgICBudW1Tb3VyY2VzID0gc291cmNlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEaXNjb25uZWN0ICcgKyBwcm9jZXNzb3IuZ2V0VHlwZSgpICsgJyAoaWQgJyArIHByb2Nlc3Nvci5nZXRJRCgpICsgJykgZnJvbSAnICsgdGhhdC5nZXRUeXBlKCkgKyAnIChpZCAnICsgdGhhdC5nZXRJRCgpICsgJyknKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCBudW1iZXIgb2YgY29ubmVjdGlvbnMuXG4gICAgICAgICAqIFVzZWQgYnkgdGhlIG91dHB1dCBwb3J0IG1vZHVsZSB0byBkZXRlcm1pbmUgaWYgXG4gICAgICAgICAqIEByZXR1cm4ge051bWJlcn0gTnVtYmVyIG9mIGNvbm5lY3Rpb25zIHRvIHRoaXMgb3V0cHV0IHByb2Nlc3Nvci5cbiAgICAgICAgICovXG4gICAgICAgIGhhc0lucHV0Q29ubmVjdGlvbnMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBudW1Tb3VyY2VzID4gMDtcbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LmdldElucHV0RGF0YSA9IGdldElucHV0RGF0YTtcblxuICAgIHRoYXQgPSBzcGVjcy50aGF0IHx8IHt9O1xuICAgIHRoYXQuYWRkQ29ubmVjdGlvbiA9IGFkZENvbm5lY3Rpb247XG4gICAgdGhhdC5yZW1vdmVDb25uZWN0aW9uID0gcmVtb3ZlQ29ubmVjdGlvbjtcbiAgICB0aGF0Lmhhc0lucHV0Q29ubmVjdGlvbnMgPSBoYXNJbnB1dENvbm5lY3Rpb25zO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvbWlkaS9jb25uZWN0b3Jpbi5qc1xuLy8gbW9kdWxlIGlkID0gMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIConnectorOut;\n/**\n * MIDI network processor out connector.\n */\nfunction createMIDIConnectorOut(specs, my) {\n    var that,\n        outputData = [],\n        destinations = [],\n        \n        /**\n         * Set output data that is the result of this processor's processing.\n         * It will be collected by the processors attached to this output.\n         * @param {Object} eventData MIDI event data.\n         */\n        setOutputData = function(eventData) {\n            outputData.push(eventData);\n        },\n        \n        /**\n         * Public function for processors connected to this output to\n         * collect the data this processor's process function has produced.\n         * @return {Object} MIDI event data.\n         */\n        getOutputData = function() {\n            return outputData;\n        },\n        \n        /**\n         * Connect this processor's output to another processor's input.\n         * @param  {Object} processor Processor to connect to.\n         */\n        connect = function(processor) {\n            var isConnected = false,\n                n = destinations.length;\n            for (var i = 0; i < n; i++) {\n                if (processor === destinations[i]) {\n                    isConnected = true;\n                    break;\n                }\n            }\n            if (!isConnected) {\n                processor.addConnection(that);\n                destinations.push(processor);\n            }\n        },\n        \n        /**\n         * Disconnect this processor's output from another processor's input.\n         * @param  {Object} processor Processor to disconnect from, or undefined to remove all.\n         */\n        disconnect = function(processor) {\n            var n = destinations.length;\n            while (--n >= 0) {\n                if (!processor || (processor && processor === destinations[n])) {\n                    destinations[n].removeConnection(that);\n                    destinations.splice(n, 1);\n                }\n            }\n        },\n        \n        /**\n         * Get destination processors.\n         * Used to draw the connection cables on canvas.\n         * @return {Array} Processors this output connects to.\n         */\n        getDestinations = function() {\n            return destinations;\n        },\n        \n        /**\n         * The destinations are the processors this output is connected to.\n         * This function collects the ID's of these processors and adds them\n         * to a data object that can be stored.\n         * So this project and its processor connections can be restored.\n         * @param  {Object} data Project data object.\n         */\n        getDestinationsData = function(data) {\n            data.destinations = [];\n            var n = destinations.length;\n            for (var i = 0; i < n; i++) {\n                data.destinations.push(destinations[i].getID());\n            }\n        };\n    \n    my = my || {};\n    my.setOutputData = setOutputData;\n    my.getDestinationsData = getDestinationsData;\n\n    that = specs.that || {};\n    \n    that.getDestinations = getDestinations;\n    that.getOutputData = getOutputData;\n    that.connect = connect;\n    that.disconnect = disconnect;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvbWlkaS9jb25uZWN0b3JvdXQuanM/ZTZlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsT0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE9BQU87QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1JREkgbmV0d29yayBwcm9jZXNzb3Igb3V0IGNvbm5lY3Rvci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlTUlESUNvbm5lY3Rvck91dChzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgb3V0cHV0RGF0YSA9IFtdLFxuICAgICAgICBkZXN0aW5hdGlvbnMgPSBbXSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgb3V0cHV0IGRhdGEgdGhhdCBpcyB0aGUgcmVzdWx0IG9mIHRoaXMgcHJvY2Vzc29yJ3MgcHJvY2Vzc2luZy5cbiAgICAgICAgICogSXQgd2lsbCBiZSBjb2xsZWN0ZWQgYnkgdGhlIHByb2Nlc3NvcnMgYXR0YWNoZWQgdG8gdGhpcyBvdXRwdXQuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudERhdGEgTUlESSBldmVudCBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgc2V0T3V0cHV0RGF0YSA9IGZ1bmN0aW9uKGV2ZW50RGF0YSkge1xuICAgICAgICAgICAgb3V0cHV0RGF0YS5wdXNoKGV2ZW50RGF0YSk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogUHVibGljIGZ1bmN0aW9uIGZvciBwcm9jZXNzb3JzIGNvbm5lY3RlZCB0byB0aGlzIG91dHB1dCB0b1xuICAgICAgICAgKiBjb2xsZWN0IHRoZSBkYXRhIHRoaXMgcHJvY2Vzc29yJ3MgcHJvY2VzcyBmdW5jdGlvbiBoYXMgcHJvZHVjZWQuXG4gICAgICAgICAqIEByZXR1cm4ge09iamVjdH0gTUlESSBldmVudCBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0T3V0cHV0RGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG91dHB1dERhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQ29ubmVjdCB0aGlzIHByb2Nlc3NvcidzIG91dHB1dCB0byBhbm90aGVyIHByb2Nlc3NvcidzIGlucHV0LlxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IHByb2Nlc3NvciBQcm9jZXNzb3IgdG8gY29ubmVjdCB0by5cbiAgICAgICAgICovXG4gICAgICAgIGNvbm5lY3QgPSBmdW5jdGlvbihwcm9jZXNzb3IpIHtcbiAgICAgICAgICAgIHZhciBpc0Nvbm5lY3RlZCA9IGZhbHNlLFxuICAgICAgICAgICAgICAgIG4gPSBkZXN0aW5hdGlvbnMubGVuZ3RoO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc29yID09PSBkZXN0aW5hdGlvbnNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgcHJvY2Vzc29yLmFkZENvbm5lY3Rpb24odGhhdCk7XG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb25zLnB1c2gocHJvY2Vzc29yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEaXNjb25uZWN0IHRoaXMgcHJvY2Vzc29yJ3Mgb3V0cHV0IGZyb20gYW5vdGhlciBwcm9jZXNzb3IncyBpbnB1dC5cbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBwcm9jZXNzb3IgUHJvY2Vzc29yIHRvIGRpc2Nvbm5lY3QgZnJvbSwgb3IgdW5kZWZpbmVkIHRvIHJlbW92ZSBhbGwuXG4gICAgICAgICAqL1xuICAgICAgICBkaXNjb25uZWN0ID0gZnVuY3Rpb24ocHJvY2Vzc29yKSB7XG4gICAgICAgICAgICB2YXIgbiA9IGRlc3RpbmF0aW9ucy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NvciB8fCAocHJvY2Vzc29yICYmIHByb2Nlc3NvciA9PT0gZGVzdGluYXRpb25zW25dKSkge1xuICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbnNbbl0ucmVtb3ZlQ29ubmVjdGlvbih0aGF0KTtcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25zLnNwbGljZShuLCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IGRlc3RpbmF0aW9uIHByb2Nlc3NvcnMuXG4gICAgICAgICAqIFVzZWQgdG8gZHJhdyB0aGUgY29ubmVjdGlvbiBjYWJsZXMgb24gY2FudmFzLlxuICAgICAgICAgKiBAcmV0dXJuIHtBcnJheX0gUHJvY2Vzc29ycyB0aGlzIG91dHB1dCBjb25uZWN0cyB0by5cbiAgICAgICAgICovXG4gICAgICAgIGdldERlc3RpbmF0aW9ucyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGRlc3RpbmF0aW9ucztcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgZGVzdGluYXRpb25zIGFyZSB0aGUgcHJvY2Vzc29ycyB0aGlzIG91dHB1dCBpcyBjb25uZWN0ZWQgdG8uXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gY29sbGVjdHMgdGhlIElEJ3Mgb2YgdGhlc2UgcHJvY2Vzc29ycyBhbmQgYWRkcyB0aGVtXG4gICAgICAgICAqIHRvIGEgZGF0YSBvYmplY3QgdGhhdCBjYW4gYmUgc3RvcmVkLlxuICAgICAgICAgKiBTbyB0aGlzIHByb2plY3QgYW5kIGl0cyBwcm9jZXNzb3IgY29ubmVjdGlvbnMgY2FuIGJlIHJlc3RvcmVkLlxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGRhdGEgUHJvamVjdCBkYXRhIG9iamVjdC5cbiAgICAgICAgICovXG4gICAgICAgIGdldERlc3RpbmF0aW9uc0RhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBkYXRhLmRlc3RpbmF0aW9ucyA9IFtdO1xuICAgICAgICAgICAgdmFyIG4gPSBkZXN0aW5hdGlvbnMubGVuZ3RoO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBkYXRhLmRlc3RpbmF0aW9ucy5wdXNoKGRlc3RpbmF0aW9uc1tpXS5nZXRJRCgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LnNldE91dHB1dERhdGEgPSBzZXRPdXRwdXREYXRhO1xuICAgIG15LmdldERlc3RpbmF0aW9uc0RhdGEgPSBnZXREZXN0aW5hdGlvbnNEYXRhO1xuXG4gICAgdGhhdCA9IHNwZWNzLnRoYXQgfHwge307XG4gICAgXG4gICAgdGhhdC5nZXREZXN0aW5hdGlvbnMgPSBnZXREZXN0aW5hdGlvbnM7XG4gICAgdGhhdC5nZXRPdXRwdXREYXRhID0gZ2V0T3V0cHV0RGF0YTtcbiAgICB0aGF0LmNvbm5lY3QgPSBjb25uZWN0O1xuICAgIHRoYXQuZGlzY29ubmVjdCA9IGRpc2Nvbm5lY3Q7XG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC9taWRpL2Nvbm5lY3Rvcm91dC5qc1xuLy8gbW9kdWxlIGlkID0gMjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"createMIDIProcessor\"] = createMIDIProcessor;\nfunction createMIDIProcessor(specs) {\n    let that;\n\n    const initialize = function() {\n            console.log(midiProcessors);\n        },\n\n        terminate = function() {},\n\n        process = function(scanStart, scanEnd, nowToScanStart, ticksToMsMultiplier, offset) {},\n\n    that = createMIDIProcessorBase(specs, my);\n\n    initialize();\n\n    that.terminate = terminate;\n    that.process = process;\n    that.render = render;\n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9leGFtcGxlL3Byb2Nlc3Nvci5qcz82ZWNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVCxpQ0FBaUM7O0FBRWpDLDhGQUE4Rjs7QUFFOUY7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNSURJUHJvY2Vzc29yKHNwZWNzKSB7XG4gICAgbGV0IHRoYXQ7XG5cbiAgICBjb25zdCBpbml0aWFsaXplID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtaWRpUHJvY2Vzc29ycyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdGVybWluYXRlID0gZnVuY3Rpb24oKSB7fSxcblxuICAgICAgICBwcm9jZXNzID0gZnVuY3Rpb24oc2NhblN0YXJ0LCBzY2FuRW5kLCBub3dUb1NjYW5TdGFydCwgdGlja3NUb01zTXVsdGlwbGllciwgb2Zmc2V0KSB7fSxcblxuICAgIHRoYXQgPSBjcmVhdGVNSURJUHJvY2Vzc29yQmFzZShzcGVjcywgbXkpO1xuXG4gICAgaW5pdGlhbGl6ZSgpO1xuXG4gICAgdGhhdC50ZXJtaW5hdGUgPSB0ZXJtaW5hdGU7XG4gICAgdGhhdC5wcm9jZXNzID0gcHJvY2VzcztcbiAgICB0aGF0LnJlbmRlciA9IHJlbmRlcjtcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC9wcm9jZXNzb3JzL2V4YW1wbGUvcHJvY2Vzc29yLmpzXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"createProcessor\"] = createProcessor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__midi_processorbase__ = __webpack_require__(3);\n\n\n/**\n * MIDI output port processor.\n */\nfunction createProcessor(specs, my) {\n    var that,\n        portID = specs.portID,\n\n        /**\n         * Process events to happen in a time slice.\n         * @param {Number} scanStart Timespan start in ticks from timeline start.\n         * @param {Number} scanEnd   Timespan end in ticks from timeline start.\n         * @param {Number} nowToScanStart Timespan from current timeline position to scanStart.\n         * @param {Number} ticksToMsMultiplier Duration of one tick in milliseconds.\n         * @param {Number} offset Time from doc start to timeline start in ticks.\n         */\n        process = function(scanStart, scanEnd, nowToScanStart, ticksToMsMultiplier, offset) {\n            var inputData = my.getInputData(),\n                origin = performance.now() - (offset * ticksToMsMultiplier),\n                n = inputData.length;\n\n            if (midiOutput.state === 'connected') {\n                for (var i = 0; i < n; i++) {\n                    var item = inputData[i],\n                        // item.timestampTicks is time since transport play started\n                        timestamp = origin + (item.timestampTicks * ticksToMsMultiplier);\n                        \n                    switch (item.type) {\n                        case 'noteon':\n                            midiOutput.send([0x90 + (item.channel - 1), item.pitch, item.velocity], timestamp);\n                            break;\n                        case 'noteoff':\n                            midiOutput.send([0x80 + (item.channel - 1), item.pitch, 0], timestamp);\n                            break;\n                    }\n                }\n            }\n        },\n        \n        setEnabled = function(isEnabled) {\n            my.isEnabled = isEnabled;\n        },\n\n        getMIDIPortID = function() {\n            return portID;\n        };\n\n        // getProcessorSpecificData = function(data) {\n        //     data.midiPortID = midiOutput.id;\n        // };\n\n\n    my = my || {};\n    // my.info = {\n    //     inputs: 1,\n    //     outputs: 0\n    // };\n    my.isEnabled = true;\n    // my.getProcessorSpecificData = getProcessorSpecificData;\n    // my.$position2d = function(value, timestamp) {}\n\n    that = Object(__WEBPACK_IMPORTED_MODULE_0__midi_processorbase__[\"a\" /* default */])(specs, my);\n    \n    // my.defineParams({\n    //     position2d: {\n    //         label: '2D position',\n    //         type: 'vector2d',\n    //         default: {x: 0, y: 0},\n    //         isMidiControllable: false\n    //     }\n    // });\n\n    that.process = process;\n    that.setEnabled = setEnabled;\n    that.getMIDIPortID = getMIDIPortID;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9vdXRwdXQvcHJvY2Vzc29yLmpzP2QxNWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCLE9BQU87QUFDdEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFdBQVc7QUFDcEM7QUFDQTtBQUNBLFFBQVE7O0FBRVI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVNSURJUHJvY2Vzc29yQmFzZSBmcm9tICcuLi8uLi9taWRpL3Byb2Nlc3NvcmJhc2UnO1xuXG4vKipcbiAqIE1JREkgb3V0cHV0IHBvcnQgcHJvY2Vzc29yLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvY2Vzc29yKHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBwb3J0SUQgPSBzcGVjcy5wb3J0SUQsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFByb2Nlc3MgZXZlbnRzIHRvIGhhcHBlbiBpbiBhIHRpbWUgc2xpY2UuXG4gICAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSBzY2FuU3RhcnQgVGltZXNwYW4gc3RhcnQgaW4gdGlja3MgZnJvbSB0aW1lbGluZSBzdGFydC5cbiAgICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IHNjYW5FbmQgICBUaW1lc3BhbiBlbmQgaW4gdGlja3MgZnJvbSB0aW1lbGluZSBzdGFydC5cbiAgICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IG5vd1RvU2NhblN0YXJ0IFRpbWVzcGFuIGZyb20gY3VycmVudCB0aW1lbGluZSBwb3NpdGlvbiB0byBzY2FuU3RhcnQuXG4gICAgICAgICAqIEBwYXJhbSB7TnVtYmVyfSB0aWNrc1RvTXNNdWx0aXBsaWVyIER1cmF0aW9uIG9mIG9uZSB0aWNrIGluIG1pbGxpc2Vjb25kcy5cbiAgICAgICAgICogQHBhcmFtIHtOdW1iZXJ9IG9mZnNldCBUaW1lIGZyb20gZG9jIHN0YXJ0IHRvIHRpbWVsaW5lIHN0YXJ0IGluIHRpY2tzLlxuICAgICAgICAgKi9cbiAgICAgICAgcHJvY2VzcyA9IGZ1bmN0aW9uKHNjYW5TdGFydCwgc2NhbkVuZCwgbm93VG9TY2FuU3RhcnQsIHRpY2tzVG9Nc011bHRpcGxpZXIsIG9mZnNldCkge1xuICAgICAgICAgICAgdmFyIGlucHV0RGF0YSA9IG15LmdldElucHV0RGF0YSgpLFxuICAgICAgICAgICAgICAgIG9yaWdpbiA9IHBlcmZvcm1hbmNlLm5vdygpIC0gKG9mZnNldCAqIHRpY2tzVG9Nc011bHRpcGxpZXIpLFxuICAgICAgICAgICAgICAgIG4gPSBpbnB1dERhdGEubGVuZ3RoO1xuXG4gICAgICAgICAgICBpZiAobWlkaU91dHB1dC5zdGF0ZSA9PT0gJ2Nvbm5lY3RlZCcpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IGlucHV0RGF0YVtpXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0ZW0udGltZXN0YW1wVGlja3MgaXMgdGltZSBzaW5jZSB0cmFuc3BvcnQgcGxheSBzdGFydGVkXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAgPSBvcmlnaW4gKyAoaXRlbS50aW1lc3RhbXBUaWNrcyAqIHRpY2tzVG9Nc011bHRpcGxpZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoaXRlbS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdub3Rlb24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pZGlPdXRwdXQuc2VuZChbMHg5MCArIChpdGVtLmNoYW5uZWwgLSAxKSwgaXRlbS5waXRjaCwgaXRlbS52ZWxvY2l0eV0sIHRpbWVzdGFtcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdub3Rlb2ZmJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaWRpT3V0cHV0LnNlbmQoWzB4ODAgKyAoaXRlbS5jaGFubmVsIC0gMSksIGl0ZW0ucGl0Y2gsIDBdLCB0aW1lc3RhbXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgc2V0RW5hYmxlZCA9IGZ1bmN0aW9uKGlzRW5hYmxlZCkge1xuICAgICAgICAgICAgbXkuaXNFbmFibGVkID0gaXNFbmFibGVkO1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldE1JRElQb3J0SUQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBwb3J0SUQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gZ2V0UHJvY2Vzc29yU3BlY2lmaWNEYXRhID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAvLyAgICAgZGF0YS5taWRpUG9ydElEID0gbWlkaU91dHB1dC5pZDtcbiAgICAgICAgLy8gfTtcblxuXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICAvLyBteS5pbmZvID0ge1xuICAgIC8vICAgICBpbnB1dHM6IDEsXG4gICAgLy8gICAgIG91dHB1dHM6IDBcbiAgICAvLyB9O1xuICAgIG15LmlzRW5hYmxlZCA9IHRydWU7XG4gICAgLy8gbXkuZ2V0UHJvY2Vzc29yU3BlY2lmaWNEYXRhID0gZ2V0UHJvY2Vzc29yU3BlY2lmaWNEYXRhO1xuICAgIC8vIG15LiRwb3NpdGlvbjJkID0gZnVuY3Rpb24odmFsdWUsIHRpbWVzdGFtcCkge31cblxuICAgIHRoYXQgPSBjcmVhdGVNSURJUHJvY2Vzc29yQmFzZShzcGVjcywgbXkpO1xuICAgIFxuICAgIC8vIG15LmRlZmluZVBhcmFtcyh7XG4gICAgLy8gICAgIHBvc2l0aW9uMmQ6IHtcbiAgICAvLyAgICAgICAgIGxhYmVsOiAnMkQgcG9zaXRpb24nLFxuICAgIC8vICAgICAgICAgdHlwZTogJ3ZlY3RvcjJkJyxcbiAgICAvLyAgICAgICAgIGRlZmF1bHQ6IHt4OiAwLCB5OiAwfSxcbiAgICAvLyAgICAgICAgIGlzTWlkaUNvbnRyb2xsYWJsZTogZmFsc2VcbiAgICAvLyAgICAgfVxuICAgIC8vIH0pO1xuXG4gICAgdGhhdC5wcm9jZXNzID0gcHJvY2VzcztcbiAgICB0aGF0LnNldEVuYWJsZWQgPSBzZXRFbmFibGVkO1xuICAgIHRoYXQuZ2V0TUlESVBvcnRJRCA9IGdldE1JRElQb3J0SUQ7XG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC9wcm9jZXNzb3JzL291dHB1dC9wcm9jZXNzb3IuanNcbi8vIG1vZHVsZSBpZCA9IDMwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIRemote;\n/**\n * MIDIRemote assigns MIDI Continuous Controllers to processor parameters.\n *\n * If a CC is assigned and that CC was already assigned, the old assignment is removed.\n * If a parameter is assigned and it is then reassigned to a different CC, the old assignment is removed.\n */\nfunction createMIDIRemote(specs) {\n    var that,\n        app = specs.app,\n        remoteView = specs.remoteView,\n        midiInputs = [],\n        assignments = [],\n        paramLookup = {},\n        selectedParameter,\n        isInLearnMode = false,\n        processors = [],\n        midiMessageListener,\n\n        init = function() {\n            midiMessageListener = onMIDIMessage;\n        },\n\n        /**\n         * Add a MIDI Input port only if it doesn't yet exist.\n         * The port is the module created in midi.port.input.js,\n         * not a Web MIDI API MIDIInput.\n         * @param {Object} midiInputPort MIDI input port module.\n         */\n        addMidiInput = function(midiInputPort) {\n            var midiInputPortID = midiInputPort.getID(),\n                existingMidiInputPort = getMIDIInputByID(midiInputPortID);\n\n            if (!existingMidiInputPort) {\n                // store reference to midiInputPort module\n                midiInputs.push(midiInputPort);\n            }\n            \n            // subscribe to receive messages from this MIDI input\n            midiInputPort.addMIDIMessageListener(midiMessageListener);\n        },\n\n        /**\n         * Remove a MIDI input port from being a remote source.\n         * @param {Object} midiInputPort MIDI input port object.\n         */\n        removeMidiInput = function(midiInputPort) {\n            // unsubscribe from receiving messages from this MIDI input\n            midiInputPort.removeMIDIMessageListener(midiMessageListener);\n        },\n        \n        /**\n         * Find midiInputPort from list of added inputs by ID.\n         * @param {String} midiInputPortID [description]\n         * @return {Object|undefined} MidiInputPort object or undefined if not found.\n         */\n        getMIDIInputByID = function(midiInputPortID) {\n            for (var i = 0, n = midiInputs.length; i < n; i++) {\n                if (midiInputs[i].getID() === midiInputPortID) {\n                    return midiInputs[i];\n                }\n            }\n        },\n\n        /**\n         * Eventlistener for incoming MIDI messages.\n         * @see https://www.w3.org/TR/webmidi/#idl-def-MIDIMessageEvent\n         * @param  {Object} e MIDIMessageEvent event.\n         */\n        onMIDIMessage = function(e) {\n            // only continuous controller message, 0xB == 11\n            if (e.data[0] >> 4 === 0xB) {\n                var channel = (e.data[0] & 0xf) + 1,\n                    params = paramLookup[channel + '_' + e.data[1]];\n                if (params) {\n                    for (let i = 0, n = params.length; i < n; i++) {\n                        params[i].setValueNormalized(e.data[2] / 127);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Listener for MIDI events in case the app is in MIDI learn mode.\n         * @see https://www.w3.org/TR/webmidi/#idl-def-MIDIMessageEvent\n         * @param  {Object} e MIDIMessageEvent event.\n         */\n        onMIDILearnMessage = function(e) {\n            if (selectedParameter) {\n                if (e.data[0] >> 4 === 0xB) {\n                    var channel = (e.data[0] & 0xf) + 1,\n                        controller = e.data[1];\n                    assignParameter(selectedParameter, channel, controller);\n                    deselectParameter();\n                }\n            }\n        },\n\n        /**\n         * Toggle MIDI learn mode, so incoming MIDI messages are used to\n         * assign a selected parameter to the incoming message type.\n         * @param {Boolean} isEnabled True to enable MIDI learn mode.\n         */\n        toggleMidiLearn = function(isEnabled) {\n            isInLearnMode = isEnabled;\n            deselectParameter();\n            app.appUpdated('remote', isInLearnMode);\n\n            // set learn mode on all parameters\n            for (var i = 0; i < processors.length; i++) {\n                setProcessorLearnMode(processors[i]);\n            }\n\n            // midi listener switches with learn mode\n            var oldMidimessageListener;\n            if (isInLearnMode) {\n                oldMidimessageListener = onMIDIMessage;\n                midiMessageListener = onMIDILearnMessage;\n            } else {\n                oldMidimessageListener = onMIDILearnMessage;\n                midiMessageListener = onMIDIMessage;\n            }\n\n            // set listener on all midi ports\n            let midiInput;\n            for (var i = 0, n = midiInputs.length; i < n; i++) {\n                midiInput = midiInputs[i];\n                if (midiInput.getConnected()) {\n                    midiInput.removeMIDIMessageListener(oldMidimessageListener);\n                    midiInput.addMIDIMessageListener(midiMessageListener);\n                }\n            }\n        },\n        \n        /**\n         * Set remote state of a processor's remote capable parameters.\n         * @param {Object} processor Processor to enter or exit learn mode.\n         */\n        setProcessorLearnMode = function(processor) {\n            var remoteState = isInLearnMode ? 'enter' : 'exit';\n            for (var i = 0; i < processor.params.length; i++) {\n                processor.params[i].setRemoteState(remoteState, selectParameter);\n            }\n        },\n\n        /**\n         * Set a parameter as selected to be assigned.\n         * @param {Object} param Processor parameter.\n         */\n        selectParameter = function(param) {\n            if (selectedParameter) {\n                deselectParameter();\n            }\n            selectedParameter = param;\n            selectedParameter.setRemoteState('selected');\n        },\n\n        /**\n         * Unselect the selected parameter so it can't be assigned anymore.\n         */\n        deselectParameter = function() {\n            if (selectedParameter) {\n                selectedParameter.setRemoteState('deselected');\n                selectedParameter = null;\n            }\n        },\n\n        /**\n         * Assign a MIDI controller to a parameter.\n         * @param  {Object} param Processor parameter to be assigned a MIDI control.\n         * @param  {Number} channel MIDI channel.\n         * @param  {Number} controller MIDI CC number.\n         */\n        assignParameter = function(param, channel, controller) {\n            // find if this parameter is already assigned\n            let n = assignments.length;\n            while (--n >= 0) {\n                var a = assignments[n];\n                if (a.param == param) {\n                    if (a.channel == channel && a.controller == controller) {\n                        // the parameter is assigned to this channel / cc,\n                        // don't assign it again\n                        return;\n                    } else {\n                        // the parameter is assigned to another channel / cc,\n                        // first remove that assignment\n                        unassingParameter(param);\n                    }\n                }\n            }\n            \n            // add the assignment to the model\n            assignments.push({\n                param: param,\n                channel: channel,\n                controller: controller\n            });\n            \n            // create lookup for this MIDI controller\n            if (!paramLookup[channel + '_' + controller]) {\n                paramLookup[channel + '_' + controller] = [];\n            }\n            // add parameter to the lookup table\n            paramLookup[channel + '_' + controller].push(param);\n\n            // update the parameter\n            param.setRemoteProperty('channel', channel);\n            param.setRemoteProperty('controller', controller);\n            param.setRemoteState('assigned');\n\n            // add parameter to the view\n            remoteView.addParameter(param);\n        },\n\n        /**\n         * Unassign a parameter from being MIDI controlled.\n         * @param  {Object} param Processor parameter to be unassigned.\n         */\n        unassingParameter = function(param) {\n            var portId = param.getRemoteProperty('portId'),\n                channel = param.getRemoteProperty('channel'),\n                controller = param.getRemoteProperty('controller'),\n                midiInput = getMIDIInputByID(portId);\n                \n            // remove the assignment from the model\n            var n = assignments.length;\n            while (--n >= 0) {\n                var a = assignments[n];\n                if (a.param == param && a.channel == channel && a.controller == controller) {\n                    assignments.splice(n, 1);\n                    break;\n                }\n            }\n            \n            // remove parameter from the lookup table;\n            var params = paramLookup[channel + '_' + controller];\n            if (params) {\n                if (params.length == 1) {\n                    // remove whole array if this is the only parameter\n                    delete paramLookup[channel + '_ ' + controller];\n                } else {\n                    // remove parameter from array\n                    var n = params.length;\n                    while (--n >= 0) {\n                        if (params[n] == param) {\n                            params.splice(n, 1);\n                        } \n                    }\n                }\n            }\n\n            // update the parameter\n            param.setRemoteProperty('channel', null);\n            param.setRemoteProperty('controller', null);\n            param.setRemoteState('unassigned');\n\n            // remove parameter from the view\n            remoteView.removeParameter(param);\n        },\n        \n        /**\n         * Register a processor of which parameters might be remote controlled.\n         * @param {Object} processor Network processor.\n         */\n        registerProcessor = function(processor) {\n            var params = processor.getParameters(),\n                controllableParams = [],\n                processorObject = {};\n\n            // create array of all controllable parameters of the processor\n            for (var key in params) {\n                if (params.hasOwnProperty(key)) {\n                    if (params[key].getProperty('isMidiControllable') === true) {\n                        controllableParams.push(params[key]);\n                    }\n                }\n            }\n\n            if (controllableParams.length) {\n                // add data to processors list\n                processorObject.processor = processor;\n                processorObject.params = controllableParams;\n                processors.push(processorObject);\n                // update view\n                remoteView.createRemoteGroup(processor);\n            }\n            \n            // set processor's parameters in learn mode, if necessary\n            if (isInLearnMode) {\n                setProcessorLearnMode(processorObject);\n            }\n        },\n        \n        /**\n         * Unregister a processor of which parameters might be remote controlled.\n         * @param {Object} processor Network processor.\n         */\n        unregisterProcessor = function(processor) {\n            var n = processors.length;\n            while (--n >= 0) {\n                if (processors[n].processor === processor) {\n                    // remove data from processors list\n                    processors.splice(n, 1);\n                    // update view\n                    remoteView.deleteRemoteGroup(processor);\n                }\n            }\n        },\n\n        /**\n         * Clear all assignments.\n         * Unassign all parameters.\n         * Unregister all processors.\n         */\n        clear = function() {\n            // unassign all parameters\n            for (let key in paramLookup) {\n                if (paramLookup.hasOwnProperty(key)) {\n                    paramLookup[key].forEach(function(param) {\n                        unassingParameter(param);\n                    });\n                }\n            }\n            paramLookup = {};\n            \n            // unregister all processors\n            processors.forEach(function(processor) {\n                unregisterProcessor(processor);\n            });\n        },\n\n        /**\n         * Restore assigned parameters from data object.\n         * @param {Object} data  data object.\n         */\n        setData = function(data = []) {\n            // clear all old data\n            clear();\n            \n            // set new data\n            let item;\n            for (let i = 0, n = data.length; i < n; i++) {\n                item = data[i];\n                // find processor\n                let processorID = item.processorID;\n                let n = processors.length;\n                while (--n >= 0) {\n                    if (processors[n].processor.getID() == processorID) {\n                        // processor found, find parameter\n                        let params = processors[n].params,\n                            m = params.length;\n                        while (--m >= 0) {\n                            if (params[m].getProperty('key') == item.paramKey) {\n                                // found parameter, assign to remote controller\n                                let channel = item.paramRemoteData.channel,\n                                    controller = item.paramRemoteData.controller;\n                                assignParameter(params[m], channel, controller)\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n\n        /**\n         * Write assigned parameters to data object.\n         * Data object structure:\n         * data: [{}]\n         * @return {Object} Contains port and parameter data.\n         */\n        getData = function() {\n            // loop through midi ports lookup\n            let param, processorID, data = [];\n            for (let key in paramLookup) {\n                if (paramLookup.hasOwnProperty(key)) {\n                    params = paramLookup[key];\n                    // loop through all parameters assigned to this channel and cc\n                    for (let i = 0, n = params.length; i < n; i++) {\n                        param = params[i];\n                        // find processor for the parameter to get its id\n                        processorID = null;\n                        let n = processors.length;\n                        while (--n >= 0) {\n                            let m = processors[n].params.length;\n                            while (--m >= 0) {\n                                if (param === processors[n].params[m]) {\n                                    processorID = processors[n].processor.getID();\n                                    break;\n                                }\n                            }\n                        }\n                        data.push({\n                            processorID: processorID,\n                            paramKey: param.getProperty('key'),\n                            paramRemoteData: param.getRemoteData()\n                        });\n                    }\n                }\n            }\n            return data;\n        };\n\n    that = specs.that;\n\n    init();\n\n    that.addMidiInput = addMidiInput;\n    that.removeMidiInput = removeMidiInput;\n    that.toggleMidiLearn = toggleMidiLearn;\n    that.unassingParameter = unassingParameter;\n    that.registerProcessor = registerProcessor;\n    that.unregisterProcessor = unregisterProcessor;\n    that.clear = clear;\n    that.setData = setData;\n    that.getData = getData;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvbWlkaS9yZW1vdGUuanM/YWI4OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBLGtEQUFrRCxPQUFPO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQix1QkFBdUI7QUFDbEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0RBQWtELE9BQU87QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQixvQkFBb0IsT0FBTztBQUMzQixvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxPQUFPO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNSURJUmVtb3RlIGFzc2lnbnMgTUlESSBDb250aW51b3VzIENvbnRyb2xsZXJzIHRvIHByb2Nlc3NvciBwYXJhbWV0ZXJzLlxuICpcbiAqIElmIGEgQ0MgaXMgYXNzaWduZWQgYW5kIHRoYXQgQ0Mgd2FzIGFscmVhZHkgYXNzaWduZWQsIHRoZSBvbGQgYXNzaWdubWVudCBpcyByZW1vdmVkLlxuICogSWYgYSBwYXJhbWV0ZXIgaXMgYXNzaWduZWQgYW5kIGl0IGlzIHRoZW4gcmVhc3NpZ25lZCB0byBhIGRpZmZlcmVudCBDQywgdGhlIG9sZCBhc3NpZ25tZW50IGlzIHJlbW92ZWQuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU1JRElSZW1vdGUoc3BlY3MpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgYXBwID0gc3BlY3MuYXBwLFxuICAgICAgICByZW1vdGVWaWV3ID0gc3BlY3MucmVtb3RlVmlldyxcbiAgICAgICAgbWlkaUlucHV0cyA9IFtdLFxuICAgICAgICBhc3NpZ25tZW50cyA9IFtdLFxuICAgICAgICBwYXJhbUxvb2t1cCA9IHt9LFxuICAgICAgICBzZWxlY3RlZFBhcmFtZXRlcixcbiAgICAgICAgaXNJbkxlYXJuTW9kZSA9IGZhbHNlLFxuICAgICAgICBwcm9jZXNzb3JzID0gW10sXG4gICAgICAgIG1pZGlNZXNzYWdlTGlzdGVuZXIsXG5cbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbWlkaU1lc3NhZ2VMaXN0ZW5lciA9IG9uTUlESU1lc3NhZ2U7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkZCBhIE1JREkgSW5wdXQgcG9ydCBvbmx5IGlmIGl0IGRvZXNuJ3QgeWV0IGV4aXN0LlxuICAgICAgICAgKiBUaGUgcG9ydCBpcyB0aGUgbW9kdWxlIGNyZWF0ZWQgaW4gbWlkaS5wb3J0LmlucHV0LmpzLFxuICAgICAgICAgKiBub3QgYSBXZWIgTUlESSBBUEkgTUlESUlucHV0LlxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gbWlkaUlucHV0UG9ydCBNSURJIGlucHV0IHBvcnQgbW9kdWxlLlxuICAgICAgICAgKi9cbiAgICAgICAgYWRkTWlkaUlucHV0ID0gZnVuY3Rpb24obWlkaUlucHV0UG9ydCkge1xuICAgICAgICAgICAgdmFyIG1pZGlJbnB1dFBvcnRJRCA9IG1pZGlJbnB1dFBvcnQuZ2V0SUQoKSxcbiAgICAgICAgICAgICAgICBleGlzdGluZ01pZGlJbnB1dFBvcnQgPSBnZXRNSURJSW5wdXRCeUlEKG1pZGlJbnB1dFBvcnRJRCk7XG5cbiAgICAgICAgICAgIGlmICghZXhpc3RpbmdNaWRpSW5wdXRQb3J0KSB7XG4gICAgICAgICAgICAgICAgLy8gc3RvcmUgcmVmZXJlbmNlIHRvIG1pZGlJbnB1dFBvcnQgbW9kdWxlXG4gICAgICAgICAgICAgICAgbWlkaUlucHV0cy5wdXNoKG1pZGlJbnB1dFBvcnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBzdWJzY3JpYmUgdG8gcmVjZWl2ZSBtZXNzYWdlcyBmcm9tIHRoaXMgTUlESSBpbnB1dFxuICAgICAgICAgICAgbWlkaUlucHV0UG9ydC5hZGRNSURJTWVzc2FnZUxpc3RlbmVyKG1pZGlNZXNzYWdlTGlzdGVuZXIpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW1vdmUgYSBNSURJIGlucHV0IHBvcnQgZnJvbSBiZWluZyBhIHJlbW90ZSBzb3VyY2UuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBtaWRpSW5wdXRQb3J0IE1JREkgaW5wdXQgcG9ydCBvYmplY3QuXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdmVNaWRpSW5wdXQgPSBmdW5jdGlvbihtaWRpSW5wdXRQb3J0KSB7XG4gICAgICAgICAgICAvLyB1bnN1YnNjcmliZSBmcm9tIHJlY2VpdmluZyBtZXNzYWdlcyBmcm9tIHRoaXMgTUlESSBpbnB1dFxuICAgICAgICAgICAgbWlkaUlucHV0UG9ydC5yZW1vdmVNSURJTWVzc2FnZUxpc3RlbmVyKG1pZGlNZXNzYWdlTGlzdGVuZXIpO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpbmQgbWlkaUlucHV0UG9ydCBmcm9tIGxpc3Qgb2YgYWRkZWQgaW5wdXRzIGJ5IElELlxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gbWlkaUlucHV0UG9ydElEIFtkZXNjcmlwdGlvbl1cbiAgICAgICAgICogQHJldHVybiB7T2JqZWN0fHVuZGVmaW5lZH0gTWlkaUlucHV0UG9ydCBvYmplY3Qgb3IgdW5kZWZpbmVkIGlmIG5vdCBmb3VuZC5cbiAgICAgICAgICovXG4gICAgICAgIGdldE1JRElJbnB1dEJ5SUQgPSBmdW5jdGlvbihtaWRpSW5wdXRQb3J0SUQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gbWlkaUlucHV0cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAobWlkaUlucHV0c1tpXS5nZXRJRCgpID09PSBtaWRpSW5wdXRQb3J0SUQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pZGlJbnB1dHNbaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFdmVudGxpc3RlbmVyIGZvciBpbmNvbWluZyBNSURJIG1lc3NhZ2VzLlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi93ZWJtaWRpLyNpZGwtZGVmLU1JRElNZXNzYWdlRXZlbnRcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBlIE1JRElNZXNzYWdlRXZlbnQgZXZlbnQuXG4gICAgICAgICAqL1xuICAgICAgICBvbk1JRElNZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgLy8gb25seSBjb250aW51b3VzIGNvbnRyb2xsZXIgbWVzc2FnZSwgMHhCID09IDExXG4gICAgICAgICAgICBpZiAoZS5kYXRhWzBdID4+IDQgPT09IDB4Qikge1xuICAgICAgICAgICAgICAgIHZhciBjaGFubmVsID0gKGUuZGF0YVswXSAmIDB4ZikgKyAxLFxuICAgICAgICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbUxvb2t1cFtjaGFubmVsICsgJ18nICsgZS5kYXRhWzFdXTtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBuID0gcGFyYW1zLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zW2ldLnNldFZhbHVlTm9ybWFsaXplZChlLmRhdGFbMl0gLyAxMjcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMaXN0ZW5lciBmb3IgTUlESSBldmVudHMgaW4gY2FzZSB0aGUgYXBwIGlzIGluIE1JREkgbGVhcm4gbW9kZS5cbiAgICAgICAgICogQHNlZSBodHRwczovL3d3dy53My5vcmcvVFIvd2VibWlkaS8jaWRsLWRlZi1NSURJTWVzc2FnZUV2ZW50XG4gICAgICAgICAqIEBwYXJhbSAge09iamVjdH0gZSBNSURJTWVzc2FnZUV2ZW50IGV2ZW50LlxuICAgICAgICAgKi9cbiAgICAgICAgb25NSURJTGVhcm5NZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKHNlbGVjdGVkUGFyYW1ldGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUuZGF0YVswXSA+PiA0ID09PSAweEIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoYW5uZWwgPSAoZS5kYXRhWzBdICYgMHhmKSArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyID0gZS5kYXRhWzFdO1xuICAgICAgICAgICAgICAgICAgICBhc3NpZ25QYXJhbWV0ZXIoc2VsZWN0ZWRQYXJhbWV0ZXIsIGNoYW5uZWwsIGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICBkZXNlbGVjdFBhcmFtZXRlcigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVG9nZ2xlIE1JREkgbGVhcm4gbW9kZSwgc28gaW5jb21pbmcgTUlESSBtZXNzYWdlcyBhcmUgdXNlZCB0b1xuICAgICAgICAgKiBhc3NpZ24gYSBzZWxlY3RlZCBwYXJhbWV0ZXIgdG8gdGhlIGluY29taW5nIG1lc3NhZ2UgdHlwZS5cbiAgICAgICAgICogQHBhcmFtIHtCb29sZWFufSBpc0VuYWJsZWQgVHJ1ZSB0byBlbmFibGUgTUlESSBsZWFybiBtb2RlLlxuICAgICAgICAgKi9cbiAgICAgICAgdG9nZ2xlTWlkaUxlYXJuID0gZnVuY3Rpb24oaXNFbmFibGVkKSB7XG4gICAgICAgICAgICBpc0luTGVhcm5Nb2RlID0gaXNFbmFibGVkO1xuICAgICAgICAgICAgZGVzZWxlY3RQYXJhbWV0ZXIoKTtcbiAgICAgICAgICAgIGFwcC5hcHBVcGRhdGVkKCdyZW1vdGUnLCBpc0luTGVhcm5Nb2RlKTtcblxuICAgICAgICAgICAgLy8gc2V0IGxlYXJuIG1vZGUgb24gYWxsIHBhcmFtZXRlcnNcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvY2Vzc29ycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHNldFByb2Nlc3NvckxlYXJuTW9kZShwcm9jZXNzb3JzW2ldKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbWlkaSBsaXN0ZW5lciBzd2l0Y2hlcyB3aXRoIGxlYXJuIG1vZGVcbiAgICAgICAgICAgIHZhciBvbGRNaWRpbWVzc2FnZUxpc3RlbmVyO1xuICAgICAgICAgICAgaWYgKGlzSW5MZWFybk1vZGUpIHtcbiAgICAgICAgICAgICAgICBvbGRNaWRpbWVzc2FnZUxpc3RlbmVyID0gb25NSURJTWVzc2FnZTtcbiAgICAgICAgICAgICAgICBtaWRpTWVzc2FnZUxpc3RlbmVyID0gb25NSURJTGVhcm5NZXNzYWdlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvbGRNaWRpbWVzc2FnZUxpc3RlbmVyID0gb25NSURJTGVhcm5NZXNzYWdlO1xuICAgICAgICAgICAgICAgIG1pZGlNZXNzYWdlTGlzdGVuZXIgPSBvbk1JRElNZXNzYWdlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBzZXQgbGlzdGVuZXIgb24gYWxsIG1pZGkgcG9ydHNcbiAgICAgICAgICAgIGxldCBtaWRpSW5wdXQ7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IG1pZGlJbnB1dHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbWlkaUlucHV0ID0gbWlkaUlucHV0c1tpXTtcbiAgICAgICAgICAgICAgICBpZiAobWlkaUlucHV0LmdldENvbm5lY3RlZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1pZGlJbnB1dC5yZW1vdmVNSURJTWVzc2FnZUxpc3RlbmVyKG9sZE1pZGltZXNzYWdlTGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICBtaWRpSW5wdXQuYWRkTUlESU1lc3NhZ2VMaXN0ZW5lcihtaWRpTWVzc2FnZUxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHJlbW90ZSBzdGF0ZSBvZiBhIHByb2Nlc3NvcidzIHJlbW90ZSBjYXBhYmxlIHBhcmFtZXRlcnMuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9jZXNzb3IgUHJvY2Vzc29yIHRvIGVudGVyIG9yIGV4aXQgbGVhcm4gbW9kZS5cbiAgICAgICAgICovXG4gICAgICAgIHNldFByb2Nlc3NvckxlYXJuTW9kZSA9IGZ1bmN0aW9uKHByb2Nlc3Nvcikge1xuICAgICAgICAgICAgdmFyIHJlbW90ZVN0YXRlID0gaXNJbkxlYXJuTW9kZSA/ICdlbnRlcicgOiAnZXhpdCc7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb2Nlc3Nvci5wYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBwcm9jZXNzb3IucGFyYW1zW2ldLnNldFJlbW90ZVN0YXRlKHJlbW90ZVN0YXRlLCBzZWxlY3RQYXJhbWV0ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgYSBwYXJhbWV0ZXIgYXMgc2VsZWN0ZWQgdG8gYmUgYXNzaWduZWQuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbSBQcm9jZXNzb3IgcGFyYW1ldGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZWN0UGFyYW1ldGVyID0gZnVuY3Rpb24ocGFyYW0pIHtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZFBhcmFtZXRlcikge1xuICAgICAgICAgICAgICAgIGRlc2VsZWN0UGFyYW1ldGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxlY3RlZFBhcmFtZXRlciA9IHBhcmFtO1xuICAgICAgICAgICAgc2VsZWN0ZWRQYXJhbWV0ZXIuc2V0UmVtb3RlU3RhdGUoJ3NlbGVjdGVkJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVuc2VsZWN0IHRoZSBzZWxlY3RlZCBwYXJhbWV0ZXIgc28gaXQgY2FuJ3QgYmUgYXNzaWduZWQgYW55bW9yZS5cbiAgICAgICAgICovXG4gICAgICAgIGRlc2VsZWN0UGFyYW1ldGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRQYXJhbWV0ZXIpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFBhcmFtZXRlci5zZXRSZW1vdGVTdGF0ZSgnZGVzZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkUGFyYW1ldGVyID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQXNzaWduIGEgTUlESSBjb250cm9sbGVyIHRvIGEgcGFyYW1ldGVyLlxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IHBhcmFtIFByb2Nlc3NvciBwYXJhbWV0ZXIgdG8gYmUgYXNzaWduZWQgYSBNSURJIGNvbnRyb2wuXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gY2hhbm5lbCBNSURJIGNoYW5uZWwuXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gY29udHJvbGxlciBNSURJIENDIG51bWJlci5cbiAgICAgICAgICovXG4gICAgICAgIGFzc2lnblBhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtLCBjaGFubmVsLCBjb250cm9sbGVyKSB7XG4gICAgICAgICAgICAvLyBmaW5kIGlmIHRoaXMgcGFyYW1ldGVyIGlzIGFscmVhZHkgYXNzaWduZWRcbiAgICAgICAgICAgIGxldCBuID0gYXNzaWdubWVudHMubGVuZ3RoO1xuICAgICAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFyIGEgPSBhc3NpZ25tZW50c1tuXTtcbiAgICAgICAgICAgICAgICBpZiAoYS5wYXJhbSA9PSBwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYS5jaGFubmVsID09IGNoYW5uZWwgJiYgYS5jb250cm9sbGVyID09IGNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBwYXJhbWV0ZXIgaXMgYXNzaWduZWQgdG8gdGhpcyBjaGFubmVsIC8gY2MsXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBkb24ndCBhc3NpZ24gaXQgYWdhaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBwYXJhbWV0ZXIgaXMgYXNzaWduZWQgdG8gYW5vdGhlciBjaGFubmVsIC8gY2MsXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBmaXJzdCByZW1vdmUgdGhhdCBhc3NpZ25tZW50XG4gICAgICAgICAgICAgICAgICAgICAgICB1bmFzc2luZ1BhcmFtZXRlcihwYXJhbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGFkZCB0aGUgYXNzaWdubWVudCB0byB0aGUgbW9kZWxcbiAgICAgICAgICAgIGFzc2lnbm1lbnRzLnB1c2goe1xuICAgICAgICAgICAgICAgIHBhcmFtOiBwYXJhbSxcbiAgICAgICAgICAgICAgICBjaGFubmVsOiBjaGFubmVsLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6IGNvbnRyb2xsZXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBjcmVhdGUgbG9va3VwIGZvciB0aGlzIE1JREkgY29udHJvbGxlclxuICAgICAgICAgICAgaWYgKCFwYXJhbUxvb2t1cFtjaGFubmVsICsgJ18nICsgY29udHJvbGxlcl0pIHtcbiAgICAgICAgICAgICAgICBwYXJhbUxvb2t1cFtjaGFubmVsICsgJ18nICsgY29udHJvbGxlcl0gPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGFkZCBwYXJhbWV0ZXIgdG8gdGhlIGxvb2t1cCB0YWJsZVxuICAgICAgICAgICAgcGFyYW1Mb29rdXBbY2hhbm5lbCArICdfJyArIGNvbnRyb2xsZXJdLnB1c2gocGFyYW0pO1xuXG4gICAgICAgICAgICAvLyB1cGRhdGUgdGhlIHBhcmFtZXRlclxuICAgICAgICAgICAgcGFyYW0uc2V0UmVtb3RlUHJvcGVydHkoJ2NoYW5uZWwnLCBjaGFubmVsKTtcbiAgICAgICAgICAgIHBhcmFtLnNldFJlbW90ZVByb3BlcnR5KCdjb250cm9sbGVyJywgY29udHJvbGxlcik7XG4gICAgICAgICAgICBwYXJhbS5zZXRSZW1vdGVTdGF0ZSgnYXNzaWduZWQnKTtcblxuICAgICAgICAgICAgLy8gYWRkIHBhcmFtZXRlciB0byB0aGUgdmlld1xuICAgICAgICAgICAgcmVtb3RlVmlldy5hZGRQYXJhbWV0ZXIocGFyYW0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVbmFzc2lnbiBhIHBhcmFtZXRlciBmcm9tIGJlaW5nIE1JREkgY29udHJvbGxlZC5cbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBwYXJhbSBQcm9jZXNzb3IgcGFyYW1ldGVyIHRvIGJlIHVuYXNzaWduZWQuXG4gICAgICAgICAqL1xuICAgICAgICB1bmFzc2luZ1BhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtKSB7XG4gICAgICAgICAgICB2YXIgcG9ydElkID0gcGFyYW0uZ2V0UmVtb3RlUHJvcGVydHkoJ3BvcnRJZCcpLFxuICAgICAgICAgICAgICAgIGNoYW5uZWwgPSBwYXJhbS5nZXRSZW1vdGVQcm9wZXJ0eSgnY2hhbm5lbCcpLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIgPSBwYXJhbS5nZXRSZW1vdGVQcm9wZXJ0eSgnY29udHJvbGxlcicpLFxuICAgICAgICAgICAgICAgIG1pZGlJbnB1dCA9IGdldE1JRElJbnB1dEJ5SUQocG9ydElkKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIHJlbW92ZSB0aGUgYXNzaWdubWVudCBmcm9tIHRoZSBtb2RlbFxuICAgICAgICAgICAgdmFyIG4gPSBhc3NpZ25tZW50cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgYSA9IGFzc2lnbm1lbnRzW25dO1xuICAgICAgICAgICAgICAgIGlmIChhLnBhcmFtID09IHBhcmFtICYmIGEuY2hhbm5lbCA9PSBjaGFubmVsICYmIGEuY29udHJvbGxlciA9PSBjb250cm9sbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGFzc2lnbm1lbnRzLnNwbGljZShuLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyByZW1vdmUgcGFyYW1ldGVyIGZyb20gdGhlIGxvb2t1cCB0YWJsZTtcbiAgICAgICAgICAgIHZhciBwYXJhbXMgPSBwYXJhbUxvb2t1cFtjaGFubmVsICsgJ18nICsgY29udHJvbGxlcl07XG4gICAgICAgICAgICBpZiAocGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmFtcy5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgd2hvbGUgYXJyYXkgaWYgdGhpcyBpcyB0aGUgb25seSBwYXJhbWV0ZXJcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHBhcmFtTG9va3VwW2NoYW5uZWwgKyAnXyAnICsgY29udHJvbGxlcl07XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHBhcmFtZXRlciBmcm9tIGFycmF5XG4gICAgICAgICAgICAgICAgICAgIHZhciBuID0gcGFyYW1zLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyYW1zW25dID09IHBhcmFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zLnNwbGljZShuLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSB0aGUgcGFyYW1ldGVyXG4gICAgICAgICAgICBwYXJhbS5zZXRSZW1vdGVQcm9wZXJ0eSgnY2hhbm5lbCcsIG51bGwpO1xuICAgICAgICAgICAgcGFyYW0uc2V0UmVtb3RlUHJvcGVydHkoJ2NvbnRyb2xsZXInLCBudWxsKTtcbiAgICAgICAgICAgIHBhcmFtLnNldFJlbW90ZVN0YXRlKCd1bmFzc2lnbmVkJyk7XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBwYXJhbWV0ZXIgZnJvbSB0aGUgdmlld1xuICAgICAgICAgICAgcmVtb3RlVmlldy5yZW1vdmVQYXJhbWV0ZXIocGFyYW0pO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlZ2lzdGVyIGEgcHJvY2Vzc29yIG9mIHdoaWNoIHBhcmFtZXRlcnMgbWlnaHQgYmUgcmVtb3RlIGNvbnRyb2xsZWQuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9jZXNzb3IgTmV0d29yayBwcm9jZXNzb3IuXG4gICAgICAgICAqL1xuICAgICAgICByZWdpc3RlclByb2Nlc3NvciA9IGZ1bmN0aW9uKHByb2Nlc3Nvcikge1xuICAgICAgICAgICAgdmFyIHBhcmFtcyA9IHByb2Nlc3Nvci5nZXRQYXJhbWV0ZXJzKCksXG4gICAgICAgICAgICAgICAgY29udHJvbGxhYmxlUGFyYW1zID0gW10sXG4gICAgICAgICAgICAgICAgcHJvY2Vzc29yT2JqZWN0ID0ge307XG5cbiAgICAgICAgICAgIC8vIGNyZWF0ZSBhcnJheSBvZiBhbGwgY29udHJvbGxhYmxlIHBhcmFtZXRlcnMgb2YgdGhlIHByb2Nlc3NvclxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHBhcmFtcykge1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFyYW1zW2tleV0uZ2V0UHJvcGVydHkoJ2lzTWlkaUNvbnRyb2xsYWJsZScpID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGFibGVQYXJhbXMucHVzaChwYXJhbXNba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjb250cm9sbGFibGVQYXJhbXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy8gYWRkIGRhdGEgdG8gcHJvY2Vzc29ycyBsaXN0XG4gICAgICAgICAgICAgICAgcHJvY2Vzc29yT2JqZWN0LnByb2Nlc3NvciA9IHByb2Nlc3NvcjtcbiAgICAgICAgICAgICAgICBwcm9jZXNzb3JPYmplY3QucGFyYW1zID0gY29udHJvbGxhYmxlUGFyYW1zO1xuICAgICAgICAgICAgICAgIHByb2Nlc3NvcnMucHVzaChwcm9jZXNzb3JPYmplY3QpO1xuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSB2aWV3XG4gICAgICAgICAgICAgICAgcmVtb3RlVmlldy5jcmVhdGVSZW1vdGVHcm91cChwcm9jZXNzb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBzZXQgcHJvY2Vzc29yJ3MgcGFyYW1ldGVycyBpbiBsZWFybiBtb2RlLCBpZiBuZWNlc3NhcnlcbiAgICAgICAgICAgIGlmIChpc0luTGVhcm5Nb2RlKSB7XG4gICAgICAgICAgICAgICAgc2V0UHJvY2Vzc29yTGVhcm5Nb2RlKHByb2Nlc3Nvck9iamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogVW5yZWdpc3RlciBhIHByb2Nlc3NvciBvZiB3aGljaCBwYXJhbWV0ZXJzIG1pZ2h0IGJlIHJlbW90ZSBjb250cm9sbGVkLlxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcHJvY2Vzc29yIE5ldHdvcmsgcHJvY2Vzc29yLlxuICAgICAgICAgKi9cbiAgICAgICAgdW5yZWdpc3RlclByb2Nlc3NvciA9IGZ1bmN0aW9uKHByb2Nlc3Nvcikge1xuICAgICAgICAgICAgdmFyIG4gPSBwcm9jZXNzb3JzLmxlbmd0aDtcbiAgICAgICAgICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzb3JzW25dLnByb2Nlc3NvciA9PT0gcHJvY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlbW92ZSBkYXRhIGZyb20gcHJvY2Vzc29ycyBsaXN0XG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NvcnMuc3BsaWNlKG4sIDEpO1xuICAgICAgICAgICAgICAgICAgICAvLyB1cGRhdGUgdmlld1xuICAgICAgICAgICAgICAgICAgICByZW1vdGVWaWV3LmRlbGV0ZVJlbW90ZUdyb3VwKHByb2Nlc3Nvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDbGVhciBhbGwgYXNzaWdubWVudHMuXG4gICAgICAgICAqIFVuYXNzaWduIGFsbCBwYXJhbWV0ZXJzLlxuICAgICAgICAgKiBVbnJlZ2lzdGVyIGFsbCBwcm9jZXNzb3JzLlxuICAgICAgICAgKi9cbiAgICAgICAgY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIHVuYXNzaWduIGFsbCBwYXJhbWV0ZXJzXG4gICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gcGFyYW1Mb29rdXApIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1Mb29rdXAuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbUxvb2t1cFtrZXldLmZvckVhY2goZnVuY3Rpb24ocGFyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVuYXNzaW5nUGFyYW1ldGVyKHBhcmFtKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyYW1Mb29rdXAgPSB7fTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gdW5yZWdpc3RlciBhbGwgcHJvY2Vzc29yc1xuICAgICAgICAgICAgcHJvY2Vzc29ycy5mb3JFYWNoKGZ1bmN0aW9uKHByb2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIHVucmVnaXN0ZXJQcm9jZXNzb3IocHJvY2Vzc29yKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXN0b3JlIGFzc2lnbmVkIHBhcmFtZXRlcnMgZnJvbSBkYXRhIG9iamVjdC5cbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgIGRhdGEgb2JqZWN0LlxuICAgICAgICAgKi9cbiAgICAgICAgc2V0RGF0YSA9IGZ1bmN0aW9uKGRhdGEgPSBbXSkge1xuICAgICAgICAgICAgLy8gY2xlYXIgYWxsIG9sZCBkYXRhXG4gICAgICAgICAgICBjbGVhcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBzZXQgbmV3IGRhdGFcbiAgICAgICAgICAgIGxldCBpdGVtO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIG4gPSBkYXRhLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgIGl0ZW0gPSBkYXRhW2ldO1xuICAgICAgICAgICAgICAgIC8vIGZpbmQgcHJvY2Vzc29yXG4gICAgICAgICAgICAgICAgbGV0IHByb2Nlc3NvcklEID0gaXRlbS5wcm9jZXNzb3JJRDtcbiAgICAgICAgICAgICAgICBsZXQgbiA9IHByb2Nlc3NvcnMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc29yc1tuXS5wcm9jZXNzb3IuZ2V0SUQoKSA9PSBwcm9jZXNzb3JJRCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcHJvY2Vzc29yIGZvdW5kLCBmaW5kIHBhcmFtZXRlclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBhcmFtcyA9IHByb2Nlc3NvcnNbbl0ucGFyYW1zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0gPSBwYXJhbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKC0tbSA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmFtc1ttXS5nZXRQcm9wZXJ0eSgna2V5JykgPT0gaXRlbS5wYXJhbUtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBmb3VuZCBwYXJhbWV0ZXIsIGFzc2lnbiB0byByZW1vdGUgY29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2hhbm5lbCA9IGl0ZW0ucGFyYW1SZW1vdGVEYXRhLmNoYW5uZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyID0gaXRlbS5wYXJhbVJlbW90ZURhdGEuY29udHJvbGxlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNzaWduUGFyYW1ldGVyKHBhcmFtc1ttXSwgY2hhbm5lbCwgY29udHJvbGxlcilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdyaXRlIGFzc2lnbmVkIHBhcmFtZXRlcnMgdG8gZGF0YSBvYmplY3QuXG4gICAgICAgICAqIERhdGEgb2JqZWN0IHN0cnVjdHVyZTpcbiAgICAgICAgICogZGF0YTogW3t9XVxuICAgICAgICAgKiBAcmV0dXJuIHtPYmplY3R9IENvbnRhaW5zIHBvcnQgYW5kIHBhcmFtZXRlciBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0RGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIG1pZGkgcG9ydHMgbG9va3VwXG4gICAgICAgICAgICBsZXQgcGFyYW0sIHByb2Nlc3NvcklELCBkYXRhID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gcGFyYW1Mb29rdXApIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1Mb29rdXAuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbUxvb2t1cFtrZXldO1xuICAgICAgICAgICAgICAgICAgICAvLyBsb29wIHRocm91Z2ggYWxsIHBhcmFtZXRlcnMgYXNzaWduZWQgdG8gdGhpcyBjaGFubmVsIGFuZCBjY1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbiA9IHBhcmFtcy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtID0gcGFyYW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmluZCBwcm9jZXNzb3IgZm9yIHRoZSBwYXJhbWV0ZXIgdG8gZ2V0IGl0cyBpZFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc29ySUQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG4gPSBwcm9jZXNzb3JzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtID0gcHJvY2Vzc29yc1tuXS5wYXJhbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgtLW0gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyYW0gPT09IHByb2Nlc3NvcnNbbl0ucGFyYW1zW21dKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzb3JJRCA9IHByb2Nlc3NvcnNbbl0ucHJvY2Vzc29yLmdldElEKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc29ySUQ6IHByb2Nlc3NvcklELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtS2V5OiBwYXJhbS5nZXRQcm9wZXJ0eSgna2V5JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1SZW1vdGVEYXRhOiBwYXJhbS5nZXRSZW1vdGVEYXRhKClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH07XG5cbiAgICB0aGF0ID0gc3BlY3MudGhhdDtcblxuICAgIGluaXQoKTtcblxuICAgIHRoYXQuYWRkTWlkaUlucHV0ID0gYWRkTWlkaUlucHV0O1xuICAgIHRoYXQucmVtb3ZlTWlkaUlucHV0ID0gcmVtb3ZlTWlkaUlucHV0O1xuICAgIHRoYXQudG9nZ2xlTWlkaUxlYXJuID0gdG9nZ2xlTWlkaUxlYXJuO1xuICAgIHRoYXQudW5hc3NpbmdQYXJhbWV0ZXIgPSB1bmFzc2luZ1BhcmFtZXRlcjtcbiAgICB0aGF0LnJlZ2lzdGVyUHJvY2Vzc29yID0gcmVnaXN0ZXJQcm9jZXNzb3I7XG4gICAgdGhhdC51bnJlZ2lzdGVyUHJvY2Vzc29yID0gdW5yZWdpc3RlclByb2Nlc3NvcjtcbiAgICB0aGF0LmNsZWFyID0gY2xlYXI7XG4gICAgdGhhdC5zZXREYXRhID0gc2V0RGF0YTtcbiAgICB0aGF0LmdldERhdGEgPSBnZXREYXRhO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvbWlkaS9yZW1vdGUuanNcbi8vIG1vZHVsZSBpZCA9IDMxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDISync;\n/**\n * MIDISync listens to incoming sync data.\n * 11111000 timing clock\n * 11111010 start\n * 11111011 continue\n * 11111100 stop\n */\nfunction createMIDISync(specs) {\n    var that,\n        transport = specs.transport,\n        midiInputs = [],\n\n        /**\n         * Add a MIDI Input port only if it doesn't yet exist.\n         * The port is the object created in midi.port.input.js,\n         * not a Web MIDI API MIDIInput.\n         * @param {Object} midiInputPort MIDI input port object.\n         */\n        addMidiInput = function(midiInputPort) {\n            var exists = false,\n                midiInputPortID = midiInputPort.getID();\n            for (var i = 0, n = midiInputs.length; i < n; i++) {\n                if (midiInputs[i].getID() === midiInputPortID) {\n                    exists = true;\n                    break;\n                }\n            }\n\n            if (!exists) {\n                // keep reference to midiInputPort\n                midiInputs.push(midiInputPort);\n\n                // subscribe to receive messages from this MIDI input\n                midiInputPort.addMIDIMessageListener(onMIDIMessage);\n            }\n        },\n\n        /**\n         * Remove a MIDI input port from being a remote source.\n         * @param {Object} midiInputPort MIDI input port object.\n         */\n        removeMidiInput = function(midiInputPort) {\n            for (var i = 0, n = midiInputs.length; i < n; i++) {\n                if (midiInputs[i] === midiInputPort) {\n                    midiInputs.splice(i, 1);\n                    // unsubscribe from receiving messages from the MIDI input.\n                    midiInputPort.removeMIDIMessageListener(onMIDIMessage);\n                    // and we're done\n                    break;\n                }\n            }\n        },\n\n        /**\n         * Eventlistener for incoming MIDI messages.\n         * @see https://www.w3.org/TR/webmidi/#idl-def-MIDIMessageEvent\n         * @see https://www.midi.org/specifications/item/table-1-summary-of-midi-message\n         * @param  {Object} e MIDIMessageEvent event.\n         */\n        onMIDIMessage = function(e) {\n            // data[1] and data[2] are undefined,\n            // for e.data[0] & 0xf:\n            //  8 = clock, 248 (11110000 | 00000100)\n            // 10 = start\n            // 11 = continue\n            // 12 = stop\n            switch (e.data[0]) {\n                case 248:\n                    break;\n                case 250:\n                    transport.rewind();\n                    transport.start();\n                    break;\n                case 251:\n                    transport.start();\n                    break;\n                case 252:\n                    transport.pause();\n                    break;\n            }\n        };\n\n    that = specs.that;\n\n    that.addMidiInput = addMidiInput;\n    that.removeMidiInput = removeMidiInput;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvbWlkaS9zeW5jLmpzP2QwNjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsT0FBTztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0Esa0RBQWtELE9BQU87QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNSURJU3luYyBsaXN0ZW5zIHRvIGluY29taW5nIHN5bmMgZGF0YS5cbiAqIDExMTExMDAwIHRpbWluZyBjbG9ja1xuICogMTExMTEwMTAgc3RhcnRcbiAqIDExMTExMDExIGNvbnRpbnVlXG4gKiAxMTExMTEwMCBzdG9wXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU1JRElTeW5jKHNwZWNzKSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIHRyYW5zcG9ydCA9IHNwZWNzLnRyYW5zcG9ydCxcbiAgICAgICAgbWlkaUlucHV0cyA9IFtdLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBZGQgYSBNSURJIElucHV0IHBvcnQgb25seSBpZiBpdCBkb2Vzbid0IHlldCBleGlzdC5cbiAgICAgICAgICogVGhlIHBvcnQgaXMgdGhlIG9iamVjdCBjcmVhdGVkIGluIG1pZGkucG9ydC5pbnB1dC5qcyxcbiAgICAgICAgICogbm90IGEgV2ViIE1JREkgQVBJIE1JRElJbnB1dC5cbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG1pZGlJbnB1dFBvcnQgTUlESSBpbnB1dCBwb3J0IG9iamVjdC5cbiAgICAgICAgICovXG4gICAgICAgIGFkZE1pZGlJbnB1dCA9IGZ1bmN0aW9uKG1pZGlJbnB1dFBvcnQpIHtcbiAgICAgICAgICAgIHZhciBleGlzdHMgPSBmYWxzZSxcbiAgICAgICAgICAgICAgICBtaWRpSW5wdXRQb3J0SUQgPSBtaWRpSW5wdXRQb3J0LmdldElEKCk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IG1pZGlJbnB1dHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1pZGlJbnB1dHNbaV0uZ2V0SUQoKSA9PT0gbWlkaUlucHV0UG9ydElEKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0cyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFleGlzdHMpIHtcbiAgICAgICAgICAgICAgICAvLyBrZWVwIHJlZmVyZW5jZSB0byBtaWRpSW5wdXRQb3J0XG4gICAgICAgICAgICAgICAgbWlkaUlucHV0cy5wdXNoKG1pZGlJbnB1dFBvcnQpO1xuXG4gICAgICAgICAgICAgICAgLy8gc3Vic2NyaWJlIHRvIHJlY2VpdmUgbWVzc2FnZXMgZnJvbSB0aGlzIE1JREkgaW5wdXRcbiAgICAgICAgICAgICAgICBtaWRpSW5wdXRQb3J0LmFkZE1JRElNZXNzYWdlTGlzdGVuZXIob25NSURJTWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlbW92ZSBhIE1JREkgaW5wdXQgcG9ydCBmcm9tIGJlaW5nIGEgcmVtb3RlIHNvdXJjZS5cbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG1pZGlJbnB1dFBvcnQgTUlESSBpbnB1dCBwb3J0IG9iamVjdC5cbiAgICAgICAgICovXG4gICAgICAgIHJlbW92ZU1pZGlJbnB1dCA9IGZ1bmN0aW9uKG1pZGlJbnB1dFBvcnQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gbWlkaUlucHV0cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAobWlkaUlucHV0c1tpXSA9PT0gbWlkaUlucHV0UG9ydCkge1xuICAgICAgICAgICAgICAgICAgICBtaWRpSW5wdXRzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gdW5zdWJzY3JpYmUgZnJvbSByZWNlaXZpbmcgbWVzc2FnZXMgZnJvbSB0aGUgTUlESSBpbnB1dC5cbiAgICAgICAgICAgICAgICAgICAgbWlkaUlucHV0UG9ydC5yZW1vdmVNSURJTWVzc2FnZUxpc3RlbmVyKG9uTUlESU1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgd2UncmUgZG9uZVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV2ZW50bGlzdGVuZXIgZm9yIGluY29taW5nIE1JREkgbWVzc2FnZXMuXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL3dlYm1pZGkvI2lkbC1kZWYtTUlESU1lc3NhZ2VFdmVudFxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vd3d3Lm1pZGkub3JnL3NwZWNpZmljYXRpb25zL2l0ZW0vdGFibGUtMS1zdW1tYXJ5LW9mLW1pZGktbWVzc2FnZVxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGUgTUlESU1lc3NhZ2VFdmVudCBldmVudC5cbiAgICAgICAgICovXG4gICAgICAgIG9uTUlESU1lc3NhZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAvLyBkYXRhWzFdIGFuZCBkYXRhWzJdIGFyZSB1bmRlZmluZWQsXG4gICAgICAgICAgICAvLyBmb3IgZS5kYXRhWzBdICYgMHhmOlxuICAgICAgICAgICAgLy8gIDggPSBjbG9jaywgMjQ4ICgxMTExMDAwMCB8IDAwMDAwMTAwKVxuICAgICAgICAgICAgLy8gMTAgPSBzdGFydFxuICAgICAgICAgICAgLy8gMTEgPSBjb250aW51ZVxuICAgICAgICAgICAgLy8gMTIgPSBzdG9wXG4gICAgICAgICAgICBzd2l0Y2ggKGUuZGF0YVswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMjQ4OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI1MDpcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNwb3J0LnJld2luZCgpO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc3BvcnQuc3RhcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNTE6XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zcG9ydC5zdGFydCgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI1MjpcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNwb3J0LnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgdGhhdCA9IHNwZWNzLnRoYXQ7XG5cbiAgICB0aGF0LmFkZE1pZGlJbnB1dCA9IGFkZE1pZGlJbnB1dDtcbiAgICB0aGF0LnJlbW92ZU1pZGlJbnB1dCA9IHJlbW92ZU1pZGlJbnB1dDtcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL21pZGkvc3luYy5qc1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createActions;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__state_selectors__ = __webpack_require__(0);\n\n\n\nfunction createActions(specs = {}, my = {}) {\n    const SET_PREFERENCES = 'SET_PREFERENCES',\n        SET_PROJECT = 'SET_PROJECT',\n        SET_THEME = 'SET_THEME',\n        CREATE_PROCESSOR = 'CREATE_PROCESSOR',\n        ADD_PROCESSOR = 'ADD_PROCESSOR',\n        DELETE_PROCESSOR = 'DELETE_PROCESSOR',\n        SELECT_PROCESSOR = 'SELECT_PROCESSOR',\n        DRAG_SELECTED_PROCESSOR = 'DRAG_SELECTED_PROCESSOR',\n        DRAG_ALL_PROCESSORS = 'DRAG_ALL_PROCESSORS',\n        CHANGE_PARAMETER = 'CHANGE_PARAMETER',\n        RECREATE_PARAMETER = 'RECREATE_PARAMETER',\n        TOGGLE_PLAY = 'TOGGLE_PLAY',\n        SET_TEMPO = 'SET_TEMPO',\n        ADD_MIDI_PORT = 'ADD_MIDI_PORT',\n        REMOVE_MIDI_PORT = 'REMOVE_MIDI_PORT',\n        TOGGLE_PORT_NETWORK = 'TOGGLE_PORT_NETWORK',\n        TOGGLE_PORT_SYNC = 'TOGGLE_PORT_SYNC',\n        TOGGLE_PORT_REMOTE = 'TOGGLE_PORT_REMOTE',\n        TOGGLE_MIDI_PREFERENCE = 'TOGGLE_MIDI_PREFERENCE';\n\n    return {\n        SET_PREFERENCES: SET_PREFERENCES,\n        setPreferences: (data) => {\n            return { type: SET_PREFERENCES, data: data };\n        },\n\n        SET_PROJECT: SET_PROJECT,\n        setProject: (data) => {\n            return { type: SET_PROJECT, data: data };\n        },\n\n        SET_THEME: SET_THEME,\n        setTheme: (value) => {\n            return { type: SET_THEME, data: value };\n        },\n\n        CREATE_PROCESSOR: CREATE_PROCESSOR,\n        createProcessor: (data) => {\n            return (dispatch, getState, getActions) => {\n                const dataTemplate = __webpack_require__(34)(`./${data.type}/config.json`);\n                let fullData = JSON.parse(JSON.stringify(dataTemplate));\n                const id = `${data.type}_${Object(__WEBPACK_IMPORTED_MODULE_0__core_util__[\"a\" /* createUUID */])()}`;\n                fullData = Object.assign(fullData, data);\n                fullData.id = id;\n                fullData.params.position2d.value = data.position2d;\n                fullData.params.name.value = getProcessorDefaultName(getState().processors);\n                dispatch(getActions().addProcessor(fullData));\n                dispatch(getActions().selectProcessor(id));\n            }\n        },\n\n        ADD_PROCESSOR: ADD_PROCESSOR,\n        addProcessor: (data) => {\n            return { type: ADD_PROCESSOR, data: data };\n        },\n\n        DELETE_PROCESSOR: DELETE_PROCESSOR,\n        deleteProcessor: id => {\n            return { type: DELETE_PROCESSOR, id: id };\n        },\n\n        SELECT_PROCESSOR: SELECT_PROCESSOR,\n        selectProcessor: id => {\n            return { type: SELECT_PROCESSOR, id: id };\n        },\n\n        DRAG_SELECTED_PROCESSOR: DRAG_SELECTED_PROCESSOR,\n        dragSelectedProcessor: (x, y) => {\n            return { type: DRAG_SELECTED_PROCESSOR, x: x, y: y };\n        },\n\n        DRAG_ALL_PROCESSORS: DRAG_ALL_PROCESSORS,\n        dragAllProcessors: (x, y) => {\n            return { type: DRAG_ALL_PROCESSORS, x: x, y: y };\n        },\n\n        CHANGE_PARAMETER: CHANGE_PARAMETER,\n        changeParameter: (processorID, paramKey, paramValue) => {\n            return { type: CHANGE_PARAMETER, processorID: processorID, paramKey: paramKey, paramValue: paramValue };\n        },\n\n        RECREATE_PARAMETER: RECREATE_PARAMETER,\n        recreateParameter: (processorID, paramKey, paramObj) => {\n            return { type: RECREATE_PARAMETER, processorID: processorID, paramKey : paramKey, paramObj: paramObj };\n        },\n\n        TOGGLE_PLAY: TOGGLE_PLAY,\n        togglePlay: value => { return { type: TOGGLE_PLAY, value: value } },\n\n        SET_TEMPO: SET_TEMPO,\n        setTempo: value => { return { type: SET_TEMPO, value: value } },\n\n        ADD_MIDI_PORT: ADD_MIDI_PORT,\n        addMIDIPort: (id, name, isInput) => { return { type: ADD_MIDI_PORT, id: id, name: name, isInput: isInput } },\n\n        REMOVE_MIDI_PORT: REMOVE_MIDI_PORT,\n        removeMIDIPort: id => { return { type: REMOVE_MIDI_PORT, id: id } },\n\n        TOGGLE_PORT_NETWORK: TOGGLE_PORT_NETWORK,\n        togglePortNetwork: (portID, isInput) => {\n            return (dispatch, getState, getActions) => {\n                dispatch(getActions().toggleMIDIPreference(portID, isInput, 'networkEnabled'));\n                if (Object(__WEBPACK_IMPORTED_MODULE_1__state_selectors__[\"a\" /* getMIDIPortByID */])(portID).networkEnabled) {\n                    dispatch(getActions().createProcessor({ \n                        type: 'output', \n                        portID: portID, \n                        position2d: {\n                            x: window.innerWidth / 2,\n                            y: window.innerHeight - 100\n                        }\n                    }));\n                } else {\n                    getState().processors.forEach(processor => {\n                        if (processor.portID && processor.portID === portID) {\n                            dispatch(getActions().deleteProcessor(processor.id));\n                        }\n                    });\n                }\n            }\n        },\n\n        TOGGLE_PORT_SYNC: TOGGLE_PORT_SYNC,\n        togglePortSync: (id, isInput) => {\n            return (dispatch, getState, getActions) => {\n                dispatch(getActions().toggleMIDIPreference(id, isInput, 'syncEnabled'));\n                \n            }\n        },\n\n        TOGGLE_PORT_REMOTE: TOGGLE_PORT_REMOTE,\n        togglePortRemote: (id, isInput) => {\n            return (dispatch, getState, getActions) => {\n                dispatch(getActions().toggleMIDIPreference(id, isInput, 'remoteEnabled'));\n                \n            }\n        },\n\n        TOGGLE_MIDI_PREFERENCE: TOGGLE_MIDI_PREFERENCE,\n        toggleMIDIPreference: (id, isInput, preferenceName) => { return { type: TOGGLE_MIDI_PREFERENCE, id: id, isInput: isInput, preferenceName: preferenceName } }\n    };\n}\n\n/**\n * network\n * - output processor created or activated\n * - output processor canvas view created or enabled\n * \n * remote\n * - remote object starts listening on activated port\n * \n * sync\n * - sync object starts listening on activated port\n */\n        \n/**\n * Set default processor name.\n * @param {Object} processor Processor to name.\n */\nfunction getProcessorDefaultName(processors) {\n    let name, number, spaceIndex, \n        highestNumber = 0,\n        staticName = 'Processor';\n    for (let i = 0, n = processors.length; i < n; i++) {\n        name = processors[i].params.name.value;\n        if (name && name.indexOf(staticName) == 0) {\n            spaceIndex = name.lastIndexOf(' ');\n            if (spaceIndex != -1) {\n                number = parseInt(name.substr(spaceIndex), 10);\n                if (!isNaN(number)) {\n                    highestNumber = Math.max(highestNumber, number);\n                }\n            }\n        }\n    }\n    return `${staticName} ${highestNumber + 1}`;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./epg/config.json\": 35,\n\t\"./example/config.json\": 36,\n\t\"./output/config.json\": 37\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycyAuL25vZGVfbW9kdWxlcy9qc29uLWxvYWRlciBeXFwuXFwvLipcXC9jb25maWdcXC5qc29uJD9hMTE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vZXBnL2NvbmZpZy5qc29uXCI6IDM1LFxuXHRcIi4vZXhhbXBsZS9jb25maWcuanNvblwiOiAzNixcblx0XCIuL291dHB1dC9jb25maWcuanNvblwiOiAzN1xufTtcbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyh3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSk7XG59O1xuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHR2YXIgaWQgPSBtYXBbcmVxXTtcblx0aWYoIShpZCArIDEpKSAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIicuXCIpO1xuXHRyZXR1cm4gaWQ7XG59O1xud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDM0O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3Byb2Nlc3NvcnMgLi9ub2RlX21vZHVsZXMvanNvbi1sb2FkZXIgXlxcLlxcLy4qXFwvY29uZmlnXFwuanNvbiRcbi8vIG1vZHVsZSBpZCA9IDM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

eval("module.exports = {\"name\":\"Euclidean\",\"inputs\":0,\"outputs\":1,\"params\":{\"steps\":{\"label\":\"Steps\",\"type\":\"integer\",\"default\":16,\"value\":16,\"min\":1,\"max\":64,\"isMidiControllable\":true},\"pulses\":{\"label\":\"Pulses\",\"type\":\"integer\",\"default\":4,\"value\":4,\"min\":0,\"max\":16,\"isMidiControllable\":true},\"rotation\":{\"label\":\"Rotation\",\"type\":\"integer\",\"default\":0,\"value\":0,\"min\":0,\"max\":15,\"isMidiControllable\":true},\"channel_out\":{\"label\":\"Channel\",\"type\":\"integer\",\"default\":1,\"value\":1,\"min\":1,\"max\":16,\"isMidiControllable\":false},\"pitch_out\":{\"label\":\"Pitch\",\"type\":\"integer\",\"default\":60,\"value\":60,\"min\":0,\"max\":127,\"isMidiControllable\":false},\"velocity_out\":{\"label\":\"Velocity\",\"type\":\"integer\",\"default\":100,\"value\":100,\"min\":0,\"max\":127,\"isMidiControllable\":false},\"rate\":{\"label\":\"Rate\",\"type\":\"itemized\",\"default\":0.25,\"value\":0.25,\"model\":[{\"label\":\"1\",\"value\":4},{\"label\":\"1/2\",\"value\":2},{\"label\":\"1/4\",\"value\":1},{\"label\":\"1/8\",\"value\":0.5},{\"label\":\"1/16\",\"value\":0.25},{\"label\":\"1/32\",\"value\":0.125}],\"isMidiControllable\":false},\"is_triplets\":{\"label\":\"Triplets\",\"type\":\"boolean\",\"default\":false,\"value\":false,\"isMidiControllable\":false},\"note_length\":{\"label\":\"Note length\",\"type\":\"itemized\",\"default\":0.25,\"value\":0.25,\"model\":[{\"label\":\"1\",\"value\":4},{\"label\":\"1/2\",\"value\":2},{\"label\":\"1/4\",\"value\":1},{\"label\":\"1/8\",\"value\":0.5},{\"label\":\"1/16\",\"value\":0.25},{\"label\":\"1/32\",\"value\":0.125}],\"isMidiControllable\":false},\"is_mute\":{\"label\":\"Mute\",\"type\":\"boolean\",\"default\":false,\"value\":false,\"isMidiControllable\":true},\"name\":{\"label\":\"Name\",\"type\":\"string\",\"default\":\"Unnamed\",\"value\":\"Unnamed\",\"isMidiControllable\":false},\"position2d\":{\"label\":\"2D position\",\"type\":\"vector2d\",\"default\":{\"x\":0,\"y\":0},\"value\":{\"x\":0,\"y\":0},\"isMidiControllable\":false}}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvY29uZmlnLmpzb24/NmI0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0Isb0RBQW9ELFNBQVMsb0dBQW9HLFdBQVcsbUdBQW1HLGFBQWEscUdBQXFHLGdCQUFnQixxR0FBcUcsY0FBYyxzR0FBc0csaUJBQWlCLDJHQUEyRyxTQUFTLHVFQUF1RSxzQkFBc0IsRUFBRSx3QkFBd0IsRUFBRSx3QkFBd0IsRUFBRSwwQkFBMEIsRUFBRSw0QkFBNEIsRUFBRSw2QkFBNkIsNkJBQTZCLGdCQUFnQiw2RkFBNkYsZ0JBQWdCLDhFQUE4RSxzQkFBc0IsRUFBRSx3QkFBd0IsRUFBRSx3QkFBd0IsRUFBRSwwQkFBMEIsRUFBRSw0QkFBNEIsRUFBRSw2QkFBNkIsNkJBQTZCLFlBQVksd0ZBQXdGLFNBQVMsZ0dBQWdHLGVBQWUsbURBQW1ELFlBQVksVUFBVSxZQUFZIiwiZmlsZSI6IjM1LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XCJuYW1lXCI6XCJFdWNsaWRlYW5cIixcImlucHV0c1wiOjAsXCJvdXRwdXRzXCI6MSxcInBhcmFtc1wiOntcInN0ZXBzXCI6e1wibGFiZWxcIjpcIlN0ZXBzXCIsXCJ0eXBlXCI6XCJpbnRlZ2VyXCIsXCJkZWZhdWx0XCI6MTYsXCJ2YWx1ZVwiOjE2LFwibWluXCI6MSxcIm1heFwiOjY0LFwiaXNNaWRpQ29udHJvbGxhYmxlXCI6dHJ1ZX0sXCJwdWxzZXNcIjp7XCJsYWJlbFwiOlwiUHVsc2VzXCIsXCJ0eXBlXCI6XCJpbnRlZ2VyXCIsXCJkZWZhdWx0XCI6NCxcInZhbHVlXCI6NCxcIm1pblwiOjAsXCJtYXhcIjoxNixcImlzTWlkaUNvbnRyb2xsYWJsZVwiOnRydWV9LFwicm90YXRpb25cIjp7XCJsYWJlbFwiOlwiUm90YXRpb25cIixcInR5cGVcIjpcImludGVnZXJcIixcImRlZmF1bHRcIjowLFwidmFsdWVcIjowLFwibWluXCI6MCxcIm1heFwiOjE1LFwiaXNNaWRpQ29udHJvbGxhYmxlXCI6dHJ1ZX0sXCJjaGFubmVsX291dFwiOntcImxhYmVsXCI6XCJDaGFubmVsXCIsXCJ0eXBlXCI6XCJpbnRlZ2VyXCIsXCJkZWZhdWx0XCI6MSxcInZhbHVlXCI6MSxcIm1pblwiOjEsXCJtYXhcIjoxNixcImlzTWlkaUNvbnRyb2xsYWJsZVwiOmZhbHNlfSxcInBpdGNoX291dFwiOntcImxhYmVsXCI6XCJQaXRjaFwiLFwidHlwZVwiOlwiaW50ZWdlclwiLFwiZGVmYXVsdFwiOjYwLFwidmFsdWVcIjo2MCxcIm1pblwiOjAsXCJtYXhcIjoxMjcsXCJpc01pZGlDb250cm9sbGFibGVcIjpmYWxzZX0sXCJ2ZWxvY2l0eV9vdXRcIjp7XCJsYWJlbFwiOlwiVmVsb2NpdHlcIixcInR5cGVcIjpcImludGVnZXJcIixcImRlZmF1bHRcIjoxMDAsXCJ2YWx1ZVwiOjEwMCxcIm1pblwiOjAsXCJtYXhcIjoxMjcsXCJpc01pZGlDb250cm9sbGFibGVcIjpmYWxzZX0sXCJyYXRlXCI6e1wibGFiZWxcIjpcIlJhdGVcIixcInR5cGVcIjpcIml0ZW1pemVkXCIsXCJkZWZhdWx0XCI6MC4yNSxcInZhbHVlXCI6MC4yNSxcIm1vZGVsXCI6W3tcImxhYmVsXCI6XCIxXCIsXCJ2YWx1ZVwiOjR9LHtcImxhYmVsXCI6XCIxLzJcIixcInZhbHVlXCI6Mn0se1wibGFiZWxcIjpcIjEvNFwiLFwidmFsdWVcIjoxfSx7XCJsYWJlbFwiOlwiMS84XCIsXCJ2YWx1ZVwiOjAuNX0se1wibGFiZWxcIjpcIjEvMTZcIixcInZhbHVlXCI6MC4yNX0se1wibGFiZWxcIjpcIjEvMzJcIixcInZhbHVlXCI6MC4xMjV9XSxcImlzTWlkaUNvbnRyb2xsYWJsZVwiOmZhbHNlfSxcImlzX3RyaXBsZXRzXCI6e1wibGFiZWxcIjpcIlRyaXBsZXRzXCIsXCJ0eXBlXCI6XCJib29sZWFuXCIsXCJkZWZhdWx0XCI6ZmFsc2UsXCJ2YWx1ZVwiOmZhbHNlLFwiaXNNaWRpQ29udHJvbGxhYmxlXCI6ZmFsc2V9LFwibm90ZV9sZW5ndGhcIjp7XCJsYWJlbFwiOlwiTm90ZSBsZW5ndGhcIixcInR5cGVcIjpcIml0ZW1pemVkXCIsXCJkZWZhdWx0XCI6MC4yNSxcInZhbHVlXCI6MC4yNSxcIm1vZGVsXCI6W3tcImxhYmVsXCI6XCIxXCIsXCJ2YWx1ZVwiOjR9LHtcImxhYmVsXCI6XCIxLzJcIixcInZhbHVlXCI6Mn0se1wibGFiZWxcIjpcIjEvNFwiLFwidmFsdWVcIjoxfSx7XCJsYWJlbFwiOlwiMS84XCIsXCJ2YWx1ZVwiOjAuNX0se1wibGFiZWxcIjpcIjEvMTZcIixcInZhbHVlXCI6MC4yNX0se1wibGFiZWxcIjpcIjEvMzJcIixcInZhbHVlXCI6MC4xMjV9XSxcImlzTWlkaUNvbnRyb2xsYWJsZVwiOmZhbHNlfSxcImlzX211dGVcIjp7XCJsYWJlbFwiOlwiTXV0ZVwiLFwidHlwZVwiOlwiYm9vbGVhblwiLFwiZGVmYXVsdFwiOmZhbHNlLFwidmFsdWVcIjpmYWxzZSxcImlzTWlkaUNvbnRyb2xsYWJsZVwiOnRydWV9LFwibmFtZVwiOntcImxhYmVsXCI6XCJOYW1lXCIsXCJ0eXBlXCI6XCJzdHJpbmdcIixcImRlZmF1bHRcIjpcIlVubmFtZWRcIixcInZhbHVlXCI6XCJVbm5hbWVkXCIsXCJpc01pZGlDb250cm9sbGFibGVcIjpmYWxzZX0sXCJwb3NpdGlvbjJkXCI6e1wibGFiZWxcIjpcIjJEIHBvc2l0aW9uXCIsXCJ0eXBlXCI6XCJ2ZWN0b3IyZFwiLFwiZGVmYXVsdFwiOntcInhcIjowLFwieVwiOjB9LFwidmFsdWVcIjp7XCJ4XCI6MCxcInlcIjowfSxcImlzTWlkaUNvbnRyb2xsYWJsZVwiOmZhbHNlfX19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvanNvbi1sb2FkZXIhLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvY29uZmlnLmpzb25cbi8vIG1vZHVsZSBpZCA9IDM1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, exports) {

eval("module.exports = {\"info\":{\"name\":\"\",\"version\":\"0.0.0\"},\"params\":{}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9leGFtcGxlL2NvbmZpZy5qc29uPzE2ZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLFFBQVEsNEJBQTRCIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XCJpbmZvXCI6e1wibmFtZVwiOlwiXCIsXCJ2ZXJzaW9uXCI6XCIwLjAuMFwifSxcInBhcmFtc1wiOnt9fVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2pzb24tbG9hZGVyIS4vc3JjL2pzL3doL3Byb2Nlc3NvcnMvZXhhbXBsZS9jb25maWcuanNvblxuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

eval("module.exports = {\"name\":\"Output\",\"inputs\":1,\"outputs\":0,\"params\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"default\":\"Unnamed\",\"value\":\"Unnamed\",\"isMidiControllable\":false},\"position2d\":{\"label\":\"2D position\",\"type\":\"vector2d\",\"default\":{\"x\":0,\"y\":0},\"value\":{\"x\":0,\"y\":0},\"isMidiControllable\":false}}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9vdXRwdXQvY29uZmlnLmpzb24/N2FjNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsaURBQWlELFFBQVEsZ0dBQWdHLGVBQWUsbURBQW1ELFlBQVksVUFBVSxZQUFZIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XCJuYW1lXCI6XCJPdXRwdXRcIixcImlucHV0c1wiOjEsXCJvdXRwdXRzXCI6MCxcInBhcmFtc1wiOntcIm5hbWVcIjp7XCJsYWJlbFwiOlwiTmFtZVwiLFwidHlwZVwiOlwic3RyaW5nXCIsXCJkZWZhdWx0XCI6XCJVbm5hbWVkXCIsXCJ2YWx1ZVwiOlwiVW5uYW1lZFwiLFwiaXNNaWRpQ29udHJvbGxhYmxlXCI6ZmFsc2V9LFwicG9zaXRpb24yZFwiOntcImxhYmVsXCI6XCIyRCBwb3NpdGlvblwiLFwidHlwZVwiOlwidmVjdG9yMmRcIixcImRlZmF1bHRcIjp7XCJ4XCI6MCxcInlcIjowfSxcInZhbHVlXCI6e1wieFwiOjAsXCJ5XCI6MH0sXCJpc01pZGlDb250cm9sbGFibGVcIjpmYWxzZX19fVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2pzb24tbG9hZGVyIS4vc3JjL2pzL3doL3Byb2Nlc3NvcnMvb3V0cHV0L2NvbmZpZy5qc29uXG4vLyBtb2R1bGUgaWQgPSAzN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createReducers;\n\nfunction createReducers() {\n\n    const initialState = {\n            bpm: 120,\n            processors: [],\n            selectedID: null,\n            preferences: {\n                isDarkTheme: false\n            },\n            remote: {},\n            isPlaying: false,\n            inputs: [],\n            outputs: []\n        },\n        \n        reduce = function(state = initialState, action = {}, actions) {\n            let newState;\n            switch(action.type) {\n\n                case actions.SET_PREFERENCES:\n                    newState = Object.assign({}, state);\n                    newState.preferences.isDarkTheme = action.data ? action.data.isDarkTheme : false;\n                    return newState;\n\n                case actions.SET_PROJECT:\n                    return Object.assign({}, state, {\n                        bpm: action.data.bpm || initialState.bpm,\n                        network: action.data.network || initialState.network,\n                        remote: action.data.remote || initialState.remote\n                    });\n\n                case actions.SET_THEME:\n                    return Object.assign({}, state, {\n                        preferences: {\n                            isDarkTheme: action.data || false\n                        }\n                    });\n\n                case actions.ADD_PROCESSOR:\n                    newState = Object.assign({}, state);\n                    const numInputProcessors = newState.processors.filter(item => item.type === 'input').length;\n                    // array index depends on processor type\n                    switch (action.data.type) {\n                        case 'input':\n                            newState.processors.unshift(action.data);\n                            numInputProcessors++;\n                            break;\n                        case 'output':\n                            newState.processors.push(action.data);\n                            break;\n                        default:\n                            newState.processors.splice(numInputProcessors, 0, action.data);\n                    }\n                    return newState;\n                \n                case actions.DELETE_PROCESSOR:\n                    return Object.assign({}, state, {\n                        processors: state.processors.filter(processor => processor.id !== action.id)\n                    });\n                \n                case actions.SELECT_PROCESSOR:\n                    return Object.assign({}, state, {\n                        selectedID: action.id\n                    });\n                \n                case actions.DRAG_SELECTED_PROCESSOR:\n                    newState = Object.assign({}, state);\n                    newState.processors.forEach(processor => {\n                        if (processor.id === newState.selectedID) {\n                            processor.params.position2d.value.x = action.x;\n                            processor.params.position2d.value.y = action.y;\n                        }\n                    });\n                    return newState;\n\n                case actions.DRAG_ALL_PROCESSORS:\n                    newState = Object.assign({}, state);\n                    newState.processors.forEach(processor => {\n                        processor.params.position2d.value.x += action.x;\n                        processor.params.position2d.value.y += action.y;\n                    });\n                    return newState;\n                \n                case actions.CHANGE_PARAMETER:\n                    newState = Object.assign({}, state);\n                    newState.processors.forEach(processor => {\n                        if (processor.id === action.processorID) {\n                            const param = processor.params[action.paramKey];\n                            switch (param.type) {\n                                case 'integer':\n                                    param.value = Math.max(param.min, Math.min(action.paramValue, param.max));\n                                    break;\n                                case 'boolean':\n                                    param.value = !!action.paramValue;\n                                    break;\n                                case 'itemized':\n                                    param.value = action.paramValue;\n                                    break;\n                                case 'string':\n                                    param.value = action.paramValue;\n                                    break;\n                            }\n                        }\n                    });\n                    return newState;\n                \n                case actions.RECREATE_PARAMETER:\n                    newState = Object.assign({}, state);\n                    newState.processors.forEach(processor => {\n                        if (processor.id === action.processorID) {\n                            processor.params[action.paramKey] = Object.assign(\n                                processor.params[action.paramKey],\n                                action.paramObj);\n                        }\n                    });\n                    return newState;\n                \n                case actions.TOGGLE_PLAY:\n                    return Object.assign({}, state, { isPlaying: !state.isPlaying });\n                \n                case actions.SET_TEMPO:\n                    return Object.assign({}, state, { bpm: action.value });\n                \n                case actions.ADD_MIDI_PORT:\n                    newState = Object.assign({}, state);\n                    let portObj = { \n                        id: action.id, \n                        name: action.name,\n                        networkEnabled: false,\n                        syncEnabled: false,\n                        remoteEnabled: false\n                    };\n                    if (action.isInput) {\n                        newState.inputs = [ ...state.inputs, portObj ]\n                        newState.inputs.sort((a, b) => {\n                            if (a.name < b.name) { return -1 }\n                            if (a.name > b.name) { return 1 }\n                            return 0;\n                        });\n                    } else {\n                        newState.outputs = [ ...state.outputs, portObj ]\n                        newState.outputs.sort((a, b) => {\n                            if (a.name < b.name) { return -1 }\n                            if (a.name > b.name) { return 1 }\n                            return 0;\n                        });\n                    }\n                    return newState;\n                \n                case actions.REMOVE_MIDI_PORT:\n                    newState = Object.assign({}, state);\n                    if (action.isInput) {\n                        newState.inputs = newState.inputs.filter(input => input.id !== action.id);\n                    } else {\n                        newState.outputs = newState.outputs.filter(output => output.id !== action.id);\n                    }\n                    return newState;\n                \n                case actions.TOGGLE_MIDI_PREFERENCE:\n                    newState = toggleMIDIPreference(state, action.id, action.isInput, action.preferenceName);\n                    return newState;\n\n                default:\n                    return state;\n            }\n        };\n    \n    return {\n        reduce: reduce\n    }\n}\n\nfunction toggleMIDIPreference(state, id, isInput, preferenceName) {\n    const newState = Object.assign({}, state);\n    if (isInput) {\n        newState.inputs = newState.inputs.map((item, index) => {\n            if (item.id === id) {\n                item = Object.assign({}, item);\n                item[preferenceName] = !item[preferenceName];\n            }\n            return item;\n        });\n    } else {\n        newState.outputs = newState.outputs.map((item, index) => {\n            if (item.id === id) {\n                item = Object.assign({}, item);\n                item[preferenceName] = !item[preferenceName];\n            }\n            return item;\n        });\n    }\n    return newState;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvc3RhdGUvcmVkdWNlcnMuanM/ZmQzZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVCwyREFBMkQ7QUFDM0Q7QUFDQTs7QUFFQTtBQUNBLCtDQUErQztBQUMvQztBQUNBOztBQUVBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjs7QUFFckI7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLDJDQUEyQztBQUMzQztBQUNBLHFCQUFxQjs7QUFFckI7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBLDJDQUEyQyxVQUFVLDhCQUE4Qjs7QUFFbkY7QUFDQSwyQ0FBMkMsVUFBVSxvQkFBb0I7O0FBRXpFO0FBQ0EsK0NBQStDO0FBQy9DLG1DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xELGtEQUFrRDtBQUNsRDtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRCxrREFBa0Q7QUFDbEQ7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTs7QUFFQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVSZWR1Y2VycygpIHtcblxuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgICAgICAgIGJwbTogMTIwLFxuICAgICAgICAgICAgcHJvY2Vzc29yczogW10sXG4gICAgICAgICAgICBzZWxlY3RlZElEOiBudWxsLFxuICAgICAgICAgICAgcHJlZmVyZW5jZXM6IHtcbiAgICAgICAgICAgICAgICBpc0RhcmtUaGVtZTogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW1vdGU6IHt9LFxuICAgICAgICAgICAgaXNQbGF5aW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGlucHV0czogW10sXG4gICAgICAgICAgICBvdXRwdXRzOiBbXVxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgcmVkdWNlID0gZnVuY3Rpb24oc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbiA9IHt9LCBhY3Rpb25zKSB7XG4gICAgICAgICAgICBsZXQgbmV3U3RhdGU7XG4gICAgICAgICAgICBzd2l0Y2goYWN0aW9uLnR5cGUpIHtcblxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5TRVRfUFJFRkVSRU5DRVM6XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZS5wcmVmZXJlbmNlcy5pc0RhcmtUaGVtZSA9IGFjdGlvbi5kYXRhID8gYWN0aW9uLmRhdGEuaXNEYXJrVGhlbWUgOiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld1N0YXRlO1xuXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLlNFVF9QUk9KRUNUOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJwbTogYWN0aW9uLmRhdGEuYnBtIHx8IGluaXRpYWxTdGF0ZS5icG0sXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXR3b3JrOiBhY3Rpb24uZGF0YS5uZXR3b3JrIHx8IGluaXRpYWxTdGF0ZS5uZXR3b3JrLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlOiBhY3Rpb24uZGF0YS5yZW1vdGUgfHwgaW5pdGlhbFN0YXRlLnJlbW90ZVxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5TRVRfVEhFTUU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlZmVyZW5jZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0RhcmtUaGVtZTogYWN0aW9uLmRhdGEgfHwgZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIGFjdGlvbnMuQUREX1BST0NFU1NPUjpcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG51bUlucHV0UHJvY2Vzc29ycyA9IG5ld1N0YXRlLnByb2Nlc3NvcnMuZmlsdGVyKGl0ZW0gPT4gaXRlbS50eXBlID09PSAnaW5wdXQnKS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIC8vIGFycmF5IGluZGV4IGRlcGVuZHMgb24gcHJvY2Vzc29yIHR5cGVcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChhY3Rpb24uZGF0YS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdpbnB1dCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUucHJvY2Vzc29ycy51bnNoaWZ0KGFjdGlvbi5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1JbnB1dFByb2Nlc3NvcnMrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ291dHB1dCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUucHJvY2Vzc29ycy5wdXNoKGFjdGlvbi5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUucHJvY2Vzc29ycy5zcGxpY2UobnVtSW5wdXRQcm9jZXNzb3JzLCAwLCBhY3Rpb24uZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld1N0YXRlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5ERUxFVEVfUFJPQ0VTU09SOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NvcnM6IHN0YXRlLnByb2Nlc3NvcnMuZmlsdGVyKHByb2Nlc3NvciA9PiBwcm9jZXNzb3IuaWQgIT09IGFjdGlvbi5pZClcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLlNFTEVDVF9QUk9DRVNTT1I6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJRDogYWN0aW9uLmlkXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5EUkFHX1NFTEVDVEVEX1BST0NFU1NPUjpcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlLnByb2Nlc3NvcnMuZm9yRWFjaChwcm9jZXNzb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3Nvci5pZCA9PT0gbmV3U3RhdGUuc2VsZWN0ZWRJRCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3Nvci5wYXJhbXMucG9zaXRpb24yZC52YWx1ZS54ID0gYWN0aW9uLng7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc29yLnBhcmFtcy5wb3NpdGlvbjJkLnZhbHVlLnkgPSBhY3Rpb24ueTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZTtcblxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5EUkFHX0FMTF9QUk9DRVNTT1JTOlxuICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUucHJvY2Vzc29ycy5mb3JFYWNoKHByb2Nlc3NvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzb3IucGFyYW1zLnBvc2l0aW9uMmQudmFsdWUueCArPSBhY3Rpb24ueDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3Nvci5wYXJhbXMucG9zaXRpb24yZC52YWx1ZS55ICs9IGFjdGlvbi55O1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld1N0YXRlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5DSEFOR0VfUEFSQU1FVEVSOlxuICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUucHJvY2Vzc29ycy5mb3JFYWNoKHByb2Nlc3NvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc29yLmlkID09PSBhY3Rpb24ucHJvY2Vzc29ySUQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJhbSA9IHByb2Nlc3Nvci5wYXJhbXNbYWN0aW9uLnBhcmFtS2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHBhcmFtLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaW50ZWdlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbS52YWx1ZSA9IE1hdGgubWF4KHBhcmFtLm1pbiwgTWF0aC5taW4oYWN0aW9uLnBhcmFtVmFsdWUsIHBhcmFtLm1heCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW0udmFsdWUgPSAhIWFjdGlvbi5wYXJhbVZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2l0ZW1pemVkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtLnZhbHVlID0gYWN0aW9uLnBhcmFtVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtLnZhbHVlID0gYWN0aW9uLnBhcmFtVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3U3RhdGU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLlJFQ1JFQVRFX1BBUkFNRVRFUjpcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlLnByb2Nlc3NvcnMuZm9yRWFjaChwcm9jZXNzb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3Nvci5pZCA9PT0gYWN0aW9uLnByb2Nlc3NvcklEKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc29yLnBhcmFtc1thY3Rpb24ucGFyYW1LZXldID0gT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc29yLnBhcmFtc1thY3Rpb24ucGFyYW1LZXldLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb24ucGFyYW1PYmopO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld1N0YXRlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNhc2UgYWN0aW9ucy5UT0dHTEVfUExBWTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7IGlzUGxheWluZzogIXN0YXRlLmlzUGxheWluZyB9KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjYXNlIGFjdGlvbnMuU0VUX1RFTVBPOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHsgYnBtOiBhY3Rpb24udmFsdWUgfSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLkFERF9NSURJX1BPUlQ6XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgcG9ydE9iaiA9IHsgXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogYWN0aW9uLmlkLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGFjdGlvbi5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV0d29ya0VuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3luY0VuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlRW5hYmxlZDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGlvbi5pc0lucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZS5pbnB1dHMgPSBbIC4uLnN0YXRlLmlucHV0cywgcG9ydE9iaiBdXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZS5pbnB1dHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhLm5hbWUgPCBiLm5hbWUpIHsgcmV0dXJuIC0xIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYS5uYW1lID4gYi5uYW1lKSB7IHJldHVybiAxIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUub3V0cHV0cyA9IFsgLi4uc3RhdGUub3V0cHV0cywgcG9ydE9iaiBdXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZS5vdXRwdXRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYS5uYW1lIDwgYi5uYW1lKSB7IHJldHVybiAtMSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGEubmFtZSA+IGIubmFtZSkgeyByZXR1cm4gMSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3U3RhdGU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLlJFTU9WRV9NSURJX1BPUlQ6XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uLmlzSW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlLmlucHV0cyA9IG5ld1N0YXRlLmlucHV0cy5maWx0ZXIoaW5wdXQgPT4gaW5wdXQuaWQgIT09IGFjdGlvbi5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZS5vdXRwdXRzID0gbmV3U3RhdGUub3V0cHV0cy5maWx0ZXIob3V0cHV0ID0+IG91dHB1dC5pZCAhPT0gYWN0aW9uLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3U3RhdGU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2FzZSBhY3Rpb25zLlRPR0dMRV9NSURJX1BSRUZFUkVOQ0U6XG4gICAgICAgICAgICAgICAgICAgIG5ld1N0YXRlID0gdG9nZ2xlTUlESVByZWZlcmVuY2Uoc3RhdGUsIGFjdGlvbi5pZCwgYWN0aW9uLmlzSW5wdXQsIGFjdGlvbi5wcmVmZXJlbmNlTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZTtcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgICByZWR1Y2U6IHJlZHVjZVxuICAgIH1cbn1cblxuZnVuY3Rpb24gdG9nZ2xlTUlESVByZWZlcmVuY2Uoc3RhdGUsIGlkLCBpc0lucHV0LCBwcmVmZXJlbmNlTmFtZSkge1xuICAgIGNvbnN0IG5ld1N0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpO1xuICAgIGlmIChpc0lucHV0KSB7XG4gICAgICAgIG5ld1N0YXRlLmlucHV0cyA9IG5ld1N0YXRlLmlucHV0cy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAoaXRlbS5pZCA9PT0gaWQpIHtcbiAgICAgICAgICAgICAgICBpdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSk7XG4gICAgICAgICAgICAgICAgaXRlbVtwcmVmZXJlbmNlTmFtZV0gPSAhaXRlbVtwcmVmZXJlbmNlTmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbmV3U3RhdGUub3V0cHV0cyA9IG5ld1N0YXRlLm91dHB1dHMubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0uaWQgPT09IGlkKSB7XG4gICAgICAgICAgICAgICAgaXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pO1xuICAgICAgICAgICAgICAgIGl0ZW1bcHJlZmVyZW5jZU5hbWVdID0gIWl0ZW1bcHJlZmVyZW5jZU5hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3U3RhdGU7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvc3RhdGUvcmVkdWNlcnMuanNcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createStore;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__selectors__ = __webpack_require__(0);\n\n\nfunction createStore(specs = {}, my = {}) {\n    const STATE_CHANGE = 'STATE_CHANGE';\n\n    let that = {},\n        actions = specs.actions,\n        reducers = specs.reducers,\n        currentState,\n        \n        dispatch = (action) => {\n            // thunk or not\n            if (typeof action === 'function') {\n                action(dispatch, getState, getActions);\n            } else {\n                currentState = reducers.reduce(currentState, action, actions);\n                Object(__WEBPACK_IMPORTED_MODULE_0__selectors__[\"c\" /* memoize */])(currentState, action, actions);\n                document.dispatchEvent(new CustomEvent(STATE_CHANGE, { detail: {\n                    state: currentState,\n                    action: action,\n                    actions: actions\n                }}));\n            }\n        }, \n        \n        getActions = () => {\n            return actions;\n        },\n        \n        getState = () => {\n            return currentState;\n        };\n\n    that = specs.that || {};\n    \n    that.STATE_CHANGE = STATE_CHANGE;\n    that.dispatch = dispatch;\n    that.getActions = getActions;\n    that.getState = getState;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvc3RhdGUvc3RvcmUuanM/ZDhjZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFrQjs7QUFFbEIsK0JBQThDLFNBQVM7QUFDdkQ7O0FBRUEsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0Esc0VBQXNFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW9pemUgfSBmcm9tICcuL3NlbGVjdG9ycyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JlKHNwZWNzID0ge30sIG15ID0ge30pIHtcbiAgICBjb25zdCBTVEFURV9DSEFOR0UgPSAnU1RBVEVfQ0hBTkdFJztcblxuICAgIGxldCB0aGF0ID0ge30sXG4gICAgICAgIGFjdGlvbnMgPSBzcGVjcy5hY3Rpb25zLFxuICAgICAgICByZWR1Y2VycyA9IHNwZWNzLnJlZHVjZXJzLFxuICAgICAgICBjdXJyZW50U3RhdGUsXG4gICAgICAgIFxuICAgICAgICBkaXNwYXRjaCA9IChhY3Rpb24pID0+IHtcbiAgICAgICAgICAgIC8vIHRodW5rIG9yIG5vdFxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBhY3Rpb24oZGlzcGF0Y2gsIGdldFN0YXRlLCBnZXRBY3Rpb25zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFN0YXRlID0gcmVkdWNlcnMucmVkdWNlKGN1cnJlbnRTdGF0ZSwgYWN0aW9uLCBhY3Rpb25zKTtcbiAgICAgICAgICAgICAgICBtZW1vaXplKGN1cnJlbnRTdGF0ZSwgYWN0aW9uLCBhY3Rpb25zKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChTVEFURV9DSEFOR0UsIHsgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlOiBjdXJyZW50U3RhdGUsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25zOiBhY3Rpb25zXG4gICAgICAgICAgICAgICAgfX0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgXG4gICAgICAgIFxuICAgICAgICBnZXRBY3Rpb25zID0gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGFjdGlvbnM7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBnZXRTdGF0ZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50U3RhdGU7XG4gICAgICAgIH07XG5cbiAgICB0aGF0ID0gc3BlY3MudGhhdCB8fCB7fTtcbiAgICBcbiAgICB0aGF0LlNUQVRFX0NIQU5HRSA9IFNUQVRFX0NIQU5HRTtcbiAgICB0aGF0LmRpc3BhdGNoID0gZGlzcGF0Y2g7XG4gICAgdGhhdC5nZXRBY3Rpb25zID0gZ2V0QWN0aW9ucztcbiAgICB0aGF0LmdldFN0YXRlID0gZ2V0U3RhdGU7XG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC9zdGF0ZS9zdG9yZS5qc1xuLy8gbW9kdWxlIGlkID0gMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createAppView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__settings__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__windowresize__ = __webpack_require__(7);\n\n\n\n/**\n * Main application view.\n */\nfunction createAppView(specs, my) {\n    var that,\n        store = specs.store,\n        app = specs.app,\n        rootEl = document.querySelector('#app'),\n        panelsEl = document.querySelector('.panels'),\n        helpEl = document.querySelector('.help'),\n        prefsEl = document.querySelector('.prefs'),\n        editEl = document.querySelector('.edit'),\n        editContentEl = document.querySelector('.edit .panel__content'),\n        remoteEl = document.querySelector('.remote'),\n        settingsViews = [],\n        panelHeaderHeight,\n        controls = {\n            play: {\n                type: 'checkbox',\n                input: document.getElementById('play-check')\n            },\n            bpm: {\n                type: 'number',\n                input: document.getElementById('bpm-number')\n            },\n            remote: {\n                type: 'checkbox',\n                input: document.getElementById('learn-check')\n            },\n            prefs: {\n                type: 'checkbox',\n                input: document.getElementById('prefs-check')\n            },\n            edit: {\n                type: 'checkbox',\n                input: document.getElementById('edit-check')\n            },\n            connections: {\n                type: 'checkbox',\n                input: document.getElementById('connections-check')\n            },\n            help: {\n                type: 'checkbox',\n                input: document.getElementById('help-check')\n            }\n        },\n        \n        init = function() {\n            controls.play.input.addEventListener('change', function(e) {\n                store.dispatch(store.getActions().togglePlay());\n            });\n            controls.bpm.input.addEventListener('change', function(e) {\n                store.dispatch(store.getActions().setTempo(controls.bpm.input.value));\n            });\n            controls.remote.input.addEventListener('change', function(e) {\n                app.updateApp('remote', e.target.checked);\n                app.togglePanel('remote', e.target.checked);\n            });\n            controls.prefs.input.addEventListener('change', function(e) {\n                app.togglePanel('preferences', e.target.checked);\n            });\n            controls.edit.input.addEventListener('change', function(e) {\n                app.togglePanel('settings', e.target.checked);\n            });\n            controls.connections.input.addEventListener('change', function(e) {\n                app.updateApp('connections', e.target.checked);\n            });\n            controls.help.input.addEventListener('change', function(e) {\n                app.togglePanel('help', e.target.checked);\n            });\n            \n            document.addEventListener('keyup', function(e) {\n                switch (e.keyCode) {\n                    case 32:\n                        // don't toggle play while typing space key in a text field.\n                        if (!(e.target.tagName.toLowerCase() == 'input' && e.target.getAttribute('type') == 'text')) {\n                            store.dispatch(store.getActions().togglePlay());\n                        }\n                        break;\n                }\n            });\n\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.SET_PREFERENCES:\n                    case e.detail.actions.SET_THEME:\n                        rootEl.dataset.theme = 'dev'; // e.detail.state.preferences.isDarkTheme ? 'dark' : '';\n                        break;\n                    \n                    case e.detail.actions.ADD_PROCESSOR:\n                        createSettingsViews(e.detail.state.processors);\n                        break;\n                    \n                    case e.detail.actions.DELETE_PROCESSOR:\n                        deleteSettingsView(e.detail.action.id);\n                        break;\n\n                    case e.detail.actions.SELECT_PROCESSOR:\n                        showPanel('settings', true);\n                        break;\n\n                    case e.detail.actions.TOGGLE_PLAY:\n                        controls.play.input.checked = e.detail.state.isPlaying;\n                        break;\n\n                    case e.detail.actions.SET_TEMPO:\n                        controls.bpm.input.value = e.detail.state.bpm;\n                        break;\n                }\n            });\n            \n            // get panel header height from CSS.\n            var style = getComputedStyle(document.body);\n            panelHeaderHeight = parseInt(style.getPropertyValue('--header-height'), 10);\n            \n            my.addWindowResizeCallback(renderLayout);\n            renderLayout();\n        },\n\n        /**\n         * Create settings controls view for a processor.\n         * @param  {Object} processor MIDI processor to control with the settings.\n         */\n        createSettingsViews = function(state) {\n            state.forEach((data, i) => {\n                if (!settingsViews[i] || (data.id !== settingsViews[i].getID())) {\n                    try {\n                        const template = __webpack_require__(47)(`./${data.type}/settings.html`);\n                        settingsViews.splice(i, 0, Object(__WEBPACK_IMPORTED_MODULE_0__settings__[\"a\" /* default */])({\n                            data: data,\n                            store: store,\n                            parentEl: editContentEl,\n                            template: template\n                        }));\n                    } catch(err) {}\n                }\n            });\n        },\n\n        // createSettingsView = function(processor) {\n        //     var settingsView = createSettingsView({\n        //         midiNetwork: midiNetwork,\n        //         processor: processor,\n        //         parentEl: editContentEl\n        //     });\n        //     settingsViews.push(settingsView);\n        // },\n        \n        /**\n         * Delete settings controls view for a processor.\n         * @param  {String} id MIDI processor ID.\n         */\n        deleteSettingsView = function(id) {\n            var n = settingsViews.length;\n            while (--n >= 0) {\n                if (settingsViews[n].getID() === id) {\n                    settingsViews[n].terminate();\n                    settingsViews.splice(n, 1);\n                    return false;\n                }\n            }\n        },\n        \n        renderLayout = function(leftColumn = true, rightColumn = true) {\n            if (leftColumn) {\n                renderColumnLayout(prefsEl, remoteEl, false);\n            }\n            if (rightColumn) {\n                renderColumnLayout(helpEl, editEl, true);\n            }\n        },\n        \n        renderColumnLayout = function(topEl, btmEl, isRightColumn) {\n            const totalHeight = panelsEl.clientHeight,\n                columnWidth = document.querySelector('.panels__right').clientWidth,\n                topWidth = topEl.clientWidth,\n                btmWidth = btmEl.clientWidth,\n                isTopVisible = topEl.dataset.show == 'true',\n                isBtmVisible = btmEl.dataset.show == 'true',\n                topViewportEl = topEl.querySelector('.panel__viewport'),\n                btmViewportEl = btmEl.querySelector('.panel__viewport');\n            \n            let topHeight, btmHeight, topContentHeight, btmContentHeight;\n            \n            // reset heights before measuring them\n            topViewportEl.style.height = 'auto';\n            btmViewportEl.style.height = 'auto';\n            \n            topHeight = topEl.clientHeight,\n            btmHeight = btmEl.clientHeight,\n            topContentHeight = topEl.querySelector('.panel__content').clientHeight,\n            btmContentHeight = btmEl.querySelector('.panel__content').clientHeight;\n            \n            if (isRightColumn && (topWidth + btmWidth < columnWidth)) {\n                if (topContentHeight + panelHeaderHeight > totalHeight) {\n                    topViewportEl.style.height = totalHeight - panelHeaderHeight + 'px';\n                } else {\n                    topViewportEl.style.height = 'auto';\n                }\n                if (btmContentHeight + panelHeaderHeight > totalHeight) {\n                    btmViewportEl.style.height = totalHeight - panelHeaderHeight + 'px';\n                } else {\n                    btmViewportEl.style.height = 'auto';\n                }\n            } else {\n                if (isTopVisible && isBtmVisible) {\n                    let combinedHeight = topContentHeight + btmContentHeight + (panelHeaderHeight * 2);\n                    if (combinedHeight > totalHeight) {\n                        if (topContentHeight + panelHeaderHeight < totalHeight / 2) {\n                            topViewportEl.style.height = prefsEl.topContentHeight + 'px';\n                            btmViewportEl.style.height = (totalHeight - topContentHeight - (panelHeaderHeight * 2)) + 'px';\n                        } else if (btmContentHeight + panelHeaderHeight < totalHeight / 2) {\n                            topViewportEl.style.height = (totalHeight - btmContentHeight - (panelHeaderHeight * 2)) + 'px';\n                            btmViewportEl.style.height = remoteEl.topContentHeight + 'px';\n                        } else {\n                            topViewportEl.style.height = ((totalHeight / 2) - panelHeaderHeight) + 'px';\n                            btmViewportEl.style.height = ((totalHeight / 2) - panelHeaderHeight) + 'px';\n                        }\n                    } else {\n                        topViewportEl.style.height = 'auto';\n                        btmViewportEl.style.height = 'auto';\n                    }\n                } else if (isTopVisible) {\n                    if (topContentHeight + panelHeaderHeight > totalHeight) {\n                        topViewportEl.style.height = totalHeight - panelHeaderHeight + 'px';\n                    } else {\n                        topViewportEl.style.height = 'auto';\n                    }\n                } else if (isBtmVisible) {\n                    if (btmContentHeight + panelHeaderHeight > totalHeight) {\n                        btmViewportEl.style.height = totalHeight - panelHeaderHeight + 'px';\n                    } else {\n                        btmViewportEl.style.height = 'auto';\n                    }\n                }\n            }\n        },\n        \n        updateControl = function(property, value) {\n            switch(property) {\n                case 'bpm':\n                    controls.bpm.input.value = value;\n                    break;\n                case 'play':\n                    controls.play.input.checked = value;\n                    break;\n                case 'remote':\n                    controls.remote.input.checked = value;\n                    break;\n                case 'settings':\n                    controls.edit.input.checked = value;\n                    break;\n                case 'connections':\n                    controls.connections.input.checked = value;\n                    break;\n                default:\n                    console.error('Unknown updateControl property:', property);\n            }\n        },\n        \n        showPanel = function(panelID, isVisible) {\n            switch (panelID) {\n                case 'help':\n                    helpEl.dataset.show = isVisible;\n                    break;\n                case 'preferences':\n                    prefsEl.dataset.show = isVisible;\n                    break;\n                case 'remote':\n                    remoteEl.dataset.show = isVisible;\n                    break;\n                case 'settings':\n                    editEl.dataset.show = isVisible;\n                    break;\n                default:\n                    console.error('Panel ID ', panelID, 'not found.');\n                    return;\n            }\n            \n            renderLayout();\n        };\n    \n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_1__windowresize__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    that.renderLayout = renderLayout;\n    // that.createSettingsView = createSettingsView;\n    that.deleteSettingsView = deleteSettingsView;\n    that.updateControl = updateControl;\n    that.showPanel = showPanel;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createSettingsPanel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__setting_boolean__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setting_integer__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__setting_itemized__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__setting_string__ = __webpack_require__(46);\n\n\n\n\n\n/**\n * Processor settings view.\n */\nfunction createSettingsPanel(specs, my) {\n    var that,\n        store = specs.store,\n        data = specs.data,\n        parentEl = specs.parentEl,\n        // midiNetwork = specs.midiNetwork,\n        // processor = specs.processor,\n        settingViews = [],\n        el,\n        \n        initialize = function() {\n            // const htmlString = require(`html-loader!../processors/${data.type}/settings.html`);\n            el = document.createElement('div');\n            el.innerHTML = specs.template;\n            \n            // loop through all processor parameters and add setting view if required\n            for (var key in data.params) {\n                if (data.params.hasOwnProperty(key)) {\n                    \n                    // only create setting if there's a container el for it in the settings panel\n                    var settingContainerEl = el.querySelector('.' + key);\n                    if (settingContainerEl) {\n                        let paramData = data.params[key],\n                            settingView,\n                            settingViewSpecs = {\n                                store: store,\n                                key: key,\n                                data: paramData,\n                                parentEl: settingContainerEl,\n                                processorID: data.id\n                            };\n                        \n                        // create the setting view based on the parameter type\n                        switch (paramData.type) {\n                            case 'integer':\n                                settingView = Object(__WEBPACK_IMPORTED_MODULE_1__setting_integer__[\"a\" /* default */])(settingViewSpecs);\n                                break;\n                            case 'boolean':\n                                settingView = Object(__WEBPACK_IMPORTED_MODULE_0__setting_boolean__[\"a\" /* default */])(settingViewSpecs);\n                                break;\n                            case 'itemized':\n                                settingView = Object(__WEBPACK_IMPORTED_MODULE_2__setting_itemized__[\"a\" /* default */])(settingViewSpecs);\n                                break;\n                            case 'string':\n                                settingView = Object(__WEBPACK_IMPORTED_MODULE_3__setting_string__[\"a\" /* default */])(settingViewSpecs);\n                                break;\n                        }\n                    }\n                }\n            }\n            \n            // default delete button of the settings panel\n            if (el) {\n                el.querySelector('.settings__delete').addEventListener('click', function(e) {\n                    e.preventDefault();\n                    // midiNetwork.deleteProcessor(processor);\n                    store.dispatch(store.getActions().deleteProcessor(data.id));\n                });\n            }\n\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.SELECT_PROCESSOR:\n                        show(e.detail.action.id === data.id);\n                        break;\n                }\n            });\n\n            return;\n\n\n            // const params = processor.getParameters();\n            // let template = document.querySelector('#template-settings-' + processor.getType());\n            // let clone = template.content.cloneNode(true);\n            // el = clone.firstElementChild;\n            \n            // if (typeof processor.addSelectCallback === 'function') {\n            //     processor.addSelectCallback(show);\n            // }\n            \n            // // loop through all processor parameters and add setting view if required\n            // for (var key in params) {\n            //     if (params.hasOwnProperty(key)) {\n            //         // only create setting if there's a container el for it in the settings panel\n            //         var settingContainerEl = el.querySelector('.' + key);\n            //         if (settingContainerEl) {\n            //             var param = params[key],\n            //                 settingView = {},\n            //                 settingViewSpecs = {\n            //                     that: settingView,\n            //                     param: param,\n            //                     containerEl: settingContainerEl\n            //                 };\n            //             // create the setting view based on the parameter type\n            //             switch (param.getProperty('type')) {\n            //                 case 'integer':\n            //                     settingView = ns.createIntegerSettingView(settingViewSpecs);\n            //                     break;\n            //                 case 'boolean':\n            //                     settingView = ns.createBooleanSettingView(settingViewSpecs);\n            //                     break;\n            //                 case 'itemized':\n            //                     settingView = ns.createItemizedSettingView(settingViewSpecs);\n            //                     break;\n            //                 case 'string':\n            //                     settingView = ns.createStringSettingView(settingViewSpecs);\n            //                     break;\n            //             }\n            //             // add view to list for future reference\n            //             settingViews.push(settingView);\n            //         }\n            //     }\n            // }\n            \n            // // default delete button of the settings panel\n            // if (el) {\n            //     el.querySelector('.settings__delete').addEventListener('click', function(e) {\n            //         e.preventDefault();\n            //         midiNetwork.deleteProcessor(processor);\n            //     });\n            // }\n        },\n        \n        /**\n         * Called before this view is deleted.\n         */\n        terminate = function() {\n            if (el && parentEl) {\n                show(false);\n            }\n        },\n        \n        /**\n         * Show settings if the processor is selected, else remove.\n         * @param {Boolean} isSelected True if selected.\n         */\n        show = function(isSelected)  {\n            if (isSelected) {\n                parentEl.appendChild(el);\n            } else if (el.parentNode === parentEl) {\n                parentEl.removeChild(el);\n            }\n        },\n        \n        /**\n         * Check if this view is for a certain processor.\n         * @param  {Object} proc MIDI processor object.\n         * @return {Boolean} True if the processors match.\n         */\n        // hasProcessor = function(proc) {\n        //     return proc === processor;\n        // },\n        \n        getID = function() {\n            return data.id;\n        };\n    \n    that = data.that || {};\n    \n    initialize();\n    \n    that.terminate = terminate;\n    // that.hasProcessor = hasProcessor;\n    that.getID = getID;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createBooleanSettingView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(2);\n\n\n/**\n * Processor setting view for a Boolean type parameter,\n * which has a checkbox input.\n */\nfunction createBooleanSettingView(specs, my) {\n    var that,\n        checkEl,\n        \n        init = function() {\n            let id = getTemporaryInputAndLabelId();\n            \n            checkEl = my.el.querySelector('.setting__check');\n            checkEl.value = my.data.default;\n            checkEl.setAttribute('id', id);\n            checkEl.addEventListener('change', onChange);\n            \n            let labelEl = my.el.querySelector('.toggle__label');\n            labelEl.setAttribute('for', id);\n            \n            // my.param.addChangedCallback(changedCallback);\n        },\n        \n        /**\n         * A quick ID to tie label to input elements.\n         * @return {Number} Unique ID.\n         */\n        getTemporaryInputAndLabelId = function() {\n            return 'id' + Math.random() + performance.now();\n        },\n        \n        onChange = function(e) {\n            // my.data.setValue(e.target.checked);\n            my.store.dispatch(my.store.getActions().changeParameter(\n                my.processorID, \n                my.key, \n                e.target.checked));\n        },\n        \n        // changedCallback = function(parameter, oldValue, newValue) {\n        //     checkEl.checked = newValue;\n        // },\n        \n        setValue = function(value) {\n            checkEl.checked = value;\n        };\n    \n    my = my || {};\n    my.setValue = setValue;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL2Jvb2xlYW4uanM/ZTAyMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0EsWUFBWTs7QUFFWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUJhc2VTZXR0aW5nVmlldyBmcm9tICcuL2Jhc2UnO1xuXG4vKipcbiAqIFByb2Nlc3NvciBzZXR0aW5nIHZpZXcgZm9yIGEgQm9vbGVhbiB0eXBlIHBhcmFtZXRlcixcbiAqIHdoaWNoIGhhcyBhIGNoZWNrYm94IGlucHV0LlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVCb29sZWFuU2V0dGluZ1ZpZXcoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIGNoZWNrRWwsXG4gICAgICAgIFxuICAgICAgICBpbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBsZXQgaWQgPSBnZXRUZW1wb3JhcnlJbnB1dEFuZExhYmVsSWQoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY2hlY2tFbCA9IG15LmVsLnF1ZXJ5U2VsZWN0b3IoJy5zZXR0aW5nX19jaGVjaycpO1xuICAgICAgICAgICAgY2hlY2tFbC52YWx1ZSA9IG15LmRhdGEuZGVmYXVsdDtcbiAgICAgICAgICAgIGNoZWNrRWwuc2V0QXR0cmlidXRlKCdpZCcsIGlkKTtcbiAgICAgICAgICAgIGNoZWNrRWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsZXQgbGFiZWxFbCA9IG15LmVsLnF1ZXJ5U2VsZWN0b3IoJy50b2dnbGVfX2xhYmVsJyk7XG4gICAgICAgICAgICBsYWJlbEVsLnNldEF0dHJpYnV0ZSgnZm9yJywgaWQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBteS5wYXJhbS5hZGRDaGFuZ2VkQ2FsbGJhY2soY2hhbmdlZENhbGxiYWNrKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBIHF1aWNrIElEIHRvIHRpZSBsYWJlbCB0byBpbnB1dCBlbGVtZW50cy5cbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSBVbmlxdWUgSUQuXG4gICAgICAgICAqL1xuICAgICAgICBnZXRUZW1wb3JhcnlJbnB1dEFuZExhYmVsSWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWQnICsgTWF0aC5yYW5kb20oKSArIHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgb25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAvLyBteS5kYXRhLnNldFZhbHVlKGUudGFyZ2V0LmNoZWNrZWQpO1xuICAgICAgICAgICAgbXkuc3RvcmUuZGlzcGF0Y2gobXkuc3RvcmUuZ2V0QWN0aW9ucygpLmNoYW5nZVBhcmFtZXRlcihcbiAgICAgICAgICAgICAgICBteS5wcm9jZXNzb3JJRCwgXG4gICAgICAgICAgICAgICAgbXkua2V5LCBcbiAgICAgICAgICAgICAgICBlLnRhcmdldC5jaGVja2VkKSk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvLyBjaGFuZ2VkQ2FsbGJhY2sgPSBmdW5jdGlvbihwYXJhbWV0ZXIsIG9sZFZhbHVlLCBuZXdWYWx1ZSkge1xuICAgICAgICAvLyAgICAgY2hlY2tFbC5jaGVja2VkID0gbmV3VmFsdWU7XG4gICAgICAgIC8vIH0sXG4gICAgICAgIFxuICAgICAgICBzZXRWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBjaGVja0VsLmNoZWNrZWQgPSB2YWx1ZTtcbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIG15LnNldFZhbHVlID0gc2V0VmFsdWU7XG4gICAgXG4gICAgdGhhdCA9IGNyZWF0ZUJhc2VTZXR0aW5nVmlldyhzcGVjcywgbXkpO1xuICAgIFxuICAgIGluaXQoKTtcbiAgICBcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3ZpZXcvc2V0dGluZy9ib29sZWFuLmpzXG4vLyBtb2R1bGUgaWQgPSA0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createRemoteSettingView;\n/**\n * Processor setting overlay for assinging MIDI control to the parameter.\n */\nfunction createRemoteSettingView(specs, my) {\n    var that,\n        learnClickLayer,\n        learnCallback,\n        \n        init = function() {\n            if (my.data.isMidiControllable) {\n                \n                // set callback on parameter\n                // my.param.addRemoteStateCallback(changeRemoteState);\n                \n                let template = document.querySelector('#template-setting-learnmode');\n                let clone = template.content.cloneNode(true);\n                learnClickLayer = clone.firstElementChild;\n            }\n        },\n        \n        /**\n         * State of the parameter in the assignment process changed,\n         * the element will show this visually.\n         * @param {String} state New state of the parameter.\n         * @param {Function} callback In learn mode, the function to call on click.\n         */\n        changeRemoteState = function(state, callback) {\n            switch (state) {\n                case 'enter':\n                    my.el.appendChild(learnClickLayer);\n                    learnCallback = callback;\n                    learnClickLayer.addEventListener('click', onLearnLayerClick);\n                    break;\n                case 'exit':\n                    if (my.el.contains(learnClickLayer)) {\n                        my.el.removeChild(learnClickLayer);\n                        learnCallback = null;\n                        learnClickLayer.removeEventListener('click', onLearnLayerClick);\n                    }\n                    break;\n                case 'selected':\n                    learnClickLayer.dataset.selected = true;\n                    break;\n                case 'deselected':\n                    learnClickLayer.dataset.selected = false;\n                    break;\n                case 'assigned':\n                    learnClickLayer.dataset.assigned = true;\n                    break;\n                case 'unassigned':\n                    learnClickLayer.dataset.assigned = false;\n                    break;\n                default:\n                    console.log('Unknown remote state: ', state);\n                    break;\n            }\n        },\n        \n        onLearnLayerClick = function(e) {\n            learnCallback(my.data);\n        };\n    \n    my = my || {};\n    \n    that = that || {};\n    \n    init();\n    \n    that.changeRemoteState = changeRemoteState;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL3JlbW90ZS5qcz83MTA3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQixtQkFBbUIsU0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI0My5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUHJvY2Vzc29yIHNldHRpbmcgb3ZlcmxheSBmb3IgYXNzaW5naW5nIE1JREkgY29udHJvbCB0byB0aGUgcGFyYW1ldGVyLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVSZW1vdGVTZXR0aW5nVmlldyhzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgbGVhcm5DbGlja0xheWVyLFxuICAgICAgICBsZWFybkNhbGxiYWNrLFxuICAgICAgICBcbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKG15LmRhdGEuaXNNaWRpQ29udHJvbGxhYmxlKSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gc2V0IGNhbGxiYWNrIG9uIHBhcmFtZXRlclxuICAgICAgICAgICAgICAgIC8vIG15LnBhcmFtLmFkZFJlbW90ZVN0YXRlQ2FsbGJhY2soY2hhbmdlUmVtb3RlU3RhdGUpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxldCB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZW1wbGF0ZS1zZXR0aW5nLWxlYXJubW9kZScpO1xuICAgICAgICAgICAgICAgIGxldCBjbG9uZSA9IHRlbXBsYXRlLmNvbnRlbnQuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgIGxlYXJuQ2xpY2tMYXllciA9IGNsb25lLmZpcnN0RWxlbWVudENoaWxkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFN0YXRlIG9mIHRoZSBwYXJhbWV0ZXIgaW4gdGhlIGFzc2lnbm1lbnQgcHJvY2VzcyBjaGFuZ2VkLFxuICAgICAgICAgKiB0aGUgZWxlbWVudCB3aWxsIHNob3cgdGhpcyB2aXN1YWxseS5cbiAgICAgICAgICogQHBhcmFtIHtTdHJpbmd9IHN0YXRlIE5ldyBzdGF0ZSBvZiB0aGUgcGFyYW1ldGVyLlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBJbiBsZWFybiBtb2RlLCB0aGUgZnVuY3Rpb24gdG8gY2FsbCBvbiBjbGljay5cbiAgICAgICAgICovXG4gICAgICAgIGNoYW5nZVJlbW90ZVN0YXRlID0gZnVuY3Rpb24oc3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnZW50ZXInOlxuICAgICAgICAgICAgICAgICAgICBteS5lbC5hcHBlbmRDaGlsZChsZWFybkNsaWNrTGF5ZXIpO1xuICAgICAgICAgICAgICAgICAgICBsZWFybkNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgICAgICAgICAgICAgIGxlYXJuQ2xpY2tMYXllci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uTGVhcm5MYXllckNsaWNrKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZXhpdCc6XG4gICAgICAgICAgICAgICAgICAgIGlmIChteS5lbC5jb250YWlucyhsZWFybkNsaWNrTGF5ZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBteS5lbC5yZW1vdmVDaGlsZChsZWFybkNsaWNrTGF5ZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVhcm5DYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWFybkNsaWNrTGF5ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkxlYXJuTGF5ZXJDbGljayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnc2VsZWN0ZWQnOlxuICAgICAgICAgICAgICAgICAgICBsZWFybkNsaWNrTGF5ZXIuZGF0YXNldC5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2Rlc2VsZWN0ZWQnOlxuICAgICAgICAgICAgICAgICAgICBsZWFybkNsaWNrTGF5ZXIuZGF0YXNldC5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdhc3NpZ25lZCc6XG4gICAgICAgICAgICAgICAgICAgIGxlYXJuQ2xpY2tMYXllci5kYXRhc2V0LmFzc2lnbmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAndW5hc3NpZ25lZCc6XG4gICAgICAgICAgICAgICAgICAgIGxlYXJuQ2xpY2tMYXllci5kYXRhc2V0LmFzc2lnbmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmtub3duIHJlbW90ZSBzdGF0ZTogJywgc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIG9uTGVhcm5MYXllckNsaWNrID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgbGVhcm5DYWxsYmFjayhteS5kYXRhKTtcbiAgICAgICAgfTtcbiAgICBcbiAgICBteSA9IG15IHx8IHt9O1xuICAgIFxuICAgIHRoYXQgPSB0aGF0IHx8IHt9O1xuICAgIFxuICAgIGluaXQoKTtcbiAgICBcbiAgICB0aGF0LmNoYW5nZVJlbW90ZVN0YXRlID0gY2hhbmdlUmVtb3RlU3RhdGU7XG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L3NldHRpbmcvcmVtb3RlLmpzXG4vLyBtb2R1bGUgaWQgPSA0M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createIntegerSettingView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(2);\n\n\n/**\n * Processor setting view for a linear integer type parameter,\n * which has a slider and a number field.\n */\nfunction createIntegerSettingView(specs, my) {\n    var that,\n        rangeEl,\n        numberEl,\n        \n        init = function() {\n            rangeEl = my.el.getElementsByClassName('setting__range')[0];\n            // rangeEl.setAttribute('min', my.data.min);\n            // rangeEl.setAttribute('max', my.data.max);\n            // rangeEl.value = my.data.default;\n            rangeEl.addEventListener('input', onChange);\n            rangeEl.addEventListener('change', onChange);\n            \n            numberEl = my.el.getElementsByClassName('setting__number')[0];\n            // numberEl.setAttribute('min', my.data.min);\n            // numberEl.setAttribute('max', my.data.max);\n            // numberEl.value = my.data.default;\n            numberEl.addEventListener('change', onChange);\n            \n            // my.param.addChangedCallback(changedCallback);\n            // my.param.addChangedMaxCallback(changedMaxCallback);\n\n            initData();\n        },\n\n        initData = function() {\n            rangeEl.setAttribute('min', my.data.min);\n            rangeEl.setAttribute('max', my.data.max);\n            rangeEl.value = my.data.value;\n\n            numberEl.setAttribute('min', my.data.min);\n            numberEl.setAttribute('max', my.data.max);\n            numberEl.value = my.data.value;\n        },\n        \n        onChange = function(e) {\n            // my.param.setValue(parseInt(e.target.value, 10));\n            my.store.dispatch(my.store.getActions().changeParameter(\n                my.processorID, \n                my.key, \n                parseInt(e.target.value, 10)));\n        },\n        \n        // changedCallback = function(parameter, oldValue, newValue) {\n        //     rangeEl.value = newValue;\n        //     numberEl.value = newValue;\n        // },\n        \n        /**\n         * The maximum value of the parameter has changed.\n         * @param {Number} max New maximum value. \n         */\n        // changedMaxCallback = function(max) {\n        //     rangeEl.setAttribute('max', max);\n        //     numberEl.setAttribute('max', max);\n        // },\n        \n        setValue = function(value) {\n            rangeEl.value = value;\n            numberEl.value = value;\n        };\n    \n    my = my || {};\n    my.initData = initData;\n    my.setValue = setValue;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL2ludGVnZXIuanM/NTk2MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0EsWUFBWTs7QUFFWjtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUJhc2VTZXR0aW5nVmlldyBmcm9tICcuL2Jhc2UnO1xuXG4vKipcbiAqIFByb2Nlc3NvciBzZXR0aW5nIHZpZXcgZm9yIGEgbGluZWFyIGludGVnZXIgdHlwZSBwYXJhbWV0ZXIsXG4gKiB3aGljaCBoYXMgYSBzbGlkZXIgYW5kIGEgbnVtYmVyIGZpZWxkLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVJbnRlZ2VyU2V0dGluZ1ZpZXcoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIHJhbmdlRWwsXG4gICAgICAgIG51bWJlckVsLFxuICAgICAgICBcbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmFuZ2VFbCA9IG15LmVsLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3NldHRpbmdfX3JhbmdlJylbMF07XG4gICAgICAgICAgICAvLyByYW5nZUVsLnNldEF0dHJpYnV0ZSgnbWluJywgbXkuZGF0YS5taW4pO1xuICAgICAgICAgICAgLy8gcmFuZ2VFbC5zZXRBdHRyaWJ1dGUoJ21heCcsIG15LmRhdGEubWF4KTtcbiAgICAgICAgICAgIC8vIHJhbmdlRWwudmFsdWUgPSBteS5kYXRhLmRlZmF1bHQ7XG4gICAgICAgICAgICByYW5nZUVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0Jywgb25DaGFuZ2UpO1xuICAgICAgICAgICAgcmFuZ2VFbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkNoYW5nZSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG51bWJlckVsID0gbXkuZWwuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc2V0dGluZ19fbnVtYmVyJylbMF07XG4gICAgICAgICAgICAvLyBudW1iZXJFbC5zZXRBdHRyaWJ1dGUoJ21pbicsIG15LmRhdGEubWluKTtcbiAgICAgICAgICAgIC8vIG51bWJlckVsLnNldEF0dHJpYnV0ZSgnbWF4JywgbXkuZGF0YS5tYXgpO1xuICAgICAgICAgICAgLy8gbnVtYmVyRWwudmFsdWUgPSBteS5kYXRhLmRlZmF1bHQ7XG4gICAgICAgICAgICBudW1iZXJFbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkNoYW5nZSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIG15LnBhcmFtLmFkZENoYW5nZWRDYWxsYmFjayhjaGFuZ2VkQ2FsbGJhY2spO1xuICAgICAgICAgICAgLy8gbXkucGFyYW0uYWRkQ2hhbmdlZE1heENhbGxiYWNrKGNoYW5nZWRNYXhDYWxsYmFjayk7XG5cbiAgICAgICAgICAgIGluaXREYXRhKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdERhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJhbmdlRWwuc2V0QXR0cmlidXRlKCdtaW4nLCBteS5kYXRhLm1pbik7XG4gICAgICAgICAgICByYW5nZUVsLnNldEF0dHJpYnV0ZSgnbWF4JywgbXkuZGF0YS5tYXgpO1xuICAgICAgICAgICAgcmFuZ2VFbC52YWx1ZSA9IG15LmRhdGEudmFsdWU7XG5cbiAgICAgICAgICAgIG51bWJlckVsLnNldEF0dHJpYnV0ZSgnbWluJywgbXkuZGF0YS5taW4pO1xuICAgICAgICAgICAgbnVtYmVyRWwuc2V0QXR0cmlidXRlKCdtYXgnLCBteS5kYXRhLm1heCk7XG4gICAgICAgICAgICBudW1iZXJFbC52YWx1ZSA9IG15LmRhdGEudmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBvbkNoYW5nZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIC8vIG15LnBhcmFtLnNldFZhbHVlKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlLCAxMCkpO1xuICAgICAgICAgICAgbXkuc3RvcmUuZGlzcGF0Y2gobXkuc3RvcmUuZ2V0QWN0aW9ucygpLmNoYW5nZVBhcmFtZXRlcihcbiAgICAgICAgICAgICAgICBteS5wcm9jZXNzb3JJRCwgXG4gICAgICAgICAgICAgICAgbXkua2V5LCBcbiAgICAgICAgICAgICAgICBwYXJzZUludChlLnRhcmdldC52YWx1ZSwgMTApKSk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvLyBjaGFuZ2VkQ2FsbGJhY2sgPSBmdW5jdGlvbihwYXJhbWV0ZXIsIG9sZFZhbHVlLCBuZXdWYWx1ZSkge1xuICAgICAgICAvLyAgICAgcmFuZ2VFbC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICAvLyAgICAgbnVtYmVyRWwudmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgLy8gfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbWF4aW11bSB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyIGhhcyBjaGFuZ2VkLlxuICAgICAgICAgKiBAcGFyYW0ge051bWJlcn0gbWF4IE5ldyBtYXhpbXVtIHZhbHVlLiBcbiAgICAgICAgICovXG4gICAgICAgIC8vIGNoYW5nZWRNYXhDYWxsYmFjayA9IGZ1bmN0aW9uKG1heCkge1xuICAgICAgICAvLyAgICAgcmFuZ2VFbC5zZXRBdHRyaWJ1dGUoJ21heCcsIG1heCk7XG4gICAgICAgIC8vICAgICBudW1iZXJFbC5zZXRBdHRyaWJ1dGUoJ21heCcsIG1heCk7XG4gICAgICAgIC8vIH0sXG4gICAgICAgIFxuICAgICAgICBzZXRWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICByYW5nZUVsLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICBudW1iZXJFbC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9O1xuICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkuaW5pdERhdGEgPSBpbml0RGF0YTtcbiAgICBteS5zZXRWYWx1ZSA9IHNldFZhbHVlO1xuICAgIFxuICAgIHRoYXQgPSBjcmVhdGVCYXNlU2V0dGluZ1ZpZXcoc3BlY3MsIG15KTtcbiAgICBcbiAgICBpbml0KCk7XG4gICAgXG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L3NldHRpbmcvaW50ZWdlci5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createItemizedSettingView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(2);\n\n\n/**\n * Processor setting view for a itemized type parameter,\n * which has a radio buttons for item selection.\n */\nfunction createItemizedSettingView(specs, my) {\n    var that,\n        radioInputs = [],\n        numInputs,\n        \n        init = function() {\n            let parentEl = my.el.parentNode;\n            \n            // add the main label\n            let label = my.el.querySelector('.setting__label-text');\n            parentEl.appendChild(label);\n            \n            // add the radio buttons\n            let radioTemplate = document.querySelector('#template-setting-itemized-item'),\n                model = my.data.model;\n            numInputs = model.length;\n            for (var i = 0; i < numInputs; i++) {\n                let id = getTemporaryInputAndLabelId();\n                \n                // add a new cloned radio element\n                let radioInputEl = radioTemplate.content.children[0].cloneNode(true);\n                parentEl.appendChild(radioInputEl);\n                radioInputEl.setAttribute('name', specs.key);\n                radioInputEl.setAttribute('id', id);\n                radioInputEl.value = model[i].value;\n                radioInputEl.checked = model[i].value == my.data.default;\n                radioInputEl.addEventListener('change', onChange);\n                radioInputs.push(radioInputEl);\n                \n                // add a new cloned label element\n                let radioLabelEl = radioTemplate.content.children[1].cloneNode(true);\n                parentEl.appendChild(radioLabelEl);\n                radioLabelEl.setAttribute('for', id);\n                radioLabelEl.innerHTML = model[i].label;\n            }\n            \n            // remove the original element\n            parentEl.removeChild(my.el);\n            \n            // my.param.addChangedCallback(changedCallback);\n        },\n        \n        /**\n         * A quick ID to tie label to input elements.\n         * @return {Number} Unique ID.\n         */\n        getTemporaryInputAndLabelId = function() {\n            return 'id' + Math.random() + performance.now();\n        },\n        \n        onChange = function(e) {\n            // my.data.setValue(e.target.value);\n            my.store.dispatch(my.store.getActions().changeParameter(\n                my.processorID, \n                my.key, \n                e.target.value));\n        },\n        \n        // changedCallback = function(parameter, oldValue, newValue) {\n        //     for (i = 0; i < numInputs; i++) {\n        //         radioInputs[i].checked = (radioInputs[i].value == newValue);\n        //     }\n        // };\n\n        setValue = function(value) {\n            for (let i = 0; i < numInputs; i++) {\n                radioInputs[i].checked = (radioInputs[i].value == value);\n            }\n        };\n        \n    my = my || {};\n    my.setValue = setValue;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL2l0ZW1pemVkLmpzPzdhMjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGVBQWU7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0EsMEJBQTBCLGVBQWU7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLGVBQWU7QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiI0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVCYXNlU2V0dGluZ1ZpZXcgZnJvbSAnLi9iYXNlJztcblxuLyoqXG4gKiBQcm9jZXNzb3Igc2V0dGluZyB2aWV3IGZvciBhIGl0ZW1pemVkIHR5cGUgcGFyYW1ldGVyLFxuICogd2hpY2ggaGFzIGEgcmFkaW8gYnV0dG9ucyBmb3IgaXRlbSBzZWxlY3Rpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUl0ZW1pemVkU2V0dGluZ1ZpZXcoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIHJhZGlvSW5wdXRzID0gW10sXG4gICAgICAgIG51bUlucHV0cyxcbiAgICAgICAgXG4gICAgICAgIGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGxldCBwYXJlbnRFbCA9IG15LmVsLnBhcmVudE5vZGU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGFkZCB0aGUgbWFpbiBsYWJlbFxuICAgICAgICAgICAgbGV0IGxhYmVsID0gbXkuZWwucXVlcnlTZWxlY3RvcignLnNldHRpbmdfX2xhYmVsLXRleHQnKTtcbiAgICAgICAgICAgIHBhcmVudEVsLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gYWRkIHRoZSByYWRpbyBidXR0b25zXG4gICAgICAgICAgICBsZXQgcmFkaW9UZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZW1wbGF0ZS1zZXR0aW5nLWl0ZW1pemVkLWl0ZW0nKSxcbiAgICAgICAgICAgICAgICBtb2RlbCA9IG15LmRhdGEubW9kZWw7XG4gICAgICAgICAgICBudW1JbnB1dHMgPSBtb2RlbC5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bUlucHV0czsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IGlkID0gZ2V0VGVtcG9yYXJ5SW5wdXRBbmRMYWJlbElkKCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gYWRkIGEgbmV3IGNsb25lZCByYWRpbyBlbGVtZW50XG4gICAgICAgICAgICAgICAgbGV0IHJhZGlvSW5wdXRFbCA9IHJhZGlvVGVtcGxhdGUuY29udGVudC5jaGlsZHJlblswXS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgcGFyZW50RWwuYXBwZW5kQ2hpbGQocmFkaW9JbnB1dEVsKTtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0RWwuc2V0QXR0cmlidXRlKCduYW1lJywgc3BlY3Mua2V5KTtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0RWwuc2V0QXR0cmlidXRlKCdpZCcsIGlkKTtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0RWwudmFsdWUgPSBtb2RlbFtpXS52YWx1ZTtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0RWwuY2hlY2tlZCA9IG1vZGVsW2ldLnZhbHVlID09IG15LmRhdGEuZGVmYXVsdDtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgICAgICAgICAgICAgIHJhZGlvSW5wdXRzLnB1c2gocmFkaW9JbnB1dEVsKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBhZGQgYSBuZXcgY2xvbmVkIGxhYmVsIGVsZW1lbnRcbiAgICAgICAgICAgICAgICBsZXQgcmFkaW9MYWJlbEVsID0gcmFkaW9UZW1wbGF0ZS5jb250ZW50LmNoaWxkcmVuWzFdLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBwYXJlbnRFbC5hcHBlbmRDaGlsZChyYWRpb0xhYmVsRWwpO1xuICAgICAgICAgICAgICAgIHJhZGlvTGFiZWxFbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGlkKTtcbiAgICAgICAgICAgICAgICByYWRpb0xhYmVsRWwuaW5uZXJIVE1MID0gbW9kZWxbaV0ubGFiZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIHJlbW92ZSB0aGUgb3JpZ2luYWwgZWxlbWVudFxuICAgICAgICAgICAgcGFyZW50RWwucmVtb3ZlQ2hpbGQobXkuZWwpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBteS5wYXJhbS5hZGRDaGFuZ2VkQ2FsbGJhY2soY2hhbmdlZENhbGxiYWNrKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBIHF1aWNrIElEIHRvIHRpZSBsYWJlbCB0byBpbnB1dCBlbGVtZW50cy5cbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSBVbmlxdWUgSUQuXG4gICAgICAgICAqL1xuICAgICAgICBnZXRUZW1wb3JhcnlJbnB1dEFuZExhYmVsSWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWQnICsgTWF0aC5yYW5kb20oKSArIHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgb25DaGFuZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAvLyBteS5kYXRhLnNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgIG15LnN0b3JlLmRpc3BhdGNoKG15LnN0b3JlLmdldEFjdGlvbnMoKS5jaGFuZ2VQYXJhbWV0ZXIoXG4gICAgICAgICAgICAgICAgbXkucHJvY2Vzc29ySUQsIFxuICAgICAgICAgICAgICAgIG15LmtleSwgXG4gICAgICAgICAgICAgICAgZS50YXJnZXQudmFsdWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIGNoYW5nZWRDYWxsYmFjayA9IGZ1bmN0aW9uKHBhcmFtZXRlciwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgICAgIC8vICAgICBmb3IgKGkgPSAwOyBpIDwgbnVtSW5wdXRzOyBpKyspIHtcbiAgICAgICAgLy8gICAgICAgICByYWRpb0lucHV0c1tpXS5jaGVja2VkID0gKHJhZGlvSW5wdXRzW2ldLnZhbHVlID09IG5ld1ZhbHVlKTtcbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfTtcblxuICAgICAgICBzZXRWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bUlucHV0czsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcmFkaW9JbnB1dHNbaV0uY2hlY2tlZCA9IChyYWRpb0lucHV0c1tpXS52YWx1ZSA9PSB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkuc2V0VmFsdWUgPSBzZXRWYWx1ZTtcbiAgICBcbiAgICB0aGF0ID0gY3JlYXRlQmFzZVNldHRpbmdWaWV3KHNwZWNzLCBteSk7XG4gICAgXG4gICAgaW5pdCgpO1xuICAgIFxuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL2l0ZW1pemVkLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createStringSettingView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(2);\n\n\n/**\n * Processor setting view for a Boolean type parameter,\n * which has a checkbox input.\n */\n \nfunction createStringSettingView(specs, my) {\n    var that,\n        textEl,\n        \n        init = function() {\n            textEl = my.el.getElementsByClassName('setting__text')[0];\n            textEl.value = my.data.value;\n            textEl.addEventListener('input', onChange);\n            \n            // my.param.addChangedCallback(changedCallback);\n        },\n        \n        onChange = function(e) {\n            e.preventDefault();\n            // my.param.setValue(e.target.value);\n            my.store.dispatch(my.store.getActions().changeParameter(\n                my.processorID, \n                my.key, \n                e.target.value));\n        },\n        \n        // changedCallback = function(parameter, oldValue, newValue) {\n        //     // only update if the text input doesn't have focus,\n        //     // else value gets refreshed and cursor jumps to end\n        //     if (textEl != document.activeElement) {\n        //         textEl.value = newValue;\n        //     }\n        // };\n        \n        setValue = function(value) {\n            // only update if the text input doesn't have focus,\n            // else value gets refreshed and cursor jumps to end\n            if (textEl != document.activeElement) {\n                textEl.value = value;\n            }\n        };\n    \n    my = my || {};\n    my.setValue = setValue;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__base__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL3N0cmluZy5qcz83MjVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUJhc2VTZXR0aW5nVmlldyBmcm9tICcuL2Jhc2UnO1xuXG4vKipcbiAqIFByb2Nlc3NvciBzZXR0aW5nIHZpZXcgZm9yIGEgQm9vbGVhbiB0eXBlIHBhcmFtZXRlcixcbiAqIHdoaWNoIGhhcyBhIGNoZWNrYm94IGlucHV0LlxuICovXG4gXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdHJpbmdTZXR0aW5nVmlldyhzcGVjcywgbXkpIHtcbiAgICB2YXIgdGhhdCxcbiAgICAgICAgdGV4dEVsLFxuICAgICAgICBcbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGV4dEVsID0gbXkuZWwuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc2V0dGluZ19fdGV4dCcpWzBdO1xuICAgICAgICAgICAgdGV4dEVsLnZhbHVlID0gbXkuZGF0YS52YWx1ZTtcbiAgICAgICAgICAgIHRleHRFbC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIG9uQ2hhbmdlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gbXkucGFyYW0uYWRkQ2hhbmdlZENhbGxiYWNrKGNoYW5nZWRDYWxsYmFjayk7XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICBvbkNoYW5nZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIC8vIG15LnBhcmFtLnNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgIG15LnN0b3JlLmRpc3BhdGNoKG15LnN0b3JlLmdldEFjdGlvbnMoKS5jaGFuZ2VQYXJhbWV0ZXIoXG4gICAgICAgICAgICAgICAgbXkucHJvY2Vzc29ySUQsIFxuICAgICAgICAgICAgICAgIG15LmtleSwgXG4gICAgICAgICAgICAgICAgZS50YXJnZXQudmFsdWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgIC8vIGNoYW5nZWRDYWxsYmFjayA9IGZ1bmN0aW9uKHBhcmFtZXRlciwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgICAgIC8vICAgICAvLyBvbmx5IHVwZGF0ZSBpZiB0aGUgdGV4dCBpbnB1dCBkb2Vzbid0IGhhdmUgZm9jdXMsXG4gICAgICAgIC8vICAgICAvLyBlbHNlIHZhbHVlIGdldHMgcmVmcmVzaGVkIGFuZCBjdXJzb3IganVtcHMgdG8gZW5kXG4gICAgICAgIC8vICAgICBpZiAodGV4dEVsICE9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgLy8gICAgICAgICB0ZXh0RWwudmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfTtcbiAgICAgICAgXG4gICAgICAgIHNldFZhbHVlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIC8vIG9ubHkgdXBkYXRlIGlmIHRoZSB0ZXh0IGlucHV0IGRvZXNuJ3QgaGF2ZSBmb2N1cyxcbiAgICAgICAgICAgIC8vIGVsc2UgdmFsdWUgZ2V0cyByZWZyZXNoZWQgYW5kIGN1cnNvciBqdW1wcyB0byBlbmRcbiAgICAgICAgICAgIGlmICh0ZXh0RWwgIT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIHRleHRFbC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgbXkuc2V0VmFsdWUgPSBzZXRWYWx1ZTtcbiAgICBcbiAgICB0aGF0ID0gY3JlYXRlQmFzZVNldHRpbmdWaWV3KHNwZWNzLCBteSk7XG4gICAgXG4gICAgaW5pdCgpO1xuICAgIFxuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvdmlldy9zZXR0aW5nL3N0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./epg/settings.html\": 48,\n\t\"./example/settings.html\": 49\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 47;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycyAuL25vZGVfbW9kdWxlcy9odG1sLWxvYWRlciBeXFwuXFwvLipcXC9zZXR0aW5nc1xcLmh0bWwkPzZmNjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vZXBnL3NldHRpbmdzLmh0bWxcIjogNDgsXG5cdFwiLi9leGFtcGxlL3NldHRpbmdzLmh0bWxcIjogNDlcbn07XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18od2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkpO1xufTtcbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgLy8gY2hlY2sgZm9yIG51bWJlciBvciBzdHJpbmdcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInLlwiKTtcblx0cmV0dXJuIGlkO1xufTtcbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSA0NztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC9wcm9jZXNzb3JzIC4vbm9kZV9tb2R1bGVzL2h0bWwtbG9hZGVyIF5cXC5cXC8uKlxcL3NldHRpbmdzXFwuaHRtbCRcbi8vIG1vZHVsZSBpZCA9IDQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"settings settings--epg\\\">\\n    <form>\\n        <div class=\\\"panel__header panel__header--sub\\\">\\n            <span class=\\\"header__label\\\">Euclidean Rhythm</span>\\n        </div>\\n        <fieldset class=\\\"settings__fieldset\\\">\\n            <div class=\\\"settings__row steps\\\"></div>\\n            <div class=\\\"settings__row pulses\\\"></div>\\n            <div class=\\\"settings__row rotation\\\"></div>\\n        </fieldset>\\n        <div class=\\\"panel__header panel__header--sub\\\">\\n            <span class=\\\"header__label\\\">Playback</span>\\n        </div>\\n        <fieldset class=\\\"settings__fieldset\\\">\\n            <div class=\\\"settings__row rate\\\"></div>\\n            <div class=\\\"settings__row note_length\\\"></div>\\n            <div class=\\\"settings__row is_triplets\\\"></div>\\n            <div class=\\\"settings__row is_mute\\\"></div>\\n        </fieldset>\\n        <div class=\\\"panel__header panel__header--sub\\\">\\n            <span class=\\\"header__label\\\">MIDI Out</span>\\n        </div>\\n        <fieldset class=\\\"settings__fieldset\\\">\\n            <div class=\\\"settings__row channel_out\\\"></div>\\n            <div class=\\\"settings__row pitch_out\\\"></div>\\n            <div class=\\\"settings__row velocity_out\\\"></div>\\n        </fieldset>\\n        <div class=\\\"panel__header panel__header--sub\\\">\\n            <span class=\\\"header__label\\\">Other</span>\\n        </div>\\n        <fieldset class=\\\"settings__fieldset\\\">\\n            <div class=\\\"settings__row name\\\"></div>\\n            <span class=\\\"setting__label-text\\\"></span>\\n            <button type=\\\"button\\\" class=\\\"settings__delete btn\\\">Delete</button>\\n        </fieldset>\\n    </form>\\n</div>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvc2V0dGluZ3MuaHRtbD85ZjY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgY2xhc3M9XFxcInNldHRpbmdzIHNldHRpbmdzLS1lcGdcXFwiPlxcbiAgICA8Zm9ybT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInBhbmVsX19oZWFkZXIgcGFuZWxfX2hlYWRlci0tc3ViXFxcIj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGVhZGVyX19sYWJlbFxcXCI+RXVjbGlkZWFuIFJoeXRobTwvc3Bhbj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPVxcXCJzZXR0aW5nc19fZmllbGRzZXRcXFwiPlxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNldHRpbmdzX19yb3cgc3RlcHNcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNldHRpbmdzX19yb3cgcHVsc2VzXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IHJvdGF0aW9uXFxcIj48L2Rpdj5cXG4gICAgICAgIDwvZmllbGRzZXQ+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJwYW5lbF9faGVhZGVyIHBhbmVsX19oZWFkZXItLXN1YlxcXCI+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhlYWRlcl9fbGFiZWxcXFwiPlBsYXliYWNrPC9zcGFuPlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZmllbGRzZXQgY2xhc3M9XFxcInNldHRpbmdzX19maWVsZHNldFxcXCI+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2V0dGluZ3NfX3JvdyByYXRlXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IG5vdGVfbGVuZ3RoXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IGlzX3RyaXBsZXRzXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IGlzX211dGVcXFwiPjwvZGl2PlxcbiAgICAgICAgPC9maWVsZHNldD5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInBhbmVsX19oZWFkZXIgcGFuZWxfX2hlYWRlci0tc3ViXFxcIj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGVhZGVyX19sYWJlbFxcXCI+TUlESSBPdXQ8L3NwYW4+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxmaWVsZHNldCBjbGFzcz1cXFwic2V0dGluZ3NfX2ZpZWxkc2V0XFxcIj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IGNoYW5uZWxfb3V0XFxcIj48L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IHBpdGNoX291dFxcXCI+PC9kaXY+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2V0dGluZ3NfX3JvdyB2ZWxvY2l0eV9vdXRcXFwiPjwvZGl2PlxcbiAgICAgICAgPC9maWVsZHNldD5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInBhbmVsX19oZWFkZXIgcGFuZWxfX2hlYWRlci0tc3ViXFxcIj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGVhZGVyX19sYWJlbFxcXCI+T3RoZXI8L3NwYW4+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxmaWVsZHNldCBjbGFzcz1cXFwic2V0dGluZ3NfX2ZpZWxkc2V0XFxcIj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZXR0aW5nc19fcm93IG5hbWVcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJzZXR0aW5nX19sYWJlbC10ZXh0XFxcIj48L3NwYW4+XFxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJzZXR0aW5nc19fZGVsZXRlIGJ0blxcXCI+RGVsZXRlPC9idXR0b24+XFxuICAgICAgICA8L2ZpZWxkc2V0PlxcbiAgICA8L2Zvcm0+XFxuPC9kaXY+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvaHRtbC1sb2FkZXIhLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9lcGcvc2V0dGluZ3MuaHRtbFxuLy8gbW9kdWxlIGlkID0gNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

eval("module.exports = \"\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycy9leGFtcGxlL3NldHRpbmdzLmh0bWw/YjY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCJcIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9odG1sLWxvYWRlciEuL3NyYy9qcy93aC9wcm9jZXNzb3JzL2V4YW1wbGUvc2V0dGluZ3MuaHRtbFxuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCanvasView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__windowresize__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__canvasprocessors__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__canvasconnections__ = __webpack_require__(57);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tweenjs_tween_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tweenjs_tween_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__tweenjs_tween_js__);\n\n\n\n\n\n\n/**\n * Graphic 2D view of the processor network.\n *\n * CanvasView draws the graphics for all processors.\n * DynamicCanvas shows all elements that update each requestAnimationFrame.\n * StaticCanvas shows all elements that update only infrequently.\n * \n * Each processor has its own view.\n * When a change happens to a processor that \n * requires the static canvas to be redrawn:\n * - The processor's view receives a callback from a changed parameter.\n * - The view redraws its static graphics on an off-screen canvas.\n * - The view sets a dirty flag on the canvasView (this).\n * - The canvasView receives the next draw request.\n * - It clears the staticCanvas.\n * - It draws each view's off-screen canvas on the staticCanvas.\n * - It clears the dirty flag.\n */\nfunction createCanvasView(specs, my) {\n    var that,\n        store = specs.store,\n        // midiNetwork = specs.midiNetwork,\n        rootEl,\n        staticCanvas,\n        dynamicCanvas,\n        staticCtx,\n        dynamicCtx,\n        isDirty = false,\n        doubleClickCounter = 0,\n        doubleClickDelay = 300,\n        doubleClickTimer,\n        dragObjectType, // 'background|processor|connection'\n        \n        init = function() {\n            rootEl = document.querySelector('.canvas-container');\n            staticCanvas = document.querySelector('.canvas-static');\n            dynamicCanvas = document.querySelector('.canvas-dynamic');\n            staticCtx = staticCanvas.getContext('2d');\n            dynamicCtx = dynamicCanvas.getContext('2d');\n            \n            rootEl.addEventListener(__WEBPACK_IMPORTED_MODULE_0__core_util__[\"b\" /* util */].eventType.click, onClick);\n            rootEl.addEventListener(__WEBPACK_IMPORTED_MODULE_0__core_util__[\"b\" /* util */].eventType.start, onTouchStart);\n            rootEl.addEventListener(__WEBPACK_IMPORTED_MODULE_0__core_util__[\"b\" /* util */].eventType.move, dragMove);\n            rootEl.addEventListener(__WEBPACK_IMPORTED_MODULE_0__core_util__[\"b\" /* util */].eventType.end, dragEnd);\n\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.SET_PREFERENCES:\n                    case e.detail.actions.SET_THEME:\n                        const themeName = e.detail.state.preferences.isDarkTheme ? 'dark' : '';\n                        setTheme(themeName);\n                        break;\n                    \n                    case e.detail.actions.ADD_PROCESSOR:\n                        my.createProcessorViews(e.detail.state.processors);\n                        break;\n                    \n                    case e.detail.actions.DELETE_PROCESSOR:\n                        my.deleteProcessorView(e.detail.action.id);\n                        break;\n                    \n                    case e.detail.actions.SELECT_PROCESSOR:\n                        my.selectProcessorView(e.detail.state.selectedID);\n                        break;\n                    \n                    case e.detail.actions.DRAG_SELECTED_PROCESSOR:\n                    case e.detail.actions.DRAG_ALL_PROCESSORS:\n                        my.markDirty();\n                        break;\n                }\n            });\n            \n            my.addWindowResizeCallback(onWindowResize);\n            onWindowResize();\n        },\n        \n        /**\n         * Window resize event handler.\n         */\n        onWindowResize = function() {\n            staticCanvas.width = rootEl.clientWidth;\n            staticCanvas.height = rootEl.clientHeight;\n            dynamicCanvas.width = rootEl.clientWidth;\n            dynamicCanvas.height = rootEl.clientHeight;\n            my.canvasRect = dynamicCanvas.getBoundingClientRect();\n            markDirty();\n        },\n        \n        /**\n         * Separate click and doubleclick.\n         * @see http://stackoverflow.com/questions/6330431/jquery-bind-double-click-and-single-click-separately\n         */\n        onClick = function(e) {\n            // separate click from doubleclick\n            doubleClickCounter ++;\n            if (doubleClickCounter == 1) {\n                doubleClickTimer = setTimeout(function() {\n                    doubleClickCounter = 0;\n                    // implement single click behaviour here\n                }, doubleClickDelay);\n            } else {\n                clearTimeout(doubleClickTimer);\n                doubleClickCounter = 0;\n                // implement double click behaviour here\n                onDoubleClick(e);\n            }\n        },\n        \n        /**\n         * Handler for the custom doubleclick event detection.\n         * Create a new pattern at the location of the doubleclick.\n         */\n        onDoubleClick = function(e) {\n            // create a new processor\n            store.dispatch(store.getActions().createProcessor({\n                type: 'epg',\n                position2d: {\n                    x: e.clientX - my.canvasRect.left + window.scrollX,\n                    y: e.clientY - my.canvasRect.top + window.scrollY\n                }\n            }));\n            // midiNetwork.createProcessor({\n            //     type: 'epg',\n            //     position2d: {\n            //         x: e.clientX - my.canvasRect.left + window.scrollX,\n            //         y: e.clientY - my.canvasRect.top + window.scrollY\n            //     }\n            // });\n        },\n        \n        /**\n         * Select the object under the mouse.\n         * Start dragging the object.\n         */\n        onTouchStart = function(e) {\n            let canvasX = e.clientX - my.canvasRect.left + window.scrollX,\n                canvasY = e.clientY - my.canvasRect.top + window.scrollY;\n            \n            if (my.isConnectMode && my.intersectsOutConnector(canvasX, canvasY)) {\n                dragObjectType = 'connection';\n            } else if (my.intersectsProcessor(canvasX, canvasY)) {\n                dragObjectType = 'processor';\n            } else {\n                dragObjectType = 'background';\n            }\n        },\n        \n        /**\n         * Drag a view.\n         * @param  {Object} e Event.\n         */\n        dragMove = function(e) {\n            e.preventDefault();\n            \n            if (dragObjectType) {\n                let canvasX = e.clientX - my.canvasRect.left + window.scrollX,\n                    canvasY = e.clientY - my.canvasRect.top + window.scrollY;\n                \n                switch (dragObjectType) {\n                    case 'connection':\n                        my.dragMoveConnection(canvasX, canvasY);\n                        break;\n                    case 'processor':\n                        my.dragSelectedProcessor(canvasX, canvasY);\n                        // my.updateConnectorsInfo();\n                        my.drawOfflineCanvas();\n                        break;\n                    case 'background':\n                        my.dragAllProcessors(canvasX, canvasY);\n                        // my.updateConnectorsInfo();\n                        my.drawOfflineCanvas();\n                        break;\n                }\n                \n                // my.markDirty();\n            }\n        },\n        \n        /**\n         * Dragging 3D object ended.\n         * @param  {Object} e Event.\n         */\n        dragEnd = function(e) {\n            e.preventDefault();\n            \n            if (dragObjectType) {\n                dragMove(e);\n                let canvasX = e.clientX - my.canvasRect.left + window.scrollX,\n                    canvasY = e.clientY - my.canvasRect.top + window.scrollY;\n                switch (dragObjectType) {\n                    case 'connection':\n                        my.intersectsInConnector(canvasX, canvasY);\n                        break;\n                    case 'processor':\n                        break;\n                    case 'background':\n                        break;\n                }\n                dragObjectType = null;\n                // my.markDirty();\n            }\n        },\n        \n        /**\n         * Set the theme colours of the processor canvas views.\n         * @param {String} theme Theme name, 'dark' or ''.\n         */\n        setTheme = function(theme) {\n            // possibly have to set theme data attribute first\n            var themeStyles = window.getComputedStyle(document.querySelector('[data-theme]'));\n\n            my.theme = {\n                colorHigh: themeStyles.getPropertyValue('--text-color'),\n                colorMid: themeStyles.getPropertyValue('--border-color'),\n                colorLow: themeStyles.getPropertyValue('--panel-bg-color')\n            };\n            my.setThemeOnViews();\n            my.setThemeOnConnections();\n            my.markDirty();\n        },\n        \n        /**\n         * Set a flag to indicate the static canvas should be redrawn.\n         */\n        markDirty = function() {\n            isDirty = true;\n        },\n        \n        /**\n         * Update any tween animations that are going on and\n         * redraw the canvases if needed.\n         * @param {Number} position Transport playback position in ticks.\n         * @param {Array} processorEvents Array to processor generated events to displayin the view.\n         */\n        draw = function(position, processorEvents) {\n            __WEBPACK_IMPORTED_MODULE_4__tweenjs_tween_js___default.a.update();\n            let i,\n                views = my.getProcessorViews(),\n                n = views.length;\n            for (i = 0; i < n; i++) {\n                views[i].draw(position, processorEvents);\n            }\n            if (isDirty) {\n                isDirty = false;\n                staticCtx.clearRect(0, 0, staticCanvas.width, staticCanvas.height);\n                dynamicCtx.clearRect(0, 0, staticCanvas.width, staticCanvas.height);\n                my.addConnectionsToCanvas(staticCtx);\n                for (i = 0; i < n; i++) {\n                    views[i].addToStaticView(staticCtx);\n                }\n            }\n            \n            for (i = 0; i < n; i++) {\n                views[i].clearFromDynamicView(dynamicCtx);\n            }\n            for (i = 0; i < n; i++) {\n                views[i].addToDynamicView(dynamicCtx);\n            }\n        };\n        \n    my = my || {};\n    my.theme;\n    my.canvasRect,\n    my.markDirty = markDirty;\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_1__windowresize__[\"a\" /* default */])(specs, my);\n    that = Object(__WEBPACK_IMPORTED_MODULE_2__canvasprocessors__[\"a\" /* default */])(specs, my);\n    that = Object(__WEBPACK_IMPORTED_MODULE_3__canvasconnections__[\"a\" /* default */])(specs, my);\n    \n    init();\n    \n    that.setTheme = setTheme;\n    that.draw = draw;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCanvasProcessorViews;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__state_selectors__ = __webpack_require__(0);\n\n\n/**\n * Manages the canvas views of the processors in the network.\n * - Processor view lifecycle.\n * - Processor view user interaction, itersection with (mouse) point.\n * - Processor view dragging.\n * - Processor view theme changes.\n */\nfunction createCanvasProcessorViews(specs, my) {\n    var that,\n        store = specs.store,\n        midiNetwork = specs.midiNetwork,\n        views = [],\n        // numViews = 0,\n        // selectedView,\n        connectionSourceProcessor,\n        dragOffsetX,\n        dragOffsetY,\n        \n        /**\n         * Create canvas 2D object if it exists for the type.\n         * @param  {Array} data Array of current processors' state.\n         */\n        createProcessorViews = function(state) {\n            state.forEach((data, i) => {\n                if (!views[i] || (data.id !== views[i].getID())) {\n                    const module = __webpack_require__(52)(`./${data.type}/graphic`);\n                    const view = module.createGraphic({ \n                        data: data,\n                        store: store,\n                        canvasDirtyCallback: my.markDirty\n                    });\n                    views.splice(i, 0, view);\n                }\n            });\n\n            // let view,\n            //     specs = {\n            //         processor: processor,\n            //         canvasDirtyCallback: my.markDirty\n            //     };\n            \n            // switch (processor.getType()) {\n            //     case 'epg':\n            //         view = WH.midiProcessors[processor.getType()].createCanvasView(specs);\n            //         break;\n            //     case 'output':\n            //         specs.initialPosition = {x: my.canvasRect.width / 2, y: my.canvasRect.height - 70};\n            //         view = WH.midiProcessors[processor.getType()].createCanvasView(specs);\n            //         break;\n            // }\n            \n            // views.push(view);\n            // numViews = views.length;\n            \n            // set theme on the new view\n            // if (my.theme && typeof view.setTheme == 'function') {\n            //     view.setTheme(my.theme);\n            // }\n            \n            // my.updateConnectorsInfo();\n        },\n\n        selectProcessorView = function(id) {\n            views.forEach(view => {\n                if (typeof view.setSelected === 'function') {\n                    view.setSelected(view.getID() === id);\n                }\n            });\n        },\n        \n        /**\n         * Delete canvas 2D object when the processor is deleted.\n         * @param  {Object} processor MIDI processor for which the 3D object will be a view.\n         */\n        deleteProcessorView = function(id) {\n            let i = views.length;\n            while (--i >= 0) {\n                if (views[i].getID() === id) {\n                    views[i].terminate();\n                    views.splice(i, 1);\n                    // my.updateConnectorsInfo();\n                    my.markDirty();\n                    return;\n                }\n            }\n        },\n        \n        /**\n         * Check and handle intersection of point with view.\n         * @param  {Number} x Canvas X coordinate.\n         * @param  {Number} y Canvas Y coordinate.\n         * @return {Boolean} True if intersects.\n         */\n        intersectsProcessor = function(x, y) {\n            let isIntersect = false;\n            dragOffsetX = x;\n            dragOffsetY = y;\n            for (let i = views.length - 1; i >= 0; i--) {\n                if (views[i].intersectsWithPoint(x, y, 'processor')) {\n                    isIntersect = true;\n                    // selectedView = views[i];\n                    // select the found view's processor\n                    // midiNetwork.selectProcessor(selectedView.getProcessor());\n                    store.dispatch(store.getActions().selectProcessor(views[i].getID()));\n                    // start dragging the view's graphic\n                    let position2d = views[i].getPosition2d();\n                    dragOffsetX = x - position2d.x;\n                    dragOffsetY = y - position2d.y;\n                    break;\n                }\n            }\n            return isIntersect;\n        },\n        \n        intersectsInConnector = function(x, y) {\n            for (let i = 0; i < numViews; i++) {\n                if (views[i].intersectsWithPoint(x, y, 'inconnector')) {\n                    const destinationProcessor = views[i].getProcessor();\n                    midiNetwork.connectProcessors(connectionSourceProcessor, destinationProcessor);\n                    break;\n                }\n            }\n            my.dragEndConnection();\n        },\n        \n        intersectsOutConnector = function(x, y) {\n            for (let i = 0; i < numViews; i++) {\n                if (views[i].intersectsWithPoint(x, y, 'outconnector')) {\n                    connectionSourceProcessor = views[i].getProcessor();\n                    my.dragStartConnection(views[i], x, y);\n                    return true;\n                }\n            }\n            return false;\n        },\n        \n        dragSelectedProcessor = function(x, y) {\n            store.dispatch(store.getActions().dragSelectedProcessor(x - dragOffsetX, y - dragOffsetY));\n\n            // let newX = x - dragOffsetX,\n            //     newY = y - dragOffsetY;\n            // dragOffsetX = x;\n            // dragOffsetY = y;\n            // selectedView.setPosition2d({\n            //     x: x - dragOffsetX,\n            //     y: y - dragOffsetY\n            // });\n        },\n        \n        dragAllProcessors = function(x, y) {\n            let newX = x - dragOffsetX,\n                newY = y - dragOffsetY;\n            dragOffsetX = x;\n            dragOffsetY = y;\n            store.dispatch(store.getActions().dragAllProcessors(newX, newY));\n            // for (let i = 0, n = views.length, view, position2d; i < n; i++) {\n            //     view = views[i];\n            //     position2d = view.getPosition2d();\n            //     view.setPosition2d({\n            //         x: position2d.x + newX,\n            //         y: position2d.y + newY\n            //     });\n            //     store.\n            // }\n        },\n\n        // setProcessorPosition = function(state, id) {\n            // for (let i = 0, n = views.length; i < n; i++) {\n            //     if (id === views[i].getID()) {\n            //         const pos = getProcessorByID(id).params.position2d.value;\n            //         views[i].updatePosition({\n            //             x: pos.x,\n            //             y: pos.y\n            //         });\n            //         break;\n            //     }\n            // }\n        // },\n\n        // setAllProcessorPositions = function(state) {\n            // state.forEach((data) => {\n            //     for (let i = 0, n = views.length; i < n; i++) {\n            //         if (data.id === views[i].getID()) {\n            //             views[i].updatePosition({\n            //                 x: data.params.position2d.value.x,\n            //                 y: data.params.position2d.value.y\n            //             });\n            //         }\n            //     }\n            // });\n        // },\n        \n        getProcessorViews = function() {\n            return views;\n        },\n        \n        /**\n         * Update all processor views with changed theme.\n         */\n        setThemeOnViews = function() {\n            for (let i = 0, n = views.length; i < n; i++) {\n                if (views[i].setTheme instanceof Function) {\n                    views[i].setTheme(my.theme);\n                }\n            }\n        };\n\n    my = my || {};\n    my.createProcessorViews = createProcessorViews;\n    my.selectProcessorView = selectProcessorView;\n    my.deleteProcessorView = deleteProcessorView;\n    my.intersectsProcessor = intersectsProcessor;\n    my.intersectsInConnector = intersectsInConnector;\n    my.intersectsOutConnector = intersectsOutConnector;\n    my.dragSelectedProcessor = dragSelectedProcessor;\n    my.dragAllProcessors = dragAllProcessors;\n    // my.setProcessorPosition = setProcessorPosition\n    // my.setAllProcessorPositions = setAllProcessorPositions;\n    my.getProcessorViews = getProcessorViews;\n    my.setThemeOnViews = setThemeOnViews;\n    \n    that = specs.that || {};\n    \n    // that.createProcessorView = createProcessorView;\n    // that.deleteProcessorView = deleteProcessorView;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./epg/graphic\": 53,\n\t\"./example/graphic\": 55,\n\t\"./output/graphic\": 56\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvcHJvY2Vzc29ycyBeXFwuXFwvLipcXC9ncmFwaGljJD9kOTQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vZXBnL2dyYXBoaWNcIjogNTMsXG5cdFwiLi9leGFtcGxlL2dyYXBoaWNcIjogNTUsXG5cdFwiLi9vdXRwdXQvZ3JhcGhpY1wiOiA1NlxufTtcbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyh3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSk7XG59O1xuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHR2YXIgaWQgPSBtYXBbcmVxXTtcblx0aWYoIShpZCArIDEpKSAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIicuXCIpO1xuXHRyZXR1cm4gaWQ7XG59O1xud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDUyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3Byb2Nlc3NvcnMgXlxcLlxcLy4qXFwvZ3JhcGhpYyRcbi8vIG1vZHVsZSBpZCA9IDUyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"createGraphic\"] = createGraphic;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__view_canvasprocessorbase__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__state_selectors__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__euclid__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tweenjs_tween_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tweenjs_tween_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__tweenjs_tween_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_config__ = __webpack_require__(4);\n\n\n\n\n\n\n/**\n * Euclidean pattern animated necklace wheel drawn on canvas.\n */\nfunction createGraphic(specs, my) {\n    let that,\n        canvasDirtyCallback = specs.canvasDirtyCallback,\n        staticCanvas,\n        staticCtx,\n        necklaceCanvas,\n        necklaceCtx,\n        nameCanvas,\n        nameCtx,\n\n        pointerCanvas,\n        pointerCtx,\n        pointerRotation,\n        pointerRotationPrevious = 0,\n        pointerMutedRadius = 30,\n        pointerCanvasCenter,\n        \n        radius = 110,\n        necklaceMinRadius = 50,\n        necklaceRadius,\n        centerDotFullRadius = 10,\n        centerDotRadius,\n        centerDotSize,\n        centerDotX,\n        centerDotY,\n        centerDotStartTween,\n        centerDotEndTween,\n        \n        centerRadius = 20,\n        outConnectorY = 35,\n        selectRadius = 15,\n        dotRadius,\n        dotMaxRadius = 10,\n        dotActiveRadius,\n        zeroMarkerRadius = 3,\n        lineWidth = 2,\n        position2d,\n        isSelected = false,\n        doublePI = Math.PI * 2,\n        dotAnimations = {},\n        isNoteActive = false,\n        necklace = [],\n        duration = 0,\n        \n        initialise = function() {\n            document.addEventListener(my.store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.CHANGE_PARAMETER:\n                        if (e.detail.action.processorID === my.data.id) {\n                            my.data.params = Object(__WEBPACK_IMPORTED_MODULE_1__state_selectors__[\"b\" /* getProcessorByID */])(my.data.id).params;\n                            switch (e.detail.action.paramKey) {\n                                case 'steps':\n                                case 'pulses':\n                                    updateDuration();\n                                case 'rotation':\n                                    updateNecklace();\n                                    break;\n                                case 'is_mute':\n                                    updatePointer();\n                                    break;\n                                case 'name':\n                                    updateName();\n                                    break;\n                                case 'is_triplets':\n                                case 'rate':\n                                case 'note_length':\n                                    updateDuration();\n                                    break;\n                            }\n                        }\n                        break;\n                }\n            });\n\n            // offscreen canvas for static shapes\n            staticCanvas = document.createElement('canvas');\n            staticCanvas.height = radius * 2;\n            staticCanvas.width = radius * 2;\n            staticCtx = staticCanvas.getContext('2d');\n            staticCtx.lineWidth = lineWidth;\n            staticCtx.strokeStyle = my.colorHigh;\n            \n            // offscreen canvas for dots ring and polygon\n            necklaceCanvas = document.createElement('canvas');\n            necklaceCanvas.height = radius * 2;\n            necklaceCanvas.width = radius * 2;\n            necklaceCtx = necklaceCanvas.getContext('2d');\n            necklaceCtx.fillStyle = my.colorHigh;\n            necklaceCtx.lineWidth = lineWidth;\n            necklaceCtx.strokeStyle = my.colorHigh;\n            \n            // offscreen canvas for the pointer\n            pointerCanvas = document.createElement('canvas');\n            pointerCanvas.height = radius;\n            pointerCanvas.width = centerRadius * 2;\n            pointerCtx = pointerCanvas.getContext('2d');\n            pointerCtx.lineWidth = lineWidth;\n            pointerCtx.strokeStyle = my.colorHigh;\n            pointerCanvasCenter = pointerCanvas.width / 2;\n            \n            // offscreen canvas for the name\n            nameCanvas = document.createElement('canvas');\n            nameCanvas.height = 40;\n            nameCanvas.width = radius * 2;\n            nameCtx = nameCanvas.getContext('2d');\n            nameCtx.fillStyle = my.colorMid;\n            nameCtx.font = '14px sans-serif';\n            nameCtx.textAlign = 'center';\n            \n            // width and height to clear center dot \n            centerDotSize = (centerDotFullRadius + 1) * 2;\n            \n            // add callback to update before render.\n            // my.processor.addRenderCallback(showPlaybackPosition);\n            // my.processor.addProcessCallback(showNote);\n            // my.processor.addSelectCallback(updateSelectCircle);\n            \n            // add listeners to parameters\n            // let params = my.processor.getParameters();\n            // params.steps.addChangedCallback(updateNecklace);\n            // params.pulses.addChangedCallback(updateNecklace);\n            // params.rotation.addChangedCallback(updateNecklace);\n            // params.is_mute.addChangedCallback(updatePointer);\n            // params.position2d.addChangedCallback(updatePosition);\n            // params.name.addChangedCallback(updateName);\n            \n            // set drawing values\n            position2d = my.data.params.position2d.value;\n            updatePosition(position2d, position2d)\n            updateName();\n            updateNecklace();\n            redrawStaticCanvas();\n            updateDuration();\n        },\n        \n        /**\n         * Called before this view is deleted.\n         */\n        terminate = function() {\n            // let params = my.processor.getParameters();\n            // params.steps.removeChangedCallback(updateNecklace);\n            // params.pulses.removeChangedCallback(updateNecklace);\n            // params.rotation.removeChangedCallback(updateNecklace);\n            // params.is_mute.removeChangedCallback(updatePointer);\n            // params.position2d.removeChangedCallback(updatePosition);\n            // params.name.removeChangedCallback(updateName);\n            canvasDirtyCallback = null;\n        },\n\n        setSelected = function(isSelected) {\n            updateSelectCircle(isSelected);\n        },\n\n        draw = function(position, processorEvents) {\n            showPlaybackPosition(position);\n            let event;\n            if (processorEvents[my.data.id] && processorEvents[my.data.id].length) {\n                for (let i = 0, n = processorEvents[my.data.id].length; i < n; i++) {\n                    event = processorEvents[my.data.id][i];\n                    showNote(event.stepIndex, event.delayFromNowToNoteStart, event.delayFromNowToNoteEnd);\n                }\n            }\n        },\n        \n        /**\n         * Show the playback position within the pattern.\n         * Indicated by the pointer's rotation.\n         * @param  {Number} position Position within pattern in ticks.\n         */\n        showPlaybackPosition = function(position) {\n            pointerRotationPrevious = pointerRotation;\n            pointerRotation = doublePI * (position % duration / duration);\n        },\n        \n        /**\n         * Show animation of the pattern dot that is about to play. \n         * @param {Number} stepIndex Index of the step to play.\n         * @param {Number} noteStartDelay Delay from now until note start in ms.\n         * @param {Number} noteStopDelay Delay from now until note end in ms.\n         */\n        showNote = function(stepIndex, noteStartDelay, noteStopDelay) {\n            // get the coordinates of the dot for this step\n            let steps = my.data.params.steps.value;\n            \n            // retain necklace dot state in object\n            dotAnimations[stepIndex] = {\n                position2d: necklace[stepIndex].center,\n                boundingBox: necklace[stepIndex].rect,\n                dotRadius: 0\n            }\n            \n            let tweeningDot = dotAnimations[stepIndex];\n            \n            // animate the necklace dot\n            new __WEBPACK_IMPORTED_MODULE_3__tweenjs_tween_js___default.a.Tween({currentRadius: dotActiveRadius})\n                .to({currentRadius: dotRadius}, 300)\n                .onUpdate(function() {\n                        // store new dot size\n                        tweeningDot.dotRadius = this.currentRadius;\n                    })\n                .onComplete(function() {\n                        // delete dot state object\n                        delete dotAnimations[stepIndex];\n                    })\n                .delay(noteStartDelay)\n                .start();\n        },\n\n        updateDuration = function() {\n            const rate = my.data.params.is_triplets.value ? my.data.params.rate.value * (2 / 3) : my.data.params.rate.value,\n                stepDuration = rate * __WEBPACK_IMPORTED_MODULE_4__core_config__[\"a\" /* PPQN */];\n            duration = my.data.params.steps.value * stepDuration;\n        },\n        \n        /**\n         * Update the pattern dots.\n         * If the steps, pulses or rotation properties have changed.\n         * If steps change it might invalidate the pointer.\n         */\n        updateNecklace = function() {\n            let steps = my.data.params.steps.value,\n                pulses = my.data.params.pulses.value,\n                rotation = my.data.params.rotation.value,\n                euclid, rad, x, y;\n            \n            euclid = Object(__WEBPACK_IMPORTED_MODULE_2__euclid__[\"a\" /* getEuclidPattern */])(steps, pulses);\n            euclid = Object(__WEBPACK_IMPORTED_MODULE_2__euclid__[\"b\" /* rotateEuclidPattern */])(euclid, rotation);\n            \n            necklace = [];\n            \n            // calculate the dot positions\n            necklaceRadius = necklaceMinRadius + (Math.max(0, steps - 16) * 0.8);\n            for (let i = 0; i < steps; i++) {\n                rad = doublePI * (i / steps);\n                x = Math.sin(rad) * necklaceRadius;\n                y = Math.cos(rad) * necklaceRadius;\n                necklace.push({\n                    center: {\n                        x: x,\n                        y: y\n                    },\n                    rect: {\n                        x: x - dotMaxRadius * 2,\n                        y: y + dotMaxRadius * 2,\n                        xAbs: 0,\n                        yAbs: 0,\n                        height: dotMaxRadius * 4,\n                        width: dotMaxRadius * 4\n                    }\n                });\n            }\n            \n            necklaceCtx.clearRect(0, 0, necklaceCanvas.width, necklaceCanvas.height);\n            \n            updateNecklaceAbsolute();\n            updatePolygon(steps, pulses, euclid, necklace);\n            updateDots(steps, euclid, necklace);\n            updatePointer();\n            updateZeroMarker(steps, rotation);\n            updateRotatedMarker(steps, rotation);\n            redrawStaticCanvas();\n            canvasDirtyCallback();\n        },\n        \n        /**\n         * Update the coordinates of the necklace nodes relative to the main canvas.\n         */\n        updateNecklaceAbsolute = function() {\n            let rect;\n            for (let i = 0, n = necklace.length; i < n; i++) {\n                rect = necklace[i].rect;\n                rect.xAbs = position2d.x + rect.x;\n                rect.yAbs = position2d.y - rect.y;\n            }\n        },\n        \n        /**\n         * Show circle if the my.processor is selected, else hide.\n         * @param {Boolean} isSelectedView True if selected.\n         */\n        updateSelectCircle = function(isSelectedView) {\n            isSelected = isSelectedView;\n            if (typeof redrawStaticCanvas == 'function' && typeof canvasDirtyCallback == 'function') {\n                redrawStaticCanvas();\n                canvasDirtyCallback();\n            }\n        },\n        \n        /**\n         * Update pattern's position on the 2D canvas.\n         * @param  {Object} value New 2D position as object.\n         */\n        updatePosition = function(value) {\n            position2d = value;\n            centerDotX = position2d.x - centerDotFullRadius - 1;\n            centerDotY = position2d.y - centerDotFullRadius - 1;\n            updateNecklaceAbsolute();\n            redrawStaticCanvas();\n            canvasDirtyCallback();\n        },\n        \n        /**\n         * Draw polygon.\n         */\n        updatePolygon = function(steps, pulses, euclid, necklace) {\n            if (pulses > 1) {\n                necklaceCtx.fillStyle = my.colorLow;\n                necklaceCtx.strokeStyle = my.colorLow;\n                necklaceCtx.beginPath();\n                let isFirstPoint = true,\n                    firstPoint,\n                    dotCenter;\n                for (let i = 0; i < steps; i++) {\n                    if (euclid[i]) {\n                        dotCenter = necklace[i].center;\n                        if (isFirstPoint) {\n                            isFirstPoint = false;\n                            firstPoint = dotCenter;\n                            necklaceCtx.moveTo(radius + firstPoint.x, radius - firstPoint.y);\n                        } else {\n                            necklaceCtx.lineTo(radius + dotCenter.x, radius - dotCenter.y);\n                        }\n                    }\n                }\n                necklaceCtx.lineTo(radius + firstPoint.x, radius - firstPoint.y);\n                necklaceCtx.stroke();\n                necklaceCtx.globalAlpha = 0.6;\n                necklaceCtx.fill();\n                necklaceCtx.globalAlpha = 1.0;\n            }\n        },\n        \n        /**\n         * Draw the necklace dots in their inactive state.\n         */\n        updateDots = function(steps, euclid, necklace) {\n            dotRadius = dotMaxRadius - 3 - (Math.max(0, steps - 16) * 0.09);\n            dotActiveRadius = dotRadius * 2;\n            \n            necklaceCtx.fillStyle = my.colorHigh;\n            necklaceCtx.strokeStyle = my.colorHigh;\n            let point;\n            for (let i = 0; i < steps; i++) {\n                point = necklace[i].center;\n                if (euclid[i]) {\n                    // active dot\n                    necklaceCtx.beginPath();\n                    necklaceCtx.moveTo(radius + point.x + dotRadius, radius - point.y);\n                    necklaceCtx.arc(radius + point.x, radius - point.y, dotRadius, 0, doublePI, true);\n                    necklaceCtx.fill();\n                    necklaceCtx.stroke();\n                } else {\n                    // passive dot\n                    necklaceCtx.beginPath();\n                    necklaceCtx.moveTo(radius + point.x + dotRadius, radius - point.y);\n                    necklaceCtx.arc(radius + point.x, radius - point.y, dotRadius, 0, doublePI, true);\n                    necklaceCtx.stroke();\n                }\n            }\n        },\n        \n        /**\n         * Update the pointer that connects the dots.\n         */\n        updatePointer = function() {\n            let isMute = my.data.params.is_mute.value,\n                pointerRadius = isMute ? pointerMutedRadius : necklaceRadius,\n                pointerX = isMute ? 15 : 19,\n                pointerY = isMute ? 15 : 6;\n            \n            pointerCtx.clearRect(0, 0, pointerCanvas.width, pointerCanvas.height);\n            pointerCtx.beginPath();\n            pointerCtx.moveTo(pointerCanvasCenter - pointerX, pointerCanvas.height - pointerY);\n            pointerCtx.lineTo(pointerCanvasCenter, pointerCanvas.height - pointerRadius);\n            pointerCtx.lineTo(pointerCanvasCenter + pointerX, pointerCanvas.height - pointerY);\n            pointerCtx.stroke();\n        },\n        \n        /**\n         * Update the zero marker.\n         * @param {Number} steps Euclidean necklace node amount.\n         * @param {Number} rotation Euclidean necklace rotation.\n         */\n        updateZeroMarker = function(steps, rotation) {\n            var rad = doublePI * (-rotation / steps),\n                markerRadius = necklaceRadius + 15,\n                x = radius + (Math.sin(rad) * markerRadius),\n                y = radius - (Math.cos(rad) * markerRadius);\n            \n            necklaceCtx.beginPath();\n            necklaceCtx.moveTo(x, y + zeroMarkerRadius);\n            necklaceCtx.arc(x, y, zeroMarkerRadius, 0, doublePI, true);\n            necklaceCtx.stroke();\n        },\n        \n        /**\n         * Update the marker that indicates if the pattern is rotated.\n         * @param {Number} steps Euclidean necklace node amount.\n         * @param {Number} rotation Euclidean necklace rotation.\n         */\n        updateRotatedMarker = function(steps, rotation) {\n            if (rotation !== 0) {\n                var x = radius,\n                    y = radius - necklaceRadius - 10;\n                \n                necklaceCtx.beginPath();\n                necklaceCtx.moveTo(x, y);\n                necklaceCtx.lineTo(x, y - 10);\n                necklaceCtx.lineTo(x + 6, y - 7);\n                necklaceCtx.lineTo(x, y - 4);\n                necklaceCtx.stroke();\n            }\n        },\n        \n        /**\n         * Update the pattern's name.\n         */\n        updateName = function() {\n            // let name = my.processor.getParamValue('name');\n            let name = my.data.params.name.value;\n            nameCtx.clearRect(0, 0, nameCanvas.width, nameCanvas.height);\n            nameCtx.fillText(my.data.params.name.value, nameCanvas.width / 2, nameCanvas.height / 2);\n            canvasDirtyCallback();\n        },\n        \n        /**\n         * Redraw the pattern's static shapes canvas.\n         */\n        redrawStaticCanvas = function() {\n            staticCtx.clearRect(0, 0, staticCanvas.width, staticCanvas.height);\n            staticCtx.beginPath();\n            \n            // necklace\n            staticCtx.drawImage(necklaceCanvas, 0, 0);\n            \n            // center ring\n            staticCtx.moveTo(radius + centerRadius, radius);\n            staticCtx.arc(radius, radius, centerRadius, 0, doublePI, true);\n            \n            // select circle\n            if (isSelected) {\n                staticCtx.moveTo(radius + selectRadius, radius);\n                staticCtx.arc(radius, radius, selectRadius, 0, doublePI, true);\n            }\n            staticCtx.stroke();\n        },\n        \n        /**\n         * Add the pattern's static canvas to the main static canvas.\n         * @param  {Object} mainStaticCtx 2D canvas context.\n         */\n        addToStaticView = function(mainStaticCtx) {\n            mainStaticCtx.drawImage(\n                staticCanvas,\n                position2d.x - radius,\n                position2d.y - radius);\n            mainStaticCtx.drawImage(\n                nameCanvas,\n                position2d.x - radius,\n                position2d.y + necklaceRadius + 4);\n        },\n        \n        /**\n         * Draw the pattern's dynamic shapes on the main dymamic canvas\n         * @param  {Object} mainStaticCtx 2D canvas context.\n         */\n        addToDynamicView = function(mainDynamicCtx) {\n            // draw rotating pointer\n            mainDynamicCtx.save();\n            mainDynamicCtx.translate(position2d.x, position2d.y);\n            mainDynamicCtx.rotate(pointerRotation);\n            mainDynamicCtx.drawImage(pointerCanvas, -pointerCanvasCenter, -pointerCanvas.height);\n            mainDynamicCtx.restore();\n            \n            mainDynamicCtx.fillStyle = my.colorHigh;\n            mainDynamicCtx.strokeStyle = my.colorHigh;\n            mainDynamicCtx.beginPath();\n            \n            // necklace dots\n            isNoteActive = false;\n            let n = dotAnimations.length,\n                largestDot = dotRadius,\n                hasDotAnimations = false,\n                dotState, x, y;\n            for (let key in dotAnimations) {\n                if (dotAnimations.hasOwnProperty(key)) {\n                    dotState = dotAnimations[key];\n                    x = position2d.x + dotState.position2d.x;\n                    y = position2d.y - dotState.position2d.y;\n                    mainDynamicCtx.moveTo(x + dotState.dotRadius, y);\n                    mainDynamicCtx.arc(x, y, dotState.dotRadius, 0, doublePI, true);\n                    largestDot = Math.max(largestDot, dotState.dotRadius);\n                    isNoteActive = true;\n                }\n            }\n            \n            // center dot\n            if (isNoteActive) {\n                let largestDotNormalised = (largestDot - dotRadius) / (dotActiveRadius - dotRadius);\n                centerDotRadius = largestDotNormalised * centerDotFullRadius;\n                mainDynamicCtx.moveTo(position2d.x + centerDotRadius, position2d.y);\n                mainDynamicCtx.arc(position2d.x, position2d.y, centerDotRadius, 0, doublePI, true);\n            }\n            \n            mainDynamicCtx.fill();\n            mainDynamicCtx.stroke();\n        },\n        \n        /**\n         * Clear all this pattern's elements from the dynamic context.\n         * These are the center dot, necklace dots and pointer.\n         * @param  {Object} mainDynamicCtx 2D canvas context.\n         */\n        clearFromDynamicView = function(mainDynamicCtx) {\n            // center dot\n            if (isNoteActive) {\n                mainDynamicCtx.clearRect(centerDotX, centerDotY, centerDotSize, centerDotSize);\n            }\n            \n            // necklace dots\n            let rect;\n            for (let key in dotAnimations) {\n                if (dotAnimations.hasOwnProperty(key)) {\n                    rect = dotAnimations[key].boundingBox;\n                    mainDynamicCtx.clearRect(rect.xAbs, rect.yAbs, rect.height, rect.width);\n                }\n            }\n            \n            // pointer\n            mainDynamicCtx.save();\n            mainDynamicCtx.translate(position2d.x, position2d.y);\n            mainDynamicCtx.rotate(pointerRotationPrevious);\n            mainDynamicCtx.clearRect(-pointerCanvasCenter, -pointerCanvas.height, pointerCanvas.width, pointerCanvas.height);\n            mainDynamicCtx.restore();\n        },\n        \n        /**\n         * Test if a coordinate intersects with the graphic's hit area.\n         * @param  {Number} x Horizontal coordinate.\n         * @param  {Number} y Vertical coordinate.\n         * @param  {String} type Hit area type, 'processor|inconnector|outconnector'\n         * @return {Boolean} True if the point intersects. \n         */\n        intersectsWithPoint = function(x, y, type) {\n            let distance;\n            switch (type) {\n                case 'processor':\n                    distance = Math.sqrt(Math.pow(x - position2d.x, 2) + Math.pow(y - position2d.y, 2));\n                    return distance <= necklaceRadius + dotRadius;\n                case 'inconnector':\n                    return false;\n                case 'outconnector':\n                    distance = Math.sqrt(Math.pow(x - position2d.x, 2) + Math.pow(y - position2d.y - outConnectorY, 2));\n                    return distance <= my.getConnectorGraphic().canvas.width / 2;\n            }\n        },\n        \n        /**\n         * Set the theme colours of the processor view.\n         * @param {Object} theme Theme settings object.\n         */\n        setTheme = function(theme) {\n            my.colorHigh = theme.colorHigh;\n            my.colorMid = theme.colorMid;\n            my.colorLow = theme.colorLow;\n            staticCtx.strokeStyle = my.colorHigh;\n            necklaceCtx.fillStyle = my.colorHigh;\n            necklaceCtx.strokeStyle = my.colorHigh;\n            pointerCtx.strokeStyle = my.colorHigh;\n            nameCtx.fillStyle = my.colorMid;\n            updateName();\n            updateNecklace();\n            my.getConnectorGraphic().setTheme(theme);\n        },\n        \n        getOutConnectorPoint = function() {\n            return {\n                x: position2d.x,\n                y: position2d.y + outConnectorY\n            }\n        },\n        \n        /**\n         * Provide output connector image for editing connections.\n         * @return {Object} Contains canvas and coordinates.\n         */\n        getOutConnectorGraphic = function() {\n            const canvas = my.getConnectorGraphic().canvas,\n                point = getOutConnectorPoint();\n            return {\n                canvas: canvas,\n                x: point.x - (canvas.width / 2),\n                y: point.y - (canvas.height / 2)\n            };\n        };\n        \n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__view_canvasprocessorbase__[\"a\" /* default */])(specs, my);\n    \n    initialise();\n    \n    that.terminate = terminate;\n    that.setSelected = setSelected;\n    that.draw = draw;\n    that.updatePosition = updatePosition;\n    that.addToStaticView = addToStaticView;\n    that.addToDynamicView = addToDynamicView;\n    that.clearFromDynamicView = clearFromDynamicView;\n    that.intersectsWithPoint = intersectsWithPoint;\n    that.setTheme = setTheme;\n    that.getOutConnectorPoint = getOutConnectorPoint;\n    that.getOutConnectorGraphic = getOutConnectorGraphic;\n    return that;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1NS5qcyIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"createGraphic\"] = createGraphic;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__view_canvasprocessorbase__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__state_selectors__ = __webpack_require__(0);\n\n\n\n/**\n * MIDI output object drawn on canvas.\n */\nfunction createGraphic(specs, my) {\n    let that,\n        canvasDirtyCallback = specs.canvasDirtyCallback,\n        connectorCanvas = specs.connectorCanvas,\n        staticCanvas,\n        staticCtx,\n        nameCanvas,\n        nameCtx,\n        position2d,\n        lineWidth = 2,\n        \n        initialise = function() {\n            // offscreen canvas for static shapes\n            const width = 100,\n                height = 50,\n                radius = 10,\n                boxWidth = 80;\n            staticCanvas = document.createElement('canvas');\n            staticCanvas.height = height;\n            staticCanvas.width = width;\n            staticCtx = staticCanvas.getContext('2d');\n            staticCtx.lineWidth = lineWidth;\n            staticCtx.strokeStyle = my.colorHigh;\n            staticCtx.clearRect(0, 0, width, height);\n            staticCtx.save();\n            staticCtx.translate(width / 2, height / 2 - 10);\n            staticCtx.beginPath();\n            // box\n            staticCtx.rect(-boxWidth / 2, -radius, boxWidth, radius * 2);\n            // arrow\n            staticCtx.moveTo(-boxWidth / 2, radius);\n            staticCtx.lineTo(0, radius + 20)\n            staticCtx.lineTo(boxWidth / 2, radius);\n            // circle\n            staticCtx.moveTo(radius, 0);\n            staticCtx.arc(0, 0, radius, 0, Math.PI * 2, true);\n            staticCtx.stroke();\n            staticCtx.restore90;\n            \n            // offscreen canvas for the name\n            nameCanvas = document.createElement('canvas');\n            nameCanvas.height = 40;\n            nameCanvas.width = 200;\n            nameCtx = nameCanvas.getContext('2d');\n            nameCtx.fillStyle = my.colorMid;\n            nameCtx.font = '14px sans-serif';\n            nameCtx.textAlign = 'center';\n            nameCtx.fillText(Object(__WEBPACK_IMPORTED_MODULE_1__state_selectors__[\"a\" /* getMIDIPortByID */])(specs.data.portID).name, nameCanvas.width / 2, nameCanvas.height / 2);\n            \n            // add listeners to parameters\n            // let params = my.processor.getParameters();\n            // params.position2d.addChangedCallback(updatePosition);\n            \n            // set position on the canvas\n            // position2d = my.data.params.position2d.value;\n            // if (!position2d || (position2d.x == 0 && position2d.y == 0)) {\n            //     // use initial position centered on the canvas\n            //     position2d = specs.data.initialPosition;\n            // }\n            // updatePosition(params.position2d, position2d, position2d);\n            updatePosition(specs.data.position2d);\n        },\n        \n        /**\n         * Called before this view is deleted.\n         */\n        terminate = function() {\n            // let params = my.processor.getParameters();\n            // params.position2d.removeChangedCallback(updatePosition);\n            canvasDirtyCallback = null;\n        },\n\n        setSelected = function(isSelected) {\n            console.log('TODO: setSelected');\n        },\n\n        draw = function() {},\n        \n        /**\n         * Update pattern's position on the 2D canvas.\n         * @param  {Object} value New 2D position as object.\n         */\n        updatePosition = function(value) {\n            position2d = value;\n            canvasDirtyCallback();\n        },\n        \n        addToStaticView = function(mainStaticCtx) {\n            mainStaticCtx.drawImage(\n                staticCanvas,\n                position2d.x - 50,\n                position2d.y - 15);\n                \n            mainStaticCtx.drawImage(\n                nameCanvas,\n                position2d.x - (nameCanvas.width / 2),\n                position2d.y + 30);\n        },\n        \n        addToDynamicView = function(mainDynamicCtx) {\n        },\n        \n        /**\n         * Clear all this pattern's elements from the dynamic context.\n         * These are the center dot, necklace dots and pointer.\n         * @param  {Object} mainDynamicCtx 2D canvas context.\n         */\n        clearFromDynamicView = function(mainDynamicCtx) {\n        },\n        \n        /**\n         * Test if a coordinate intersects with the graphic's hit area.\n         * @param  {Number} x Horizontal coordinate.\n         * @param  {Number} y Vertical coordinate.\n         * @param  {String} type Hit area type, 'processor|inconnector|outconnector'\n         * @return {Boolean} True if the point intersects. \n         */\n        intersectsWithPoint = function(x, y, type) {\n            let distance;\n            switch (type) {\n                case 'processor':\n                    distance = Math.sqrt(Math.pow(x - position2d.x, 2) + Math.pow(y - position2d.y, 2));\n                    return distance <= 10;\n                case 'inconnector':\n                    distance = Math.sqrt(Math.pow(x - position2d.x, 2) + Math.pow(y - position2d.y, 2));\n                    return distance <= my.getConnectorGraphic().canvas.width / 2;\n                case 'outconnector':\n                    return false;\n                }\n        },\n        \n        /**\n         * Set the theme colours of the processor view.\n         * @param {Object} theme Theme settings object.\n         */\n        setTheme = function(theme) {\n            my.colorHigh = theme.colorHigh;\n            my.colorMid = theme.colorMid;\n            my.colorLow = theme.colorLow;\n            my.getConnectorGraphic().setTheme(theme);\n        },\n        \n        getInConnectorPoint = function() {\n            return {\n                x: position2d.x,\n                y: position2d.y\n            }\n        },\n        \n        /**\n         * Provide output connector image for editing connections.\n         * @return {Object} Contains canvas and coordinates.\n         */\n        getInConnectorGraphic = function() {\n            const canvas = my.getConnectorGraphic().canvas,\n                point = getInConnectorPoint();\n            return {\n                canvas: canvas,\n                x: point.x - (canvas.width / 2),\n                y: point.y - (canvas.height / 2)\n            };\n        };\n        \n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__view_canvasprocessorbase__[\"a\" /* default */])(specs, my);\n    \n    initialise();\n    \n    that.terminate = terminate;\n    that.setSelected = setSelected;\n    that.draw = draw;\n    that.addToStaticView = addToStaticView;\n    that.addToDynamicView = addToDynamicView;\n    that.clearFromDynamicView = clearFromDynamicView;\n    that.intersectsWithPoint = intersectsWithPoint;\n    that.setTheme = setTheme;\n    that.getInConnectorPoint = getInConnectorPoint;\n    that.getInConnectorGraphic = getInConnectorGraphic;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCanvasConnectionsView;\n/**\n * Canvas processor connector input and output points,\n * cables between the processor connectors,\n * Delete circles halfway the cables.\n */\nfunction createCanvasConnectionsView(specs, my) {\n    var that,\n        rootEl,\n        connectCanvas,\n        connectCtx,\n        offlineCanvas,\n        offlineCtx,\n        inConnectors,\n        outConnectors,\n        connections,\n        dragData = {\n            isDragging: false,\n            startPoint: {x: 0, y: 0},\n            endPoint: {x: 0, y: 0},\n            lineColor: '#ccc',\n            lineWidth: 1,\n            lineWidthActive: 2\n        },\n    \n        init = function() {\n            rootEl = document.querySelector('.canvas-container');\n            connectCanvas = document.querySelector('.canvas-connect');\n            connectCtx = connectCanvas.getContext('2d');\n            offlineCanvas = document.createElement('canvas');\n            offlineCtx = offlineCanvas.getContext('2d');\n            \n            my.addWindowResizeCallback(onResize);\n            onResize();\n        },\n        \n        onResize = function() {\n            connectCanvas.width = rootEl.clientWidth;\n            connectCanvas.height = rootEl.clientHeight;\n            offlineCanvas.width = rootEl.clientWidth;\n            offlineCanvas.height = rootEl.clientHeight;\n        },\n        \n        /**\n         * Enter or leave application connect mode.\n         * @param {Boolean} isEnabled True to enable connect mode.\n         */\n        toggleConnectMode = function(isEnabled) {\n            my.isConnectMode = isEnabled\n            \n            // show the canvas\n            connectCanvas.dataset.show = isEnabled;\n            \n            drawOfflineCanvas();\n            drawConnectCanvas();\n            my.markDirty();\n        },\n        \n        dragStartConnection = function(processorView, x, y) {\n            dragData.isDragging = true;\n            dragData.startPoint = processorView.getOutConnectorPoint();\n            dragData.endPoint = {x: x, y: y};\n            drawOfflineCanvas();\n        },\n        \n        dragMoveConnection = function(x, y) {\n            dragData.endPoint = {x: x, y: y};\n            drawOfflineCanvas();\n        },\n        \n        dragEndConnection = function() {\n            dragData.isDragging = false;\n            drawOfflineCanvas();\n        },\n        \n        setThemeOnConnections = function() {\n            dragData.lineColor = my.theme.colorHigh || '#333';\n            drawOfflineCanvas();\n            drawConnectCanvas();\n        },\n        \n        updateConnectorsInfo = function() {\n            return;\n\n\n\n\n\n\n\n\n\n            // clear the old info\n            inConnectors = {};\n            outConnectors = {};\n            \n            // loop over all processor views to collect current info\n            const views = my.getProcessorViews(),\n                n = views.length; \n            for (let i = 0, view, processor, viewInfo, viewPos, graphic; i < n; i++) {\n                view = views[i];\n                processor = view.getProcessor();\n                viewInfo = processor.getInfo();\n                viewPos = view.getPosition2d();\n                if (viewInfo.inputs == 1) {\n                    inConnectors[processor.getID()] = {\n                        point: view.getInConnectorPoint(),\n                        graphic: view.getInConnectorGraphic()\n                    }\n                }\n                if (viewInfo.outputs == 1) {\n                    outConnectors[processor.getID()] = {\n                        point: view.getOutConnectorPoint(),\n                        graphic: view.getOutConnectorGraphic()\n                    }\n                }\n            }\n            \n            if (my.isConnectMode) {\n                drawConnectCanvas();\n            }\n        },\n        \n        /**\n         * All connection lines are drawn on the offline canvas,\n         * This happens when processors are created, deleted or moved,\n         * or when Connect Mode is entered or exited.\n         */\n        drawOfflineCanvas = function() {\n            return;\n\n\n\n\n\n\n\n            \n            // clear the canvas\n            offlineCtx.clearRect(0, 0, offlineCanvas.width, offlineCanvas.height);\n            \n            // clear the old info\n            connections = [];\n            \n            const lineWidth = my.isConnectMode ? dragData.lineWidthActive : dragData.lineWidth;\n            \n            // show cables\n            const views = my.getProcessorViews(),\n                n = views.length; \n            let processor, sourceID, destinationID, destinations, numDestinations;\n            offlineCtx.lineWidth = lineWidth;\n            offlineCtx.strokeStyle = dragData.lineColor;\n            offlineCtx.beginPath();\n            for (let i = 0; i < n; i++) {\n                processor = views[i].getProcessor();\n                sourceID = processor.getID();\n                destinations = processor.getDestinations instanceof Function ? processor.getDestinations() : [],\n                numDestinations = destinations.length;\n                for (let j = 0; j < numDestinations; j++) {\n                    destinationID = destinations[j].getID();\n                    let selectPoint = drawCable(outConnectors[sourceID].point, inConnectors[destinationID].point);\n                    connections.push({\n                        sourceProcessor: processor,\n                        destinationProcessor: destinations[j],\n                        selectPoint: selectPoint\n                    });\n                }\n            }\n            \n            // cable currently being dragged\n            if (dragData.isDragging) {\n                drawCable(dragData.startPoint, dragData.endPoint);\n            }\n            \n            offlineCtx.stroke();\n        },\n        \n        /**\n         * Draw a processor connection cable.\n         * @param  {Object} startPoint {x, y} start coordinate.\n         * @param  {Object} endPoint   {x, y} end coordinate.\n         */\n        drawCable = function(startPoint, endPoint) {\n            // line\n            const distance = Math.sqrt(Math.pow(startPoint.x - endPoint.x, 2) + Math.pow(startPoint.y - endPoint.y, 2)),\n                tension = distance / 2,\n                cp1x = startPoint.x,\n                cp1y = startPoint.y + tension,\n                cp2x = endPoint.x,\n                cp2y = endPoint.y + tension;\n            offlineCtx.moveTo(startPoint.x, startPoint.y);\n            offlineCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, endPoint.x, endPoint.y);\n            \n            // endpoint\n            const radius = 5;\n            offlineCtx.moveTo(endPoint.x + radius, endPoint.y);\n            offlineCtx.arc(endPoint.x, endPoint.y, radius, 0, Math.PI * 2, true);\n            \n            // select circle\n            let selectPoint = null;\n            if (my.isConnectMode) {\n                return drawCableSelectPoint(startPoint.x, startPoint.y, cp1x, cp1y, cp2x, cp2y, endPoint.x, endPoint.y);\n            }\n            \n            return selectPoint;\n        },\n        \n        /**\n         * Draw select button halfway the bezier curved cable.\n         * @see https://stackoverflow.com/questions/15397596/find-all-the-points-of-a-cubic-bezier-curve-in-javascript\n         * @param  {[type]} ax [description]\n         * @param  {[type]} ay [description]\n         * @param  {[type]} bx [description]\n         * @param  {[type]} by [description]\n         * @param  {[type]} cx [description]\n         * @param  {[type]} cy [description]\n         * @param  {[type]} dx [description]\n         * @param  {[type]} dy [description]\n         * @return {[type]}    [description]\n         */\n        drawCableSelectPoint = function(ax, ay, bx, by, cx, cy, dx, dy) {\n            const t = 0.5, // halfway the cable\n                b0t = Math.pow(1 - t, 3),\n                b1t = 3 * t * Math.pow(1 - t, 2),\n                b2t = 3 * Math.pow(t, 2) * (1 - t),\n                b3t = Math.pow(t, 3),\n                pxt = (b0t * ax) + (b1t * bx) + (b2t * cx) + (b3t * dx),\n                pyt = (b0t * ay) + (b1t * by) + (b2t * cy) + (b3t * dy),\n                radius = 10;\n            \n            offlineCtx.moveTo(pxt + radius, pyt);\n            offlineCtx.arc(pxt, pyt, radius, 0, Math.PI * 2, true);\n            \n            return {\n                x: pxt,\n                y: pyt\n            };\n        },\n        \n        addConnectionsToCanvas = function(ctx) {\n            ctx.drawImage(offlineCanvas, 0, 0);\n            if (my.isConnectMode) {\n                ctx.drawImage(connectCanvas, 0, 0);\n            }\n        },\n        \n        /**\n         * Draw connector circles and currently dragged line on connectCanvas.\n         */\n        drawConnectCanvas = function() {\n            connectCtx.clearRect(0, 0, connectCanvas.width, connectCanvas.height);\n            \n            if (my.isConnectMode) {\n                // show inputs and outputs\n                let graphic;\n                for (id in inConnectors) {\n                    if (inConnectors.hasOwnProperty(id)) {\n                        graphic = inConnectors[id].graphic;\n                        connectCtx.drawImage(graphic.canvas, graphic.x, graphic.y);\n                    }\n                }\n                for (id in outConnectors) {\n                    if (outConnectors.hasOwnProperty(id)) {\n                        graphic = outConnectors[id].graphic;\n                        connectCtx.drawImage(graphic.canvas, graphic.x, graphic.y);\n                    }\n                }\n            }\n        };\n        \n        // drawConnections = function() {\n        //     connectCtx.clearRect(0, 0, connectCanvas.width, connectCanvas.height);\n        //     \n        //     // show inputs and outputs\n        //     inConnectors = {};\n        //     outConnectors = {};\n        //     const views = my.getProcessorViews(),\n        //         n = views.length; \n        //     for (let i = 0, view, processor, viewInfo, viewPos, graphic; i < n; i++) {\n        //         view = views[i];\n        //         processor = view.getProcessor();\n        //         viewInfo = processor.getInfo();\n        //         viewPos = view.getPosition2d();\n        //         if (viewInfo.inputs == 1) {\n        //             graphic = view.getInConnectorGraphic();\n        //             connectCtx.drawImage(graphic.canvas, graphic.x, graphic.y);\n        //             inConnectors[processor.getID()] = view.getInConnectorPoint();\n        //         }\n        //         if (viewInfo.outputs == 1) {\n        //             graphic = view.getOutConnectorGraphic();\n        //             connectCtx.drawImage(graphic.canvas, graphic.x, graphic.y);\n        //             outConnectors[processor.getID()] = view.getOutConnectorPoint();\n        //         }\n        //     }\n        //     \n        //     // show cables\n        //     let processor, sourceID, destinationID, destinations, numDestinations;\n        //     for (let i = 0; i < n; i++) {\n        //         processor = views[i].getProcessor();\n        //         sourceID = processor.getID();\n        //         destinations = processor.getDestinations instanceof Function ? processor.getDestinations() : [],\n        //         numDestinations = destinations.length;\n        //         for (let j = 0; j < numDestinations; j++) {\n        //             destinationID = destinations[j].getID();\n        //             drawCable(outConnectors[sourceID], inConnectors[destinationID]);\n        //         }\n        //     }\n        //     \n        //     // cable currently being dragged\n        //     if (dragData.isDragging) {\n        //         drawCable(dragData.startPoint, dragData.endPoint);\n        //     }\n        // };\n\n    my = my || {};\n    my.isConnectMode = false,\n    my.dragStartConnection = dragStartConnection;\n    my.dragMoveConnection = dragMoveConnection;\n    my.dragEndConnection = dragEndConnection;\n    my.setThemeOnConnections = setThemeOnConnections;\n    my.updateConnectorsInfo = updateConnectorsInfo;\n    my.drawOfflineCanvas = drawOfflineCanvas;\n    my.addConnectionsToCanvas = addConnectionsToCanvas;\n    \n    that = specs.that || {};\n    \n    init();\n    \n    that.toggleConnectMode = toggleConnectMode;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createPreferencesView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__midi_input__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__midi_output__ = __webpack_require__(60);\n\n\n\n/**\n * Preferences settings view.\n */\nfunction createPreferencesView(specs) {\n    var that,\n        store = specs.store,\n        preferencesEl = document.querySelector('.prefs'),\n        midiInputsEl = document.querySelector('.prefs__inputs'),\n        midiOutputsEl = document.querySelector('.prefs__outputs'),\n        // midiPortViews = [],\n        midiInputsViews = [],\n        midiOutputsViews = [],\n        controls = {\n            darkTheme: {\n                type: 'checkbox',\n                input: document.querySelector('.prefs__dark-theme')\n            }\n        },\n\n        init = function() {\n            controls.darkTheme.input.addEventListener('change', function(e) {\n                store.dispatch(store.getActions().setTheme(e.target.checked));\n            });\n\n            document.addEventListener(store.STATE_CHANGE, (e) => {\n                switch (e.detail.action.type) {\n                    case e.detail.actions.SET_PREFERENCES:\n                    case e.detail.actions.SET_THEME:\n                        updateControl('dark-theme', e.detail.state.preferences.isDarkTheme);\n                        break;\n                    \n                    case e.detail.actions.ADD_MIDI_PORT:\n                        createMIDIPortView(e.detail.state, e.detail.action.isInput);\n                        break;\n                    \n                    case e.detail.actions.REMOVE_MIDI_PORT:\n                        deleteMIDIPortView(e.detail.state, e.detail.action.isInput);\n                        break;\n                }\n            });\n        },\n\n        /**\n         * Callback function to update one of the controls after if the\n         * preference's state changed.\n         * @param {String} key Key that indicates the control.\n         * @param {Boolean} value Value of the control.\n         */\n        updateControl = function(key, value) {\n            switch (key) {\n                case 'dark-theme':\n                    controls.darkTheme.input.checked = value;\n                    break;\n            }\n        },\n\n        /**\n         * Create view for a MIDI input or output port.\n         * @param {Boolean} isInput True if the port in an input.\n         * @param {Object} port MIDI port object.\n         */\n        createMIDIPortView = function(state, isInput) {\n            let data, views, createFunction, parentEl;\n            if (isInput) {\n                data = state.inputs;\n                views = midiInputsViews;\n                createFunction = __WEBPACK_IMPORTED_MODULE_0__midi_input__[\"a\" /* default */];\n                parentEl = midiInputsEl;\n            } else {\n                data = state.outputs;\n                views = midiOutputsViews;\n                createFunction = __WEBPACK_IMPORTED_MODULE_1__midi_output__[\"a\" /* default */];\n                parentEl = midiOutputsEl;\n            }\n\n            for (let i = 0, n = data.length; i < n; i++) {\n                let isFound = false;\n                for (let j = 0, p = views.length; j < p; j++) {\n                    if (data[i].id === views[j].getID()) {\n                        isFound = true;\n                        break;\n                    }\n                }\n                if (!isFound) {\n                    let view = createFunction({\n                        store: store,\n                        id: data[i].id,\n                        name: data[i].name,\n                        parentEl: parentEl,\n                        isInput: isInput\n                    });\n                    views.splice(i, 0, view);\n                }\n            }\n\n            // var view;\n            // if (isInput) {\n            //     view = ns.createMIDIInputView({\n            //         parentEl: midiInputsEl,\n            //         port: port\n            //     });\n            // } else {\n            //     view = ns.createMIDIOutputView({\n            //         parentEl: midiOutputsEl,\n            //         port: port\n            //     });\n            // }\n            // midiPortViews.push(view);\n        },\n\n        /**\n         * Delete view for a MIDI input or output processor.\n         * @param  {Object} processor MIDI processor for a MIDI input or output.\n         */\n        deleteMIDIPortView = function(state, isInput) {\n            if (isInput) {\n                data = state.inputs;\n                views = midiInputsViews;\n            } else {\n                data = state.outputs;\n                views = midiOutputsViews;\n            }\n            var n = views.length;\n            while (--n >= 0) {\n                let isFound = false;\n                for (let i = 0, p = data.length; i < p; i++) {\n                    if (data[i].id === views[n].getID()) {\n                        isFound = true;\n                        break\n                    }\n                }\n                if (!isFound) {\n                    views[n].terminate();\n                    views.splice(n, 1);\n                    return;\n                }\n\n                // if (midiPortViews[n].hasProcessor(processor)) {\n                //     midiPortViews[n].terminate();\n                //     midiPortViews.splice(n, 1);\n                //     return false;\n                // }\n            }\n        };\n\n    that = specs.that;\n\n    init();\n\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIInputView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__midi_base__ = __webpack_require__(10);\n\n\n/**\n * MIDI Input processor view.\n */\nfunction createMIDIInputView(specs, my) {\n    var that,\n        \n        /**\n         * This init function is called after the base view's initialise function,\n         * so properties of on 'my' are available.\n         */\n        init = function() {\n            my.networkEl.dataset.disabled = 'true';\n            my.networkEl.querySelector('input').setAttribute('disabled', 'disabled');\n        };\n        \n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__midi_base__[\"a\" /* default */])(specs, my);\n    \n    init();\n\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9taWRpX2lucHV0LmpzPzdjZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiI1OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVNSURJQmFzZVZpZXcgZnJvbSAnLi9taWRpX2Jhc2UnO1xuXG4vKipcbiAqIE1JREkgSW5wdXQgcHJvY2Vzc29yIHZpZXcuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU1JRElJbnB1dFZpZXcoc3BlY3MsIG15KSB7XG4gICAgdmFyIHRoYXQsXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBpbml0IGZ1bmN0aW9uIGlzIGNhbGxlZCBhZnRlciB0aGUgYmFzZSB2aWV3J3MgaW5pdGlhbGlzZSBmdW5jdGlvbixcbiAgICAgICAgICogc28gcHJvcGVydGllcyBvZiBvbiAnbXknIGFyZSBhdmFpbGFibGUuXG4gICAgICAgICAqL1xuICAgICAgICBpbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBteS5uZXR3b3JrRWwuZGF0YXNldC5kaXNhYmxlZCA9ICd0cnVlJztcbiAgICAgICAgICAgIG15Lm5ldHdvcmtFbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgbXkgPSBteSB8fCB7fTtcbiAgICBcbiAgICB0aGF0ID0gY3JlYXRlTUlESUJhc2VWaWV3KHNwZWNzLCBteSk7XG4gICAgXG4gICAgaW5pdCgpO1xuXG4gICAgcmV0dXJuIHRoYXQ7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy93aC92aWV3L21pZGlfaW5wdXQuanNcbi8vIG1vZHVsZSBpZCA9IDU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMIDIOutputView;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__midi_base__ = __webpack_require__(10);\n\n\n/**\n * MIDI Output processor view.\n */\nfunction createMIDIOutputView(specs, my) {\n    var that,\n        \n        /**\n         * This init function is called after the base view's initialise function,\n         * so properties of on 'my' are available.\n         */\n        init = function() {\n            my.syncEl.dataset.disabled = 'true';\n            my.syncEl.querySelector('input').setAttribute('disabled', 'disabled');\n            my.remoteEl.dataset.disabled = 'true';\n            my.remoteEl.querySelector('input').setAttribute('disabled', 'disabled');\n        };\n        \n    my = my || {};\n    \n    that = Object(__WEBPACK_IMPORTED_MODULE_0__midi_base__[\"a\" /* default */])(specs, my);\n    \n    init();\n\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9taWRpX291dHB1dC5qcz83Nzk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjYwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZU1JRElCYXNlVmlldyBmcm9tICcuL21pZGlfYmFzZSc7XG5cbi8qKlxuICogTUlESSBPdXRwdXQgcHJvY2Vzc29yIHZpZXcuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU1JRElPdXRwdXRWaWV3KHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgaW5pdCBmdW5jdGlvbiBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGJhc2UgdmlldydzIGluaXRpYWxpc2UgZnVuY3Rpb24sXG4gICAgICAgICAqIHNvIHByb3BlcnRpZXMgb2Ygb24gJ215JyBhcmUgYXZhaWxhYmxlLlxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbXkuc3luY0VsLmRhdGFzZXQuZGlzYWJsZWQgPSAndHJ1ZSc7XG4gICAgICAgICAgICBteS5zeW5jRWwucXVlcnlTZWxlY3RvcignaW5wdXQnKS5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICBteS5yZW1vdGVFbC5kYXRhc2V0LmRpc2FibGVkID0gJ3RydWUnO1xuICAgICAgICAgICAgbXkucmVtb3RlRWwucXVlcnlTZWxlY3RvcignaW5wdXQnKS5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgIG15ID0gbXkgfHwge307XG4gICAgXG4gICAgdGhhdCA9IGNyZWF0ZU1JRElCYXNlVmlldyhzcGVjcywgbXkpO1xuICAgIFxuICAgIGluaXQoKTtcblxuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvdmlldy9taWRpX291dHB1dC5qc1xuLy8gbW9kdWxlIGlkID0gNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createRemoteView;\n/**\n * Overview list of all assigned MIDI controller assignments.\n */\nfunction createRemoteView(specs, my) {\n    var that,\n        appView = specs.appView,\n        midiRemote = specs.midiRemote,\n        rootEl = document.querySelector('.remote'),\n        listEl = document.querySelector('.remote__list'),\n        groupViews = [],\n        \n        /**\n         * Create a container view to hold assigned parameter views.\n         * @param {Object} processor Processor with assignable parameters.\n         */\n        createRemoteGroup = function(processor) {\n            var remoteGroupView = ns.createRemoteGroupView({\n                processor: processor,\n                parentEl: listEl\n            });\n            groupViews.push(remoteGroupView);\n            appView.renderLayout();\n        },\n        \n        /**\n         * Delete a container view to hold assigned parameter views.\n         * @param {Object} processor Processor with assignable parameters.\n         */\n        deleteRemoteGroup = function(processor) {\n            var n = groupViews.length;\n            while (--n >= 0) {\n                if (groupViews[n].hasProcessor(processor)) {\n                    groupViews[n].terminate();\n                    groupViews.splice(n, 1);\n                    appView.renderLayout();\n                    return false;\n                }\n            }\n        },\n        \n        /**\n         * Add a parameter that is assigned.\n         * @param  {Object} param Processor parameter.\n         */\n        addParameter = function(param) {\n            var n = groupViews.length;\n            while (--n >= 0) {\n                if (groupViews[n].hasParameter(param)) {\n                    groupViews[n].addParameter(param, midiRemote.unassingParameter);\n                    appView.renderLayout();\n                    return;\n                }\n            }\n        },\n        \n        /**\n         * Remove a parameter that isn't assigned anymore.\n         * @param  {Object} param Processor parameter.\n         */\n        removeParameter = function(param) {\n            var n = groupViews.length;\n            while (--n >= 0) {\n                if (groupViews[n].hasParameter(param)) {\n                    groupViews[n].removeParameter(param);\n                    appView.renderLayout();\n                    return;\n                }\n            }\n        };\n    \n    that = specs.that || {};\n    \n    that.createRemoteGroup = createRemoteGroup;\n    that.deleteRemoteGroup = deleteRemoteGroup;\n    that.addParameter = addParameter;\n    that.removeParameter = removeParameter;\n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9yZW1vdGUuanM/MWRiYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogT3ZlcnZpZXcgbGlzdCBvZiBhbGwgYXNzaWduZWQgTUlESSBjb250cm9sbGVyIGFzc2lnbm1lbnRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVSZW1vdGVWaWV3KHNwZWNzLCBteSkge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBhcHBWaWV3ID0gc3BlY3MuYXBwVmlldyxcbiAgICAgICAgbWlkaVJlbW90ZSA9IHNwZWNzLm1pZGlSZW1vdGUsXG4gICAgICAgIHJvb3RFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZW1vdGUnKSxcbiAgICAgICAgbGlzdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlbW90ZV9fbGlzdCcpLFxuICAgICAgICBncm91cFZpZXdzID0gW10sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQ3JlYXRlIGEgY29udGFpbmVyIHZpZXcgdG8gaG9sZCBhc3NpZ25lZCBwYXJhbWV0ZXIgdmlld3MuXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9jZXNzb3IgUHJvY2Vzc29yIHdpdGggYXNzaWduYWJsZSBwYXJhbWV0ZXJzLlxuICAgICAgICAgKi9cbiAgICAgICAgY3JlYXRlUmVtb3RlR3JvdXAgPSBmdW5jdGlvbihwcm9jZXNzb3IpIHtcbiAgICAgICAgICAgIHZhciByZW1vdGVHcm91cFZpZXcgPSBucy5jcmVhdGVSZW1vdGVHcm91cFZpZXcoe1xuICAgICAgICAgICAgICAgIHByb2Nlc3NvcjogcHJvY2Vzc29yLFxuICAgICAgICAgICAgICAgIHBhcmVudEVsOiBsaXN0RWxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZ3JvdXBWaWV3cy5wdXNoKHJlbW90ZUdyb3VwVmlldyk7XG4gICAgICAgICAgICBhcHBWaWV3LnJlbmRlckxheW91dCgpO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlbGV0ZSBhIGNvbnRhaW5lciB2aWV3IHRvIGhvbGQgYXNzaWduZWQgcGFyYW1ldGVyIHZpZXdzLlxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcHJvY2Vzc29yIFByb2Nlc3NvciB3aXRoIGFzc2lnbmFibGUgcGFyYW1ldGVycy5cbiAgICAgICAgICovXG4gICAgICAgIGRlbGV0ZVJlbW90ZUdyb3VwID0gZnVuY3Rpb24ocHJvY2Vzc29yKSB7XG4gICAgICAgICAgICB2YXIgbiA9IGdyb3VwVmlld3MubGVuZ3RoO1xuICAgICAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwVmlld3Nbbl0uaGFzUHJvY2Vzc29yKHByb2Nlc3NvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXBWaWV3c1tuXS50ZXJtaW5hdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXBWaWV3cy5zcGxpY2UobiwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGFwcFZpZXcucmVuZGVyTGF5b3V0KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogQWRkIGEgcGFyYW1ldGVyIHRoYXQgaXMgYXNzaWduZWQuXG4gICAgICAgICAqIEBwYXJhbSAge09iamVjdH0gcGFyYW0gUHJvY2Vzc29yIHBhcmFtZXRlci5cbiAgICAgICAgICovXG4gICAgICAgIGFkZFBhcmFtZXRlciA9IGZ1bmN0aW9uKHBhcmFtKSB7XG4gICAgICAgICAgICB2YXIgbiA9IGdyb3VwVmlld3MubGVuZ3RoO1xuICAgICAgICAgICAgd2hpbGUgKC0tbiA+PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwVmlld3Nbbl0uaGFzUGFyYW1ldGVyKHBhcmFtKSkge1xuICAgICAgICAgICAgICAgICAgICBncm91cFZpZXdzW25dLmFkZFBhcmFtZXRlcihwYXJhbSwgbWlkaVJlbW90ZS51bmFzc2luZ1BhcmFtZXRlcik7XG4gICAgICAgICAgICAgICAgICAgIGFwcFZpZXcucmVuZGVyTGF5b3V0KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFxuICAgICAgICAvKipcbiAgICAgICAgICogUmVtb3ZlIGEgcGFyYW1ldGVyIHRoYXQgaXNuJ3QgYXNzaWduZWQgYW55bW9yZS5cbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBwYXJhbSBQcm9jZXNzb3IgcGFyYW1ldGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgcmVtb3ZlUGFyYW1ldGVyID0gZnVuY3Rpb24ocGFyYW0pIHtcbiAgICAgICAgICAgIHZhciBuID0gZ3JvdXBWaWV3cy5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgICAgICBpZiAoZ3JvdXBWaWV3c1tuXS5oYXNQYXJhbWV0ZXIocGFyYW0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwVmlld3Nbbl0ucmVtb3ZlUGFyYW1ldGVyKHBhcmFtKTtcbiAgICAgICAgICAgICAgICAgICAgYXBwVmlldy5yZW5kZXJMYXlvdXQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICBcbiAgICB0aGF0ID0gc3BlY3MudGhhdCB8fCB7fTtcbiAgICBcbiAgICB0aGF0LmNyZWF0ZVJlbW90ZUdyb3VwID0gY3JlYXRlUmVtb3RlR3JvdXA7XG4gICAgdGhhdC5kZWxldGVSZW1vdGVHcm91cCA9IGRlbGV0ZVJlbW90ZUdyb3VwO1xuICAgIHRoYXQuYWRkUGFyYW1ldGVyID0gYWRkUGFyYW1ldGVyO1xuICAgIHRoYXQucmVtb3ZlUGFyYW1ldGVyID0gcmVtb3ZlUGFyYW1ldGVyO1xuICAgIHJldHVybiB0aGF0O1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvd2gvdmlldy9yZW1vdGUuanNcbi8vIG1vZHVsZSBpZCA9IDYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createFileView;\n/**\n * @description File handling view.\n * @author Wouter Hisschemöller\n * @version 0.0.0\n */\nfunction createFileView(specs) {\n    var that,\n        file = specs.file,\n        fileEl,\n        \n        init = function() {\n            fileEl = document.querySelector('.file');\n            fileEl.querySelector('.file__new').addEventListener('click', function(e) {\n                file.createNew();\n            });\n            fileEl.querySelector('.file__import').addEventListener('change', function(e) {\n                file.importFile(e.target.files[0]);\n                this.value = null;\n            });\n            fileEl.querySelector('.file__export').addEventListener('click', function(e) {\n                file.exportFile();\n            });\n        };\n    \n    that = specs.that;\n    \n    init();\n    \n    return that;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2gvdmlldy9maWxlLmpzPzFmZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGRlc2NyaXB0aW9uIEZpbGUgaGFuZGxpbmcgdmlldy5cbiAqIEBhdXRob3IgV291dGVyIEhpc3NjaGVtw7ZsbGVyXG4gKiBAdmVyc2lvbiAwLjAuMFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVGaWxlVmlldyhzcGVjcykge1xuICAgIHZhciB0aGF0LFxuICAgICAgICBmaWxlID0gc3BlY3MuZmlsZSxcbiAgICAgICAgZmlsZUVsLFxuICAgICAgICBcbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZmlsZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZpbGUnKTtcbiAgICAgICAgICAgIGZpbGVFbC5xdWVyeVNlbGVjdG9yKCcuZmlsZV9fbmV3JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgZmlsZS5jcmVhdGVOZXcoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZmlsZUVsLnF1ZXJ5U2VsZWN0b3IoJy5maWxlX19pbXBvcnQnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgZmlsZS5pbXBvcnRGaWxlKGUudGFyZ2V0LmZpbGVzWzBdKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZmlsZUVsLnF1ZXJ5U2VsZWN0b3IoJy5maWxlX19leHBvcnQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBmaWxlLmV4cG9ydEZpbGUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIFxuICAgIHRoYXQgPSBzcGVjcy50aGF0O1xuICAgIFxuICAgIGluaXQoKTtcbiAgICBcbiAgICByZXR1cm4gdGhhdDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3doL3ZpZXcvZmlsZS5qc1xuLy8gbW9kdWxlIGlkID0gNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///62\n");

/***/ })
/******/ ]);